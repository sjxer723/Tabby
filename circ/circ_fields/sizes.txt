print-type-size type: `core::ptr::metadata::PtrComponents<[(char, char)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[(char, char)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-xid-0.2.2/src/tables.rs:22:24: 22:35]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, &str>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.matcher`: 104 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::str::Split<'_, &str>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.0`: 128 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::env::VarError>, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::env::VarError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::error::Error>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `[closure@std::rt::lang_start<std::result::Result<(), std::boxed::Box<dyn std::error::Error>>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<std::env::VarError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Erased<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::env::VarError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::env::VarError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `Atomics`: 5 bytes, alignment: 1 bytes
print-type-size     field `.has_8`: 1 bytes
print-type-size     field `.has_16`: 1 bytes
print-type-size     field `.has_32`: 1 bytes
print-type-size     field `.has_64`: 1 bytes
print-type-size     field `.has_ptr`: 1 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::error::private::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::any::Demand<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Erased<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::env::VarError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `lazy::std::sync::Once`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `lazy::std::sys_common::once::futex::Once`: 4 bytes, alignment: 4 bytes
print-type-size     field `.state`: 4 bytes
print-type-size type: `core::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#3}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#2}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@std::iter::DoubleEndedIterator::rfind::check<usize, [closure@std::str::pattern::simd_contains::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Windows<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::core_simd::masks::mask_impl::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::simd::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<u8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `Compiler`: 8 bytes, alignment: 4 bytes
print-type-size     field `.minor`: 4 bytes
print-type-size     field `.nightly`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&[u8], [closure@std::str::pattern::simd_contains::{closure#1}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<Compiler>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::simd::Simd<u8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::fs::Metadata`: 176 bytes, alignment: 8 bytes
print-type-size     field `.0`: 176 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, std::io::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::sys::unix::fs::FileAttr, std::io::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::sys::unix::fs::FileAttr`: 176 bytes, alignment: 8 bytes
print-type-size     field `.statx_extra_fields`: 32 bytes
print-type-size     field `.stat`: 144 bytes
print-type-size type: `libc::unix::linux_like::linux::gnu::b64::x86_64::stat64`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__reserved`: 24 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::string::FromUtf8Error`: 40 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@std::rt::begin_panic<&str>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::fs::StatxExtraFields>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size     field `.height`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&str, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::rt::begin_panic::PanicPayload<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::fmt::Arguments<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(u32, bool)>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn core::panic::BoxMeUp>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.119/build.rs:126:14: 126:19]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn core::panic::BoxMeUp>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::fs::StatxExtraFields`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stx_btime`: 16 bytes
print-type-size     field `.stx_mask`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `libc::unix::linux_like::linux::gnu::statx_timestamp`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 4 bytes
print-type-size     field `.__statx_timestamp_pad1`: 4 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::process::ExitStatus, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sys::unix::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.custom_flags`: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/az-1.2.0/build.rs:38:25: 38:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/az-1.2.0/build.rs:47:25: 47:27]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/az-1.2.0/build.rs:60:36: 60:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/az-1.2.0/build.rs:69:36: 69:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/az-1.2.0/build.rs:75:47: 75:50]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/az-1.2.0/build.rs:77:25: 77:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fs::DirBuilder`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `.recursive`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fs::DirBuilder`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::sys::unix::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size     discriminant: 1 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.program`: 16 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.args`: 24 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.value`: 0 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::process::Output>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `Choice`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#3}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#2}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::borrow::Cow<'_, str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@std::iter::DoubleEndedIterator::rfind::check<usize, [closure@std::str::pattern::simd_contains::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Windows<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::core_simd::masks::mask_impl::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&str, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::simd::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<u8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `RustcVersion`: 8 bytes, alignment: 4 bytes
print-type-size     field `.minor`: 4 bytes
print-type-size     field `.nightly`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/build.rs:181:40: 181:49]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&[u8], [closure@std::str::pattern::simd_contains::{closure#1}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&str, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/build.rs:181:40: 181:49]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<RustcVersion>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::iter::Iterator<Item = &str>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::simd::Simd<u8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::iter::Empty<&str>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::iter::Iterator<Item = &str>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn() -> &str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::fs::Metadata`: 176 bytes, alignment: 8 bytes
print-type-size     field `.0`: 176 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, std::io::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::sys::unix::fs::FileAttr, std::io::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::sys::unix::fs::FileAttr`: 176 bytes, alignment: 8 bytes
print-type-size     field `.statx_extra_fields`: 32 bytes
print-type-size     field `.stat`: 144 bytes
print-type-size type: `libc::unix::linux_like::linux::gnu::b64::x86_64::stat64`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__reserved`: 24 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::fs::StatxExtraFields>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::fs::StatxExtraFields`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stx_btime`: 16 bytes
print-type-size     field `.stx_mask`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `libc::unix::linux_like::linux::gnu::statx_timestamp`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 4 bytes
print-type-size     field `.__statx_timestamp_pad1`: 4 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::process::ExitStatus, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sys::unix::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.custom_flags`: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/build.rs:51:25: 51:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/build.rs:60:25: 60:27]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/build.rs:73:36: 73:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/build.rs:82:36: 82:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/build.rs:88:47: 88:50]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/build.rs:90:25: 90:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::fs::DirBuilder`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `.recursive`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fs::DirBuilder`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::sys::unix::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, u128>, core::slice::ChunksMut<'_, u8>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, u16>, core::slice::ChunksMut<'_, u8>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, u32>, core::slice::ChunksMut<'_, u8>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, u64>, core::slice::ChunksMut<'_, u8>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::option::Option<core::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&u128, &mut [u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&u16, &mut [u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&u32, &mut [u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&u64, &mut [u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::slice::ChunksMut<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `core::result::Result<[u8; 16], core::array::TryFromSliceError>`: 17 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u128]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u16]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u128]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u16]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::slice::Iter<'_, u128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::Iter<'_, u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::Iter<'_, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::Iter<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, f32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u16>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::result::Result<[u8; 8], core::array::TryFromSliceError>`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&mut f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut u128>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut u16>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::NonNull<f32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<f32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u128>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<[u8; 4], core::array::TryFromSliceError>`: 5 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<[u8; 2], core::array::TryFromSliceError>`: 3 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::option::Option<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `BigEndian`: 0 bytes, alignment: 1 bytes
print-type-size type: `LittleEndian`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::array::TryFromSliceError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut f32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut f64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u128>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u128>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u16>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::option::Option<core::ops::Range<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::option::Option<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `comu::Const`: 0 bytes, alignment: 1 bytes
print-type-size type: `comu::Mut`: 0 bytes, alignment: 1 bytes
print-type-size type: `comu::NullPtrError`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::fs::Metadata`: 176 bytes, alignment: 8 bytes
print-type-size     field `.0`: 176 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, error::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, std::io::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::sys::unix::fs::FileAttr, std::io::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::sys::unix::fs::FileAttr`: 176 bytes, alignment: 8 bytes
print-type-size     field `.statx_extra_fields`: 32 bytes
print-type-size     field `.stat`: 144 bytes
print-type-size type: `libc::unix::linux_like::linux::gnu::b64::x86_64::stat64`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__reserved`: 24 bytes
print-type-size type: `AutoCfg`: 128 bytes, alignment: 8 bytes
print-type-size     field `.rustc_version`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.rustc`: 24 bytes
print-type-size     field `.rustflags`: 24 bytes
print-type-size     field `.no_std`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<AutoCfg, error::Error>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `core::str::iter::SplitNInternal<'_, char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::str::SplitN<'_, char>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<std::str::Split<'_, char>, for<'a> fn(&'a str) -> &'a str {core::str::<impl str>::trim}>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:446:25: 446:28]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Map<std::str::Split<'_, char>, for<'a> fn(&'a str) -> &'a str {core::str::<impl str>::trim}>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:446:25: 446:28]>, for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Map<std::str::Split<'_, char>, for<'a> fn(&'a str) -> &'a str {core::str::<impl str>::trim}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Map<std::str::Split<'_, char>, for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Map<std::str::SplitTerminator<'_, char>, core::str::LinesAnyMap>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::str::Lines<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::SplitTerminator<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#3}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `std::str::pattern::CharPredicateSearcher<'_, [closure@core::str::<impl str>::trim::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::str::pattern::MultiCharEqSearcher<'_, [closure@core::str::<impl str>::trim::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:399:19: 399:27]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:400:35: 400:40]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#2}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::fs::StatxExtraFields>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::process::Child, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::process::Child, std::io::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 28 bytes
print-type-size         field `.0`: 28 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<version::Version, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `std::process::Child`: 28 bytes, alignment: 4 bytes
print-type-size     field `.handle`: 16 bytes
print-type-size     field `.stdin`: 4 bytes
print-type-size     field `.stdout`: 4 bytes
print-type-size     field `.stderr`: 4 bytes
print-type-size type: `[closure@std::iter::DoubleEndedIterator::rfind::check<usize, [closure@std::str::pattern::simd_contains::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `error::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 24 bytes
print-type-size type: `error::ErrorKind`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Utf8`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Other`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Io`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Num`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&str, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<bool, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::process::ExitStatus, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::slice::Windows<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::str::CharIndices<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sync::remutex::ReentrantMutex<std::cell::RefCell<std::io::stdio::StderrRaw>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.owner`: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.mutex`: 4 bytes
print-type-size     field `.lock_count`: 4 bytes
print-type-size type: `std::sys::unix::fs::StatxExtraFields`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stx_btime`: 16 bytes
print-type-size     field `.stx_mask`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `version::Version`: 24 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size type: `[closure@<std::str::CharIndices<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_try_fold<'_, &str, &str, (), std::ops::ControlFlow<&str>, for<'a> fn(&'a str) -> &'a str {core::str::<impl str>::trim}, [closure@std::iter::Iterator::find::check<&str, &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:446:25: 446:28]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::core_simd::masks::mask_impl::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `libc::unix::linux_like::linux::gnu::statx_timestamp`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 4 bytes
print-type-size     field `.__statx_timestamp_pad1`: 4 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Map<std::str::Chars<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:385:14: 385:17]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<&str, std::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<&str, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::process::ExitStatus, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::simd::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<u8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sys::unix::process::process_inner::Process`: 16 bytes, alignment: 4 bytes
print-type-size     field `.status`: 8 bytes
print-type-size     field `.pid`: 4 bytes
print-type-size     field `.pidfd`: 4 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:408:26: 408:44]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::string::String as std::iter::Extend<char>>::extend<std::iter::Map<std::str::Chars<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:385:14: 385:17]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&[u8], [closure@std::str::pattern::simd_contains::{closure#1}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<&str, &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:446:25: 446:28]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<char, [closure@<std::string::String as std::iter::Extend<char>>::extend<std::iter::Map<std::str::Chars<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:385:14: 385:17]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<char, char, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:385:14: 385:17], [closure@std::iter::Iterator::for_each::call<char, [closure@<std::string::String as std::iter::Extend<char>>::extend<std::iter::Map<std::str::Chars<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:385:14: 385:17]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::RefCell<std::io::stdio::StderrRaw>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::Stderr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ffi::OsString>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_inner::ExitStatus>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Erased<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::fs::Permissions`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::os::linux::process::PidFd>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::process::ChildStderr>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::process::ChildStdin>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::process::ChildStdout>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::os::linux::process::PidFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStderr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdin`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ChildStdout`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fs::FilePermissions`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::sys::unix::locks::futex_mutex::Mutex`: 4 bytes, alignment: 4 bytes
print-type-size     field `.futex`: 4 bytes
print-type-size type: `std::sys::unix::pipe::AnonPipe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::simd::Simd<u8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:156:57: 156:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:385:14: 385:17]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:403:37: 403:39]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs:446:25: 446:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:37:49: 37:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<&&str as std::str::pattern::Pattern<'_>>::is_contained_in::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::find<'_, char>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::trim::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<&str, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/version.rs:37:49: 37:55]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::error::private::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::str::LinesAnyMap`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::any::Demand<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<std::io::stdio::StderrRaw>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::io::stdio::StderrRaw`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Erased<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::unix::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::vec512_storage`: 64 bytes, alignment: 32 bytes
print-type-size     variant `vec512_storage`: 64 bytes
print-type-size         field `.u32x16`: 64 bytes
print-type-size         field `.u64x8`: 64 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.u128x4`: 64 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.sse2`: 64 bytes, offset: 0 bytes, alignment: 16 bytes
print-type-size         field `.avx`: 64 bytes, offset: 0 bytes, alignment: 32 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::arch::x86_64::__m256i`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size     field `.2`: 8 bytes
print-type-size     field `.3`: 8 bytes
print-type-size type: `x86_64::vec256_storage`: 32 bytes, alignment: 32 bytes
print-type-size     variant `vec256_storage`: 32 bytes
print-type-size         field `.u32x8`: 32 bytes
print-type-size         field `.u64x4`: 32 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.u128x2`: 32 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.sse2`: 32 bytes, offset: 0 bytes, alignment: 16 bytes
print-type-size         field `.avx`: 32 bytes, offset: 0 bytes, alignment: 32 bytes
print-type-size type: `core::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `x86_64::vec128_storage`: 16 bytes, alignment: 16 bytes
print-type-size     variant `vec128_storage`: 16 bytes
print-type-size         field `.u32x4`: 16 bytes
print-type-size         field `.u64x2`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.u128x1`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.sse2`: 16 bytes, offset: 0 bytes, alignment: 16 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `core::marker::PhantomData<x86_64::NoS3>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<x86_64::NoS4>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<x86_64::YesS3>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<x86_64::YesS4>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<x86_64::sse2::G0>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<x86_64::sse2::G1>`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::NoA1`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::NoA2`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::NoNI`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::NoS3`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::NoS4`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::YesA1`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::YesA2`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::YesNI`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::YesS3`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::YesS4`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::sse2::G0`: 0 bytes, alignment: 1 bytes
print-type-size type: `x86_64::sse2::G1`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.data`: 544 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 544 bytes, alignment: 8 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.vals`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `Environment`: 288 bytes, alignment: 8 bytes
print-type-size     field `.version_patch`: 16 bytes
print-type-size     field `.cross_target`: 24 bytes
print-type-size     field `.cache_dir`: 24 bytes
print-type-size     field `.rustc`: 24 bytes
print-type-size     field `.c_compiler`: 24 bytes
print-type-size     field `.src_dir`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.lib_dir`: 24 bytes
print-type-size     field `.include_dir`: 24 bytes
print-type-size     field `.build_dir`: 24 bytes
print-type-size     field `.jobs`: 24 bytes
print-type-size     field `.version_prefix`: 24 bytes
print-type-size     field `.target`: 1 bytes
print-type-size     field `.c_no_tests`: 1 bytes
print-type-size     field `.use_system_libs`: 1 bytes
print-type-size     field `.workaround_47048`: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::process::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 208 bytes
print-type-size type: `std::sys::unix::process::process_common::Command`: 208 bytes, alignment: 8 bytes
print-type-size     field `.env`: 32 bytes
print-type-size     field `.cwd`: 16 bytes
print-type-size     field `.groups`: 16 bytes
print-type-size     field `.program`: 16 bytes
print-type-size     field `.args`: 24 bytes
print-type-size     field `.argv`: 24 bytes
print-type-size     field `.closures`: 24 bytes
print-type-size     field `.stdin`: 8 bytes
print-type-size     field `.stdout`: 8 bytes
print-type-size     field `.stderr`: 8 bytes
print-type-size     field `.uid`: 8 bytes
print-type-size     field `.gid`: 8 bytes
print-type-size     field `.pgroup`: 8 bytes
print-type-size     field `.program_kind`: 1 bytes
print-type-size     field `.saw_nul`: 1 bytes
print-type-size     field `.create_pidfd`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::fs::Metadata`: 176 bytes, alignment: 8 bytes
print-type-size     field `.0`: 176 bytes
print-type-size type: `std::result::Result<std::fs::Metadata, std::io::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::sys::unix::fs::FileAttr, std::io::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::sys::unix::fs::FileAttr`: 176 bytes, alignment: 8 bytes
print-type-size     field `.statx_extra_fields`: 32 bytes
print-type-size     field `.stat`: 144 bytes
print-type-size type: `libc::unix::linux_like::linux::gnu::b64::x86_64::stat64`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__reserved`: 24 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::process::Output`: 56 bytes, alignment: 8 bytes
print-type-size     field `.stdout`: 24 bytes
print-type-size     field `.stderr`: 24 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<std::process::Output, std::io::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::sync::ArcInner<std::sys::unix::fs::InnerReadDir>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::BufReader<std::fs::File>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 40 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::path::PathBuf, std::path::PathBuf)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<std::fs::DirEntry, std::io::Error>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#3}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `std::fs::DirEntry`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::io::buffered::bufreader::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.filled`: 8 bytes
print-type-size     field `.initialized`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Rev<std::vec::IntoIter<(std::path::PathBuf, std::option::Option<u64>)>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:435:17: 435:20]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Rev<std::vec::IntoIter<(std::path::PathBuf, std::option::Option<u64>)>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:536:17: 536:20]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Rev<std::vec::IntoIter<(std::path::PathBuf, std::option::Option<u64>)>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:591:17: 591:20]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(std::path::PathBuf, std::option::Option<u64>)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<(std::path::PathBuf, std::option::Option<u64>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<(std::path::PathBuf, std::option::Option<u64>), std::convert::Infallible>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::ops::ControlFlow<(std::path::PathBuf, std::option::Option<u64>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(std::path::PathBuf, std::option::Option<u64>), std::convert::Infallible>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::path::PathBuf, std::option::Option<u64>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::fs::DirEntry, std::io::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::str::pattern::CharPredicateSearcher<'_, [closure@core::str::<impl str>::trim::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::str::pattern::MultiCharEqSearcher<'_, [closure@core::str::<impl str>::trim::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size type: `std::string::FromUtf8Error`: 40 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size type: `std::sys::unix::fs::DirEntry`: 40 bytes, alignment: 8 bytes
print-type-size     field `.entry`: 16 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.dir`: 8 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#2}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::io::BorrowedBuf<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.filled`: 8 bytes
print-type-size     field `.init`: 8 bytes
print-type-size type: `std::io::BufWriter<std::fs::File>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 24 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `.panicked`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::iter::Rev<std::vec::IntoIter<(std::path::PathBuf, std::option::Option<u64>)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::fs::StatxExtraFields>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::ffi::OsString>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::sys::unix::os_str::Buf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::sys::unix::fs::InnerReadDir`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dirp`: 8 bytes
print-type-size     field `.root`: 24 bytes
print-type-size type: `std::sys_common::process::CommandEnv`: 32 bytes, alignment: 8 bytes
print-type-size     field `.vars`: 24 bytes
print-type-size     field `.clear`: 1 bytes
print-type-size     field `.saw_path`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::vec::IntoIter<(std::path::PathBuf, std::option::Option<u64>)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@std::iter::DoubleEndedIterator::rfind::check<usize, [closure@std::str::pattern::simd_contains::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::rt::begin_panic<&str>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `core::slice::sort::merge::MergeHole<(std::path::PathBuf, std::option::Option<u64>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.dest`: 8 bytes
print-type-size type: `core::slice::sort::merge_sort::RunVec<[closure@std::slice::stable_sort<(std::path::PathBuf, std::option::Option<u64>), [closure@std::slice::<impl [(std::path::PathBuf, std::option::Option<u64>)]>::sort_by_key<std::option::Option<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:518:21: 518:24]>::{closure#0}]>::{closure#2}], [closure@std::slice::stable_sort<(std::path::PathBuf, std::option::Option<u64>), [closure@std::slice::<impl [(std::path::PathBuf, std::option::Option<u64>)]>::sort_by_key<std::option::Option<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:518:21: 518:24]>::{closure#0}]>::{closure#3}]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.run_alloc_fn`: 0 bytes
print-type-size     field `.run_dealloc_fn`: 0 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.buf_ptr`: 8 bytes
print-type-size type: `std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(std::path::PathBuf, std::option::Option<u64>)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::option::Option<std::ffi::OsString>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::path::PathBuf>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Windows<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::str::CharIndices<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::fs::StatxExtraFields`: 24 bytes, alignment: 8 bytes
print-type-size     field `.stx_btime`: 16 bytes
print-type-size     field `.stx_mask`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::sys::unix::process::process_common::Argv`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `std::vec::Vec<(std::path::PathBuf, std::option::Option<u64>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<*const i8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::ffi::CString>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1213:40: 1213:43]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:121:35: 121:42]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1242:47: 1242:50]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::str::CharIndices<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::path::PathBuf, std::option::Option<u64>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const i8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::sync::WeakInner<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size type: `core::core_simd::masks::mask_impl::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::slice::sort::InsertionHole<(std::path::PathBuf, std::option::Option<u64>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.src`: 8 bytes
print-type-size     field `.dest`: 8 bytes
print-type-size type: `core::slice::sort::TimSortRun`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::slice::sort::merge_sort::BufGuard<(std::path::PathBuf, std::option::Option<u64>), [closure@std::slice::stable_sort<(std::path::PathBuf, std::option::Option<u64>), [closure@std::slice::<impl [(std::path::PathBuf, std::option::Option<u64>)]>::sort_by_key<std::option::Option<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:518:21: 518:24]>::{closure#0}]>::{closure#1}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem_dealloc_fn`: 0 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.buf_ptr`: 8 bytes
print-type-size type: `libc::unix::linux_like::linux::gnu::statx_timestamp`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 4 bytes
print-type-size     field `.__statx_timestamp_pad1`: 4 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::fs::ReadDir`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::BorrowedCursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::io::BufWriter<W>::flush_buf::BufGuard<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.written`: 8 bytes
print-type-size     field `.buffer`: 8 bytes
print-type-size type: `std::io::Guard<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<*mut (std::path::PathBuf, std::option::Option<u64>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ffi::OsStr>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::path::Path>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::sync::WeakInner<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<[u32]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Display<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.path`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(std::path::PathBuf, std::option::Option<u64>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[core::slice::sort::TimSortRun]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(std::path::PathBuf, std::option::Option<u64>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const i8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[core::slice::sort::TimSortRun]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::ffi::CString]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&[u8], std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::fs::ReadDir, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::process::ExitStatus, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::sys::unix::fs::ReadDir, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u64, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<u64, std::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::rt::begin_panic::PanicPayload<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::simd::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<u8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (std::path::PathBuf, std::option::Option<u64>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, Environment::check_feature::Iteration>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, std::option::Option<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sys::unix::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.custom_flags`: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::sys::unix::fs::ReadDir`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.end_of_stream`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::sys::unix::fs::dirent64_min`: 16 bytes, alignment: 8 bytes
print-type-size     field `.d_ino`: 8 bytes
print-type-size     field `.d_type`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::ffi::OsString, std::option::Option<std::ffi::OsString>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (std::path::PathBuf, std::option::Option<u64>), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1024:33: 1024:36]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1040:25: 1040:27]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1128:25: 1128:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1187:36: 1187:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1196:36: 1196:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1202:47: 1202:50]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1204:25: 1204:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1269:25: 1269:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1283:25: 1283:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1295:48: 1295:51]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1300:50: 1300:53]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1307:25: 1307:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1313:25: 1313:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1316:25: 1316:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:327:25: 327:27]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:435:17: 435:20]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:437:36: 437:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:536:17: 536:20]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:538:36: 538:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:591:17: 591:20]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:593:36: 593:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:956:55: 956:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:962:55: 962:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:968:63: 968:65]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::io::BufReader<std::fs::File> as std::io::BufRead>::read_line::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::io::BufWriter<std::fs::File> as std::io::Write>::flush::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::DoubleEndedIterator::rfind::check<(std::path::PathBuf, std::option::Option<u64>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:435:17: 435:20]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::DoubleEndedIterator::rfind::check<(std::path::PathBuf, std::option::Option<u64>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:536:17: 536:20]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::DoubleEndedIterator::rfind::check<(std::path::PathBuf, std::option::Option<u64>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:591:17: 591:20]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&[u8], [closure@std::str::pattern::simd_contains::{closure#1}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::slice::<impl [(std::path::PathBuf, std::option::Option<u64>)]>::sort_by_key<std::option::Option<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:518:21: 518:24]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::fs::DirBuilder`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size     field `.recursive`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::io::Error>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::RangeToInclusive<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(std::path::PathBuf, std::option::Option<u64>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(std::path::PathBuf, std::path::PathBuf)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&Environment::check_feature::Iteration>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::fmt::Arguments<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::option::Option<&str>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<(std::path::PathBuf, std::option::Option<u64>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<core::slice::sort::TimSortRun>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::process::process_common::Stdio>`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn core::panic::BoxMeUp>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::path::PathBuf, std::option::Option<u64>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<Environment::check_feature::Iteration>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::OsString, std::option::Option<std::ffi::OsString>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::sync::ArcInner<std::sys::unix::fs::InnerReadDir>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<core::slice::sort::TimSortRun>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::option::Option<&str>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(std::path::PathBuf, std::option::Option<u64>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CString>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(std::path::PathBuf, std::option::Option<u64>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<Environment::check_feature::Iteration>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<std::option::Option<&str>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(std::path::PathBuf, std::option::Option<u64>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<Environment::check_feature::Iteration>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<std::option::Option<&str>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&[u8; 2], std::array::TryFromSliceError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<i32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::Arc<std::sys::unix::fs::InnerReadDir>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Weak<std::sys::unix::fs::InnerReadDir>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::unix::fs::Dir`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::sys::unix::process::process_common::Stdio`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherit`: 0 bytes
print-type-size     variant `Null`: 0 bytes
print-type-size     variant `MakePipe`: 0 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::process::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fs::DirBuilder`: 4 bytes, alignment: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size type: `std::sys::unix::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::process::process_inner::ExitStatus`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `NeedCompile`: 3 bytes, alignment: 1 bytes
print-type-size     field `.gmp`: 1 bytes
print-type-size     field `.mpfr`: 1 bytes
print-type-size     field `.mpc`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `Environment::check_feature::Iteration`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Stable`: 0 bytes
print-type-size     variant `Unstable`: 0 bytes
print-type-size type: `Target`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Mingw`: 0 bytes
print-type-size     variant `Msvc`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size type: `Workaround47048`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Yes`: 0 bytes
print-type-size     variant `No`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::simd::Simd<u8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ProgramKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `PathLookup`: 0 bytes
print-type-size     variant `Relative`: 0 bytes
print-type-size     variant `Absolute`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:118:40: 118:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1353:21: 1353:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1355:22: 1355:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1357:29: 1357:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:1358:26: 1358:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:193:21: 193:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:221:25: 221:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:247:25: 247:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:309:25: 309:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:312:29: 312:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:316:29: 316:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:324:25: 324:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:518:21: 518:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:77:55: 77:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::OsString, std::option::Option<std::ffi::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::find<'_, &str>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::find<'_, char>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::rfind<'_, char>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::trim::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::ffi::OsString::into_string::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::append_to_string<[closure@<std::io::BufReader<std::fs::File> as std::io::BufRead>::read_line::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::slice::stable_sort<(std::path::PathBuf, std::option::Option<u64>), [closure@std::slice::<impl [(std::path::PathBuf, std::option::Option<u64>)]>::sort_by_key<std::option::Option<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:518:21: 518:24]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::slice::stable_sort<(std::path::PathBuf, std::option::Option<u64>), [closure@std::slice::<impl [(std::path::PathBuf, std::option::Option<u64>)]>::sort_by_key<std::option::Option<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:518:21: 518:24]>::{closure#0}]>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::slice::stable_sort<(std::path::PathBuf, std::option::Option<u64>), [closure@std::slice::<impl [(std::path::PathBuf, std::option::Option<u64>)]>::sort_by_key<std::option::Option<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:518:21: 518:24]>::{closure#0}]>::{closure#2}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::slice::stable_sort<(std::path::PathBuf, std::option::Option<u64>), [closure@std::slice::<impl [(std::path::PathBuf, std::option::Option<u64>)]>::sort_by_key<std::option::Option<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/gmp-mpfr-sys-1.4.7/build.rs:518:21: 518:24]>::{closure#0}]>::{closure#3}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `libc::unix::DIR`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::array::TryFromSliceError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::path::PathBuf, std::option::Option<u64>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&Environment::check_feature::Iteration>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::option::Option<&str>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::path::PathBuf, std::option::Option<u64>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const i8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<u8>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u32]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::sync::ArcInner<std::sys::unix::fs::InnerReadDir>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn core::panic::BoxMeUp>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::ffi::OsString, std::option::Option<std::ffi::OsString>)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn std::ops::FnMut() -> std::result::Result<(), std::io::Error> + std::marker::Send + std::marker::Sync>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CString>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqPattern<[closure@core::str::<impl str>::trim::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `autocfg::AutoCfg`: 128 bytes, alignment: 8 bytes
print-type-size     field `.rustc_version`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.rustc`: 24 bytes
print-type-size     field `.rustflags`: 24 bytes
print-type-size     field `.no_std`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `autocfg::version::Version`: 24 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `autocfg::AutoCfg`: 128 bytes, alignment: 8 bytes
print-type-size     field `.rustc_version`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.rustc`: 24 bytes
print-type-size     field `.rustflags`: 24 bytes
print-type-size     field `.no_std`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `autocfg::version::Version`: 24 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `std::thread::__LocalKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<'_, proc_macro::bridge::client::BridgeStateL>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size     field `.cell`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::common::thread_local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `proc_macro::bridge::client::BridgeState<'_>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Connected`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `InUse`: 0 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::cell::Cell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 80 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 80 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Bridge<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Chain<std::iter::Take<proc_macro::token_stream::IntoIter>, std::iter::Once<proc_macro::TokenTree>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 40 bytes
print-type-size     field `.b`: 20 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Peekable<proc_macro::token_stream::IntoIter>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.peeked`: 20 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::str::pattern::MultiCharEqSearcher<'_, &[char]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 16 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size type: `core::str::iter::MatchIndicesInternal<'_, char>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::MatchIndices<'_, char>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `segment::Segment`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `String`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Env`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Modifier`: 16 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 12 bytes
print-type-size     variant `Apostrophe`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::iter::Inspect<proc_macro::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/paste-1.0.6/src/attr.rs:40:35: 40:38]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Take<proc_macro::token_stream::IntoIter>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::string::String>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::vec::Vec<segment::Segment>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::iter::Take<proc_macro::token_stream::IntoIter>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::AccessError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::string::String, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<segment::Segment>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `error::Error`: 32 bytes, alignment: 8 bytes
print-type-size     field `.msg`: 24 bytes
print-type-size     field `.begin`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `StaticStr`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 32 bytes, alignment: 8 bytes
print-type-size     field `.FreeFunctions`: 8 bytes
print-type-size     field `.TokenStream`: 8 bytes
print-type-size     field `.SourceFile`: 8 bytes
print-type-size     field `.Span`: 8 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `segment::LitStr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro::TokenStream>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<proc_macro::TokenStream, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<segment::Segment>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<proc_macro::TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<segment::Segment>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<proc_macro::Ident, std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 20 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::str::CharIndices<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<segment::Segment>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Once<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 20 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.value`: 20 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 20 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 20 bytes
print-type-size type: `std::option::IntoIter<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 20 bytes
print-type-size type: `std::option::Item<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.opt`: 20 bytes
print-type-size type: `std::option::Option<proc_macro::Group>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Once<proc_macro::TokenTree>>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<proc_macro::TokenTree>>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/paste-1.0.6/src/lib.rs:390:43: 390:45]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Take<I> as std::iter::Iterator>::try_fold::check<'_, proc_macro::TokenTree, (), std::ops::try_trait::NeverShortCircuit<()>, [closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), proc_macro::TokenTree, &mut [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Chain<std::iter::Take<proc_macro::token_stream::IntoIter>, std::iter::Once<proc_macro::TokenTree>>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<segment::Segment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<'_, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::char::EscapeDefault`: 16 bytes, alignment: 8 bytes
print-type-size     field `.state`: 16 bytes
print-type-size type: `std::char::EscapeDefaultState`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Unicode`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Char`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Backslash`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::char::EscapeUnicode`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hex_digit_idx`: 8 bytes
print-type-size     field `.c`: 4 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::Write::write_fmt::Adapter<'_, std::sys::unix::stdio::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Take<&mut std::iter::Peekable<proc_macro::token_stream::IntoIter>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/paste-1.0.6/src/lib.rs:390:43: 390:45]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[proc_macro::TokenTree]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panicking::r#try::Data<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/paste-1.0.6/src/lib.rs:390:43: 390:45], proc_macro::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 12 bytes
print-type-size         field `.f`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[segment::Segment]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[segment::Segment]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, char>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, segment::Segment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, segment::Segment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::pattern::MultiCharEqPattern<&[char]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::char::CaseMappingIter`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Three`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.2`: 4 bytes
print-type-size     variant `Two`: 8 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 4 bytes
print-type-size     variant `One`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::char::ToLowercase`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `std::char::ToUppercase`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::Ident>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.value`: 12 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, proc_macro::TokenTree, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, segment::Segment, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, std::string::String, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/paste-1.0.6/src/attr.rs:40:35: 40:38]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<&[char] as std::str::pattern::MultiCharEq>::matches::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<proc_macro::TokenStream>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::iter::Once<proc_macro::TokenTree>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::iter::Take<&mut std::iter::Peekable<proc_macro::token_stream::IntoIter>>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Chain<std::iter::Take<proc_macro::token_stream::IntoIter>, std::iter::Once<proc_macro::TokenTree>>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::vec::Vec<proc_macro::TokenTree>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Take<I> as std::iter::Iterator>::for_each::check<'_, proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::iter::Take<&mut std::iter::Peekable<proc_macro::token_stream::IntoIter>>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::string::String as std::iter::Extend<char>>::extend<std::char::EscapeDefault>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::string::String as std::iter::Extend<std::string::String>>::extend<std::vec::IntoIter<std::string::String>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::str::iter::MatchIndicesInternal<'_, char>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BRIDGE_STATE::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<char, [closure@<std::string::String as std::iter::Extend<char>>::extend<std::char::EscapeDefault>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<proc_macro::TokenStream>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::iter::Once<proc_macro::TokenTree>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Chain<std::iter::Take<proc_macro::token_stream::IntoIter>, std::iter::Once<proc_macro::TokenTree>>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::vec::Vec<proc_macro::TokenTree>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<std::string::String, [closure@<std::string::String as std::iter::Extend<std::string::String>>::extend<std::vec::IntoIter<std::string::String>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<proc_macro::token_stream::IntoIter>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::inspect::inspect_try_fold<'_, proc_macro::TokenTree, (), std::ops::ControlFlow<()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/paste-1.0.6/src/attr.rs:40:35: 40:38], [closure@std::iter::Iterator::all::check<proc_macro::TokenTree, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/paste-1.0.6/src/attr.rs:40:55: 40:59]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), proc_macro::TokenTree, &mut [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Chain<std::iter::Take<proc_macro::token_stream::IntoIter>, std::iter::Once<proc_macro::TokenTree>>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::RefMutL<'_, '_, proc_macro::bridge::client::BridgeStateL>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[proc_macro::TokenTree; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[proc_macro::TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut proc_macro::bridge::client::BridgeState<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut segment::Segment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<proc_macro::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&segment::Segment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro::TokenTree; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro::TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<segment::Segment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[proc_macro::TokenTree; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[proc_macro::TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<segment::Segment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<segment::Segment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<segment::Segment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<proc_macro::TokenStream, proc_macro::LexError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `segment::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `Lookbehind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `JointColon`: 0 bytes
print-type-size     variant `DoubleColon`: 0 bytes
print-type-size     variant `Pound`: 0 bytes
print-type-size     variant `PoundBang`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `is_single_interpolation_group::State`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Init`: 0 bytes
print-type-size     variant `Ident`: 0 bytes
print-type-size     variant `Literal`: 0 bytes
print-type-size     variant `Apostrophe`: 0 bytes
print-type-size     variant `Lifetime`: 0 bytes
print-type-size     variant `Colon1`: 0 bytes
print-type-size     variant `Colon2`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `std::cell::Cell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::char::EscapeUnicodeState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size     variant `RightBrace`: 0 bytes
print-type-size     variant `Value`: 0 bytes
print-type-size     variant `LeftBrace`: 0 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size     variant `Backslash`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuit<()>, std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuit<()>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::stdio::Stderr>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::thread::AccessError>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::common::thread_local::fast_local::fast::DtorState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unregistered`: 0 bytes
print-type-size     variant `Registered`: 0 bytes
print-type-size     variant `RunningOrHasRun`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/paste-1.0.6/src/attr.rs:40:55: 40:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::find<'_, char>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::rfind<'_, char>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<proc_macro::TokenTree, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/paste-1.0.6/src/attr.rs:40:55: 40:59]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::bridge::closure::Env`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&char>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut segment::Segment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&segment::Segment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro::TokenTree; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro::TokenTree; 3]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro::TokenTree]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<segment::Segment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {expr}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {item}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {paste}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuit<()>, std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::sys::unix::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `autocfg::AutoCfg`: 128 bytes, alignment: 8 bytes
print-type-size     field `.rustc_version`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.rustc`: 24 bytes
print-type-size     field `.rustflags`: 24 bytes
print-type-size     field `.no_std`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `autocfg::version::Version`: 24 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `autocfg::AutoCfg`: 128 bytes, alignment: 8 bytes
print-type-size     field `.rustc_version`: 24 bytes
print-type-size     field `.target`: 24 bytes
print-type-size     field `.out_dir`: 24 bytes
print-type-size     field `.rustc`: 24 bytes
print-type-size     field `.rustflags`: 24 bytes
print-type-size     field `.no_std`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::env::VarError>, std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::env::VarError>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `autocfg::version::Version`: 24 bytes, alignment: 8 bytes
print-type-size     field `.major`: 8 bytes
print-type-size     field `.minor`: 8 bytes
print-type-size     field `.patch`: 8 bytes
print-type-size type: `std::env::VarError`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NotUnicode`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `NotPresent`: 0 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<std::ffi::OsString>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::env::VarError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::Write::write_fmt::Adapter<'_, std::fs::File>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::io::Error>, std::fs::File>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::Range<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&std::string::String, &std::env::VarError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&str, &std::env::VarError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::error::Error>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::fs::File, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, i32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sys::unix::fs::OpenOptions`: 16 bytes, alignment: 4 bytes
print-type-size     field `.custom_flags`: 4 bytes
print-type-size     field `.mode`: 4 bytes
print-type-size     field `.read`: 1 bytes
print-type-size     field `.write`: 1 bytes
print-type-size     field `.append`: 1 bytes
print-type-size     field `.truncate`: 1 bytes
print-type-size     field `.create`: 1 bytes
print-type-size     field `.create_new`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::rt::lang_start<()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<std::env::VarError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::io::Error>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Erased<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<i32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::env::VarError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::env::VarError>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<i32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<isize, !>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::os::fd::OwnedFd`: 4 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size type: `std::sys::unix::fd::FileDesc`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sys::unix::fs::File`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::process::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::process::process_common::ExitCode`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::error::private::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::any::Demand<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::OsStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&i32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Erased<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::Fn() -> i32 + std::marker::Sync + std::panic::RefUnwindSafe>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::env::VarError>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::path::Path`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::os_str::Slice`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i64, i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<isize, isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<u64, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::cell::Cell<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::Cell<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::result::Result<i32, i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::result::Result<u32, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::sync::atomic::AtomicI64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `core::sync::atomic::AtomicIsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `core::sync::atomic::AtomicU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `core::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `core::cell::Cell<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::cell::Cell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::cell::UnsafeCell<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::option::Option<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i16, i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `core::result::Result<u16, u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `core::sync::atomic::AtomicI32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `core::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `core::cell::Cell<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `core::cell::Cell<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `core::cell::UnsafeCell<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `core::cell::UnsafeCell<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `core::option::Option<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<bool, bool>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i8, i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u8, u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::sync::atomic::AtomicI16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.v`: 2 bytes
print-type-size type: `core::sync::atomic::AtomicU16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.v`: 2 bytes
print-type-size type: `core::cell::Cell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cell::Cell<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cell::Cell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cell::UnsafeCell<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cell::UnsafeCell<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `core::sync::atomic::AtomicI8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `core::sync::atomic::AtomicU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `core::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::ops::RangeInclusive<f64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::option::Option<i128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::result::Result<i128, core::num::ParseIntError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u128, core::num::ParseIntError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i128, core::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<i64, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<isize, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<isize, core::num::TryFromIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u128, core::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<u64, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<usize, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<usize, core::num::TryFromIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeInclusive<f32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i32, core::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i32, core::num::TryFromIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<i64, core::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<u32, core::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u64, core::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<char, core::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<i16, core::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i16, core::num::TryFromIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u16, core::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u16, core::num::TryFromIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u32, core::convert::Infallible>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::option::Option<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i8, core::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i8, core::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u8, core::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u8, core::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::num::FpCategory`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Subnormal`: 0 bytes
print-type-size     variant `Normal`: 0 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `core::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1647:10: 1647:22]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1648:10: 1648:16]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1649:8: 1649:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1650:9: 1650:15]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1651:9: 1651:15]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1652:9: 1652:15]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1653:10: 1653:16]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1654:11: 1654:17]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1655:8: 1655:14]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1656:9: 1656:15]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1657:9: 1657:15]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1658:9: 1658:15]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1659:10: 1659:16]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1660:11: 1660:17]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1661:9: 1661:20]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/funty-2.0.0/src/lib.rs:1662:9: 1662:20]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, TokenTree), parse::Reject>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor<'_>, Ident)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, Ident), parse::Reject>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `TokenTree`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#3}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::iter::Peekable<std::str::CharIndices<'_>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, LexError>, imp::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor<'_>, (&str, bool))>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<imp::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, (&str, bool)), parse::Reject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, fallback::Literal), parse::Reject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, std::vec::Vec<TokenTree>), parse::Reject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<TokenStream, LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<imp::TokenStream, LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<imp::TokenStream, imp::LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::str::pattern::MultiCharEqSearcher<'_, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:44]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.char_eq`: 0 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.char_indices`: 24 bytes
print-type-size type: `std::vec::Drain<'_, proc_macro::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#2}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `fallback::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 24 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `imp::Group`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `imp::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, TokenTree>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, proc_macro::TokenTree>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor<'_>, &str)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(Delimiter, std::vec::Vec<TokenTree>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, &str), parse::Reject>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, Punct), parse::Reject>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<Literal, LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 5 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<Literal, imp::LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 5 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<imp::Literal, imp::LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 5 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::vec::IntoIter<TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@std::iter::DoubleEndedIterator::rfind::check<usize, [closure@std::str::pattern::simd_contains::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::rt::begin_panic<&str>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `fallback::SourceFile`: 24 bytes, alignment: 8 bytes
print-type-size     field `.path`: 24 bytes
print-type-size type: `fallback::TokenStream`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::DebugTuple<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, proc_macro::TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Bytes<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Peekable<std::str::Chars<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<TokenTree>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, fallback::LexError>, fallback::Literal>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, fallback::LexError>, fallback::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (parse::Cursor<'_>, char)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fallback::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<(parse::Cursor<'_>, char), parse::Reject>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(usize, u8), parse::Reject>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<fallback::Literal, fallback::LexError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<fallback::TokenStream, fallback::LexError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::slice::Windows<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `std::str::CharIndices<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(Delimiter, std::vec::Vec<TokenTree>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.value`: 20 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 20 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 20 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::TokenTree>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, TokenTree, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, proc_macro::TokenTree, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(Delimiter, std::vec::Vec<TokenTree>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::core_simd::masks::mask_impl::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `fallback::LineColumn`: 16 bytes, alignment: 8 bytes
print-type-size     field `.line`: 8 bytes
print-type-size     field `.column`: 8 bytes
print-type-size type: `parse::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rest`: 16 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::char::EscapeDebug`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::char::EscapeDefault`: 16 bytes, alignment: 8 bytes
print-type-size     field `.state`: 16 bytes
print-type-size type: `std::char::EscapeDefaultState`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Unicode`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Char`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Backslash`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::char::EscapeUnicode`: 16 bytes, alignment: 8 bytes
print-type-size     field `.hex_digit_idx`: 8 bytes
print-type-size     field `.c`: 4 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::collections::Bound<&usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Included`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Excluded`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::iter::Copied<std::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[TokenTree]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<std::simd::Simd<u8, 16>>`: 16 bytes, alignment: 16 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, (usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, parse::Reject>, parse::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &TokenTree)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &proc_macro::TokenTree)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<(usize, char)>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::time::Duration>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panicking::r#try::Data<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:40], std::result::Result<proc_macro::TokenStream, imp::LexError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.r`: 8 bytes, offset: 0 bytes, alignment: 4 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<[TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(Delimiter, std::vec::Vec<TokenTree>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<TokenTree>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<proc_macro::TokenTree>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(Delimiter, std::vec::Vec<TokenTree>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<TokenTree>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<proc_macro::TokenTree>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(usize, char), parse::Reject>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<parse::Cursor<'_>, parse::Reject>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<proc_macro::Literal, imp::LexError>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<proc_macro::Literal, proc_macro::LexError>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::result::Result<proc_macro::TokenStream, imp::LexError>, std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::rt::begin_panic::PanicPayload<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::simd::Mask<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<i8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::simd::Simd<u8, 16>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Bytes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::sys_common::once::futex::CompletionGuard<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `.set_state_on_drop_to`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `<std::vec::Drain<'_, T, A> as std::ops::Drop>::drop::DropGuard<'_, '_, proc_macro::TokenTree, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, TokenTree, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/parse.rs:267:14: 267:22]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:40]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::vec::Drain<'_, proc_macro::TokenTree>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::string::String as std::iter::Extend<char>>::extend<std::char::EscapeDebug>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&[u8], [closure@std::str::pattern::simd_contains::{closure#1}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<char, [closure@<std::string::String as std::iter::Extend<char>>::extend<std::char::EscapeDebug>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenTree>>::extend<std::vec::Drain<'_, proc_macro::TokenTree>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::str::CharIndices<'_>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::str::Chars<'_>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::str::pattern::simd_contains::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sync::Once::call_once<fn() {detection::initialize}>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/wrapper.rs:118:38: 118:40]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::result::Result<proc_macro::TokenStream, imp::LexError>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, imp::LexError>, proc_macro::TokenStream>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(Delimiter, std::vec::Vec<TokenTree>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(usize, char)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<(usize, char)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<char>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::fmt::Arguments<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<imp::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn core::panic::BoxMeUp>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(Delimiter, std::vec::Vec<TokenTree>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<()>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<proc_macro::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(Delimiter, std::vec::Vec<TokenTree>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<proc_macro::TokenStream, imp::LexError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<proc_macro::TokenStream, proc_macro::LexError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::sync::OnceState`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys_common::once::futex::OnceState`: 8 bytes, alignment: 4 bytes
print-type-size     field `.set_state_to`: 4 bytes
print-type-size     field `.poisoned`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `core::time::Nanoseconds`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::Cell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::Span>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<char>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::Once`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sys_common::once::futex::Once`: 4 bytes, alignment: 4 bytes
print-type-size     field `.state`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `std::char::methods::EscapeDebugExtArgs`: 3 bytes, alignment: 1 bytes
print-type-size     field `.escape_grapheme_extended`: 1 bytes
print-type-size     field `.escape_single_quote`: 1 bytes
print-type-size     field `.escape_double_quote`: 1 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size type: `Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `std::char::EscapeUnicodeState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size     variant `RightBrace`: 0 bytes
print-type-size     variant `Value`: 0 bytes
print-type-size     variant `LeftBrace`: 0 bytes
print-type-size     variant `Type`: 0 bytes
print-type-size     variant `Backslash`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, fallback::Span>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<Delimiter>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fallback::Span>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<fn() {detection::initialize}>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, imp::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::simd::Simd<u8, 1>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:36]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/lib.rs:1250:49: 1250:56]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/lib.rs:214:37: 214:40]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/parse.rs:383:70: 383:79]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/parse.rs:438:70: 438:79]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/parse.rs:493:37: 493:45]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/parse.rs:494:47: 494:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/parse.rs:516:37: 516:46]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/parse.rs:517:46: 517:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/parse.rs:624:36: 624:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/wrapper.rs:119:27: 119:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::vec::Drain<'_, proc_macro::TokenTree> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::find<'_, char>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<u8, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:36]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::copied::copy_try_fold<u8, (), std::ops::ControlFlow<()>, [closure@std::iter::Iterator::all::check<u8, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/fallback.rs:689:29: 689:36]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::slice::range<std::ops::RangeFull>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::slice::range<std::ops::RangeFull>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `parse::Reject`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(Delimiter, std::vec::Vec<TokenTree>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[TokenTree; 3]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[TokenTree]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn core::panic::BoxMeUp>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<()>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, fallback::LexError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, parse::Reject>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::str::pattern::MultiCharEqPattern<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.36/src/fallback.rs:913:34: 913:44]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::linux_like::linux::uinput_user_dev`: 1116 bytes, alignment: 4 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.ff_effects_max`: 4 bytes
print-type-size     field `.absmax`: 256 bytes
print-type-size     field `.absmin`: 256 bytes
print-type-size     field `.absfuzz`: 256 bytes
print-type-size     field `.absflat`: 256 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::ucontext_t`: 936 bytes, alignment: 8 bytes
print-type-size     field `.uc_flags`: 8 bytes
print-type-size     field `.uc_link`: 8 bytes
print-type-size     field `.uc_stack`: 24 bytes
print-type-size     field `.uc_mcontext`: 256 bytes
print-type-size     field `.uc_sigmask`: 128 bytes
print-type-size     field `.__private`: 512 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::user`: 912 bytes, alignment: 8 bytes
print-type-size     field `.regs`: 216 bytes
print-type-size     field `.u_fpvalid`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.i387`: 512 bytes, alignment: 8 bytes
print-type-size     field `.u_tsize`: 8 bytes
print-type-size     field `.u_dsize`: 8 bytes
print-type-size     field `.u_ssize`: 8 bytes
print-type-size     field `.start_code`: 8 bytes
print-type-size     field `.start_stack`: 8 bytes
print-type-size     field `.signal`: 8 bytes
print-type-size     field `.__reserved`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.u_ar0`: 8 bytes, alignment: 8 bytes
print-type-size     field `.u_fpstate`: 8 bytes
print-type-size     field `.magic`: 8 bytes
print-type-size     field `.u_comm`: 32 bytes
print-type-size     field `.u_debugreg`: 64 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::_libc_fpstate`: 512 bytes, alignment: 8 bytes
print-type-size     field `.cwd`: 2 bytes
print-type-size     field `.swd`: 2 bytes
print-type-size     field `.ftw`: 2 bytes
print-type-size     field `.fop`: 2 bytes
print-type-size     field `.rip`: 8 bytes
print-type-size     field `.rdp`: 8 bytes
print-type-size     field `.mxcsr`: 4 bytes
print-type-size     field `.mxcr_mask`: 4 bytes
print-type-size     field `._st`: 128 bytes
print-type-size     field `._xmm`: 256 bytes
print-type-size     field `.__private`: 96 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::user_fpregs_struct`: 512 bytes, alignment: 8 bytes
print-type-size     field `.cwd`: 2 bytes
print-type-size     field `.swd`: 2 bytes
print-type-size     field `.ftw`: 2 bytes
print-type-size     field `.fop`: 2 bytes
print-type-size     field `.rip`: 8 bytes
print-type-size     field `.rdp`: 8 bytes
print-type-size     field `.mxcsr`: 4 bytes
print-type-size     field `.mxcr_mask`: 4 bytes
print-type-size     field `.st_space`: 128 bytes
print-type-size     field `.xmm_space`: 256 bytes
print-type-size     field `.padding`: 96 bytes
print-type-size type: `unix::linux_like::utsname`: 390 bytes, alignment: 1 bytes
print-type-size     field `.sysname`: 65 bytes
print-type-size     field `.nodename`: 65 bytes
print-type-size     field `.release`: 65 bytes
print-type-size     field `.version`: 65 bytes
print-type-size     field `.machine`: 65 bytes
print-type-size     field `.domainname`: 65 bytes
print-type-size type: `unix::linux_like::linux::gnu::utmpx`: 384 bytes, alignment: 4 bytes
print-type-size     field `.ut_type`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.ut_pid`: 4 bytes, alignment: 4 bytes
print-type-size     field `.ut_line`: 32 bytes
print-type-size     field `.ut_id`: 4 bytes
print-type-size     field `.ut_user`: 32 bytes
print-type-size     field `.ut_host`: 256 bytes
print-type-size     field `.ut_exit`: 4 bytes
print-type-size     field `.ut_session`: 4 bytes
print-type-size     field `.ut_tv`: 8 bytes
print-type-size     field `.ut_addr_v6`: 16 bytes
print-type-size     field `.__glibc_reserved`: 20 bytes
print-type-size type: `unix::linux_like::linux::posix_spawnattr_t`: 336 bytes, alignment: 8 bytes
print-type-size     field `.__flags`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.__pgrp`: 4 bytes, alignment: 4 bytes
print-type-size     field `.__sd`: 128 bytes
print-type-size     field `.__ss`: 128 bytes
print-type-size     field `.__sp`: 4 bytes
print-type-size     field `.__policy`: 4 bytes
print-type-size     field `.__pad`: 64 bytes
print-type-size type: `unix::linux_like::linux::dirent`: 280 bytes, alignment: 8 bytes
print-type-size     field `.d_ino`: 8 bytes
print-type-size     field `.d_off`: 8 bytes
print-type-size     field `.d_reclen`: 2 bytes
print-type-size     field `.d_type`: 1 bytes
print-type-size     field `.d_name`: 256 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `unix::linux_like::linux::dirent64`: 280 bytes, alignment: 8 bytes
print-type-size     field `.d_ino`: 8 bytes
print-type-size     field `.d_off`: 8 bytes
print-type-size     field `.d_reclen`: 2 bytes
print-type-size     field `.d_type`: 1 bytes
print-type-size     field `.d_name`: 256 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::mcontext_t`: 256 bytes, alignment: 8 bytes
print-type-size     field `.gregs`: 184 bytes
print-type-size     field `.fpregs`: 8 bytes
print-type-size     field `.__private`: 64 bytes
print-type-size type: `unix::linux_like::linux::gnu::statx`: 256 bytes, alignment: 8 bytes
print-type-size     field `.stx_mask`: 4 bytes
print-type-size     field `.stx_blksize`: 4 bytes
print-type-size     field `.stx_attributes`: 8 bytes
print-type-size     field `.stx_nlink`: 4 bytes
print-type-size     field `.stx_uid`: 4 bytes
print-type-size     field `.stx_gid`: 4 bytes
print-type-size     field `.stx_mode`: 2 bytes
print-type-size     field `.__statx_pad1`: 2 bytes
print-type-size     field `.stx_ino`: 8 bytes
print-type-size     field `.stx_size`: 8 bytes
print-type-size     field `.stx_blocks`: 8 bytes
print-type-size     field `.stx_attributes_mask`: 8 bytes
print-type-size     field `.stx_atime`: 16 bytes
print-type-size     field `.stx_btime`: 16 bytes
print-type-size     field `.stx_ctime`: 16 bytes
print-type-size     field `.stx_mtime`: 16 bytes
print-type-size     field `.stx_rdev_major`: 4 bytes
print-type-size     field `.stx_rdev_minor`: 4 bytes
print-type-size     field `.stx_dev_major`: 4 bytes
print-type-size     field `.stx_dev_minor`: 4 bytes
print-type-size     field `.stx_mnt_id`: 8 bytes
print-type-size     field `.__statx_pad2`: 8 bytes
print-type-size     field `.__statx_pad3`: 96 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::user_regs_struct`: 216 bytes, alignment: 8 bytes
print-type-size     field `.r15`: 8 bytes
print-type-size     field `.r14`: 8 bytes
print-type-size     field `.r13`: 8 bytes
print-type-size     field `.r12`: 8 bytes
print-type-size     field `.rbp`: 8 bytes
print-type-size     field `.rbx`: 8 bytes
print-type-size     field `.r11`: 8 bytes
print-type-size     field `.r10`: 8 bytes
print-type-size     field `.r9`: 8 bytes
print-type-size     field `.r8`: 8 bytes
print-type-size     field `.rax`: 8 bytes
print-type-size     field `.rcx`: 8 bytes
print-type-size     field `.rdx`: 8 bytes
print-type-size     field `.rsi`: 8 bytes
print-type-size     field `.rdi`: 8 bytes
print-type-size     field `.orig_rax`: 8 bytes
print-type-size     field `.rip`: 8 bytes
print-type-size     field `.cs`: 8 bytes
print-type-size     field `.eflags`: 8 bytes
print-type-size     field `.rsp`: 8 bytes
print-type-size     field `.ss`: 8 bytes
print-type-size     field `.fs_base`: 8 bytes
print-type-size     field `.gs_base`: 8 bytes
print-type-size     field `.ds`: 8 bytes
print-type-size     field `.es`: 8 bytes
print-type-size     field `.fs`: 8 bytes
print-type-size     field `.gs`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::timex`: 208 bytes, alignment: 8 bytes
print-type-size     field `.modes`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.offset`: 8 bytes, alignment: 8 bytes
print-type-size     field `.freq`: 8 bytes
print-type-size     field `.maxerror`: 8 bytes
print-type-size     field `.esterror`: 8 bytes
print-type-size     field `.status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.constant`: 8 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 8 bytes
print-type-size     field `.tolerance`: 8 bytes
print-type-size     field `.time`: 16 bytes
print-type-size     field `.tick`: 8 bytes
print-type-size     field `.ppsfreq`: 8 bytes
print-type-size     field `.jitter`: 8 bytes
print-type-size     field `.shift`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.stabil`: 8 bytes, alignment: 8 bytes
print-type-size     field `.jitcnt`: 8 bytes
print-type-size     field `.calcnt`: 8 bytes
print-type-size     field `.errcnt`: 8 bytes
print-type-size     field `.stbcnt`: 8 bytes
print-type-size     field `.tai`: 4 bytes
print-type-size     field `.__unused1`: 4 bytes
print-type-size     field `.__unused2`: 4 bytes
print-type-size     field `.__unused3`: 4 bytes
print-type-size     field `.__unused4`: 4 bytes
print-type-size     field `.__unused5`: 4 bytes
print-type-size     field `.__unused6`: 4 bytes
print-type-size     field `.__unused7`: 4 bytes
print-type-size     field `.__unused8`: 4 bytes
print-type-size     field `.__unused9`: 4 bytes
print-type-size     field `.__unused10`: 4 bytes
print-type-size     field `.__unused11`: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::aiocb`: 168 bytes, alignment: 8 bytes
print-type-size     field `.aio_fildes`: 4 bytes
print-type-size     field `.aio_lio_opcode`: 4 bytes
print-type-size     field `.aio_reqprio`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.aio_buf`: 8 bytes, alignment: 8 bytes
print-type-size     field `.aio_nbytes`: 8 bytes
print-type-size     field `.aio_sigevent`: 64 bytes
print-type-size     field `.__next_prio`: 8 bytes
print-type-size     field `.__abs_prio`: 4 bytes
print-type-size     field `.__policy`: 4 bytes
print-type-size     field `.__error_code`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.__return_value`: 8 bytes, alignment: 8 bytes
print-type-size     field `.aio_offset`: 8 bytes
print-type-size     field `.__glibc_reserved`: 32 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::sigaction`: 152 bytes, alignment: 8 bytes
print-type-size     field `.sa_sigaction`: 8 bytes
print-type-size     field `.sa_mask`: 128 bytes
print-type-size     field `.sa_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.sa_restorer`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::stat`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__unused`: 24 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::stat64`: 144 bytes, alignment: 8 bytes
print-type-size     field `.st_dev`: 8 bytes
print-type-size     field `.st_ino`: 8 bytes
print-type-size     field `.st_nlink`: 8 bytes
print-type-size     field `.st_mode`: 4 bytes
print-type-size     field `.st_uid`: 4 bytes
print-type-size     field `.st_gid`: 4 bytes
print-type-size     field `.__pad0`: 4 bytes
print-type-size     field `.st_rdev`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size     field `.st_blksize`: 8 bytes
print-type-size     field `.st_blocks`: 8 bytes
print-type-size     field `.st_atime`: 8 bytes
print-type-size     field `.st_atime_nsec`: 8 bytes
print-type-size     field `.st_mtime`: 8 bytes
print-type-size     field `.st_mtime_nsec`: 8 bytes
print-type-size     field `.st_ctime`: 8 bytes
print-type-size     field `.st_ctime_nsec`: 8 bytes
print-type-size     field `.__reserved`: 24 bytes
print-type-size type: `unix::rusage`: 144 bytes, alignment: 8 bytes
print-type-size     field `.ru_utime`: 16 bytes
print-type-size     field `.ru_stime`: 16 bytes
print-type-size     field `.ru_maxrss`: 8 bytes
print-type-size     field `.ru_ixrss`: 8 bytes
print-type-size     field `.ru_idrss`: 8 bytes
print-type-size     field `.ru_isrss`: 8 bytes
print-type-size     field `.ru_minflt`: 8 bytes
print-type-size     field `.ru_majflt`: 8 bytes
print-type-size     field `.ru_nswap`: 8 bytes
print-type-size     field `.ru_inblock`: 8 bytes
print-type-size     field `.ru_oublock`: 8 bytes
print-type-size     field `.ru_msgsnd`: 8 bytes
print-type-size     field `.ru_msgrcv`: 8 bytes
print-type-size     field `.ru_nsignals`: 8 bytes
print-type-size     field `.ru_nvcsw`: 8 bytes
print-type-size     field `.ru_nivcsw`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<unix::linux_like::linux::cpu_set_t>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.value`: 128 bytes
print-type-size type: `core::mem::MaybeUninit<unix::linux_like::linux::cpu_set_t>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 128 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 128 bytes
print-type-size type: `unix::linux_like::fd_set`: 128 bytes, alignment: 8 bytes
print-type-size     field `.fds_bits`: 128 bytes
print-type-size type: `unix::linux_like::linux::cpu_set_t`: 128 bytes, alignment: 8 bytes
print-type-size     field `.bits`: 128 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::sigset_t`: 128 bytes, alignment: 8 bytes
print-type-size     field `.__val`: 128 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::siginfo_t`: 128 bytes, alignment: 8 bytes
print-type-size     field `.si_signo`: 4 bytes
print-type-size     field `.si_errno`: 4 bytes
print-type-size     field `.si_code`: 4 bytes
print-type-size     field `._pad`: 116 bytes
print-type-size     field `._align`: 0 bytes
print-type-size type: `unix::linux_like::linux::signalfd_siginfo`: 128 bytes, alignment: 8 bytes
print-type-size     field `.ssi_signo`: 4 bytes
print-type-size     field `.ssi_errno`: 4 bytes
print-type-size     field `.ssi_code`: 4 bytes
print-type-size     field `.ssi_pid`: 4 bytes
print-type-size     field `.ssi_uid`: 4 bytes
print-type-size     field `.ssi_fd`: 4 bytes
print-type-size     field `.ssi_tid`: 4 bytes
print-type-size     field `.ssi_band`: 4 bytes
print-type-size     field `.ssi_overrun`: 4 bytes
print-type-size     field `.ssi_trapno`: 4 bytes
print-type-size     field `.ssi_status`: 4 bytes
print-type-size     field `.ssi_int`: 4 bytes
print-type-size     field `.ssi_ptr`: 8 bytes
print-type-size     field `.ssi_utime`: 8 bytes
print-type-size     field `.ssi_stime`: 8 bytes
print-type-size     field `.ssi_addr`: 8 bytes
print-type-size     field `.ssi_addr_lsb`: 2 bytes
print-type-size     field `._pad2`: 2 bytes
print-type-size     field `.ssi_syscall`: 4 bytes
print-type-size     field `.ssi_call_addr`: 8 bytes
print-type-size     field `.ssi_arch`: 4 bytes
print-type-size     field `._pad`: 28 bytes
print-type-size type: `unix::linux_like::sockaddr_storage`: 128 bytes, alignment: 8 bytes
print-type-size     field `.ss_family`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.__ss_align`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__ss_pad2`: 112 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::msqid_ds`: 120 bytes, alignment: 8 bytes
print-type-size     field `.msg_perm`: 48 bytes
print-type-size     field `.msg_stime`: 8 bytes
print-type-size     field `.msg_rtime`: 8 bytes
print-type-size     field `.msg_ctime`: 8 bytes
print-type-size     field `.__msg_cbytes`: 8 bytes
print-type-size     field `.msg_qnum`: 8 bytes
print-type-size     field `.msg_qbytes`: 8 bytes
print-type-size     field `.msg_lspid`: 4 bytes
print-type-size     field `.msg_lrpid`: 4 bytes
print-type-size     field `.__glibc_reserved4`: 8 bytes
print-type-size     field `.__glibc_reserved5`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::statfs`: 120 bytes, alignment: 8 bytes
print-type-size     field `.f_type`: 8 bytes
print-type-size     field `.f_bsize`: 8 bytes
print-type-size     field `.f_blocks`: 8 bytes
print-type-size     field `.f_bfree`: 8 bytes
print-type-size     field `.f_bavail`: 8 bytes
print-type-size     field `.f_files`: 8 bytes
print-type-size     field `.f_ffree`: 8 bytes
print-type-size     field `.f_fsid`: 8 bytes
print-type-size     field `.f_namelen`: 8 bytes
print-type-size     field `.f_frsize`: 8 bytes
print-type-size     field `.f_spare`: 40 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::statfs64`: 120 bytes, alignment: 8 bytes
print-type-size     field `.f_type`: 8 bytes
print-type-size     field `.f_bsize`: 8 bytes
print-type-size     field `.f_blocks`: 8 bytes
print-type-size     field `.f_bfree`: 8 bytes
print-type-size     field `.f_bavail`: 8 bytes
print-type-size     field `.f_files`: 8 bytes
print-type-size     field `.f_ffree`: 8 bytes
print-type-size     field `.f_fsid`: 8 bytes
print-type-size     field `.f_namelen`: 8 bytes
print-type-size     field `.f_frsize`: 8 bytes
print-type-size     field `.f_flags`: 8 bytes
print-type-size     field `.f_spare`: 32 bytes
print-type-size type: `unix::linux_like::linux::gnu::rtentry`: 120 bytes, alignment: 8 bytes
print-type-size     field `.rt_pad1`: 8 bytes
print-type-size     field `.rt_dst`: 16 bytes
print-type-size     field `.rt_gateway`: 16 bytes
print-type-size     field `.rt_genmask`: 16 bytes
print-type-size     field `.rt_flags`: 2 bytes
print-type-size     field `.rt_pad2`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.rt_pad3`: 8 bytes, alignment: 8 bytes
print-type-size     field `.rt_tos`: 1 bytes
print-type-size     field `.rt_class`: 1 bytes
print-type-size     field `.rt_pad4`: 6 bytes
print-type-size     field `.rt_metric`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.rt_dev`: 8 bytes, alignment: 8 bytes
print-type-size     field `.rt_mtu`: 8 bytes
print-type-size     field `.rt_window`: 8 bytes
print-type-size     field `.rt_irtt`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::sysinfo`: 112 bytes, alignment: 8 bytes
print-type-size     field `.uptime`: 8 bytes
print-type-size     field `.loads`: 24 bytes
print-type-size     field `.totalram`: 8 bytes
print-type-size     field `.freeram`: 8 bytes
print-type-size     field `.sharedram`: 8 bytes
print-type-size     field `.bufferram`: 8 bytes
print-type-size     field `.totalswap`: 8 bytes
print-type-size     field `.freeswap`: 8 bytes
print-type-size     field `.procs`: 2 bytes
print-type-size     field `.pad`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.totalhigh`: 8 bytes, alignment: 8 bytes
print-type-size     field `.freehigh`: 8 bytes
print-type-size     field `.mem_unit`: 4 bytes
print-type-size     field `._f`: 0 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::not_x32::statvfs`: 112 bytes, alignment: 8 bytes
print-type-size     field `.f_bsize`: 8 bytes
print-type-size     field `.f_frsize`: 8 bytes
print-type-size     field `.f_blocks`: 8 bytes
print-type-size     field `.f_bfree`: 8 bytes
print-type-size     field `.f_bavail`: 8 bytes
print-type-size     field `.f_files`: 8 bytes
print-type-size     field `.f_ffree`: 8 bytes
print-type-size     field `.f_favail`: 8 bytes
print-type-size     field `.f_fsid`: 8 bytes
print-type-size     field `.f_flag`: 8 bytes
print-type-size     field `.f_namemax`: 8 bytes
print-type-size     field `.__f_spare`: 24 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::shmid_ds`: 112 bytes, alignment: 8 bytes
print-type-size     field `.shm_perm`: 48 bytes
print-type-size     field `.shm_segsz`: 8 bytes
print-type-size     field `.shm_atime`: 8 bytes
print-type-size     field `.shm_dtime`: 8 bytes
print-type-size     field `.shm_ctime`: 8 bytes
print-type-size     field `.shm_cpid`: 4 bytes
print-type-size     field `.shm_lpid`: 4 bytes
print-type-size     field `.shm_nattch`: 8 bytes
print-type-size     field `.__unused4`: 8 bytes
print-type-size     field `.__unused5`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::statvfs64`: 112 bytes, alignment: 8 bytes
print-type-size     field `.f_bsize`: 8 bytes
print-type-size     field `.f_frsize`: 8 bytes
print-type-size     field `.f_blocks`: 8 bytes
print-type-size     field `.f_bfree`: 8 bytes
print-type-size     field `.f_bavail`: 8 bytes
print-type-size     field `.f_files`: 8 bytes
print-type-size     field `.f_ffree`: 8 bytes
print-type-size     field `.f_favail`: 8 bytes
print-type-size     field `.f_fsid`: 8 bytes
print-type-size     field `.f_flag`: 8 bytes
print-type-size     field `.f_namemax`: 8 bytes
print-type-size     field `.__f_spare`: 24 bytes
print-type-size type: `unix::linux_like::sockaddr_un`: 110 bytes, alignment: 2 bytes
print-type-size     field `.sun_family`: 2 bytes
print-type-size     field `.sun_path`: 108 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::semid_ds`: 104 bytes, alignment: 8 bytes
print-type-size     field `.sem_perm`: 48 bytes
print-type-size     field `.sem_otime`: 8 bytes
print-type-size     field `.__reserved`: 8 bytes
print-type-size     field `.sem_ctime`: 8 bytes
print-type-size     field `.__reserved2`: 8 bytes
print-type-size     field `.sem_nsems`: 8 bytes
print-type-size     field `.__glibc_reserved3`: 8 bytes
print-type-size     field `.__glibc_reserved4`: 8 bytes
print-type-size type: `unix::linux_like::linux::uinput_ff_upload`: 104 bytes, alignment: 8 bytes
print-type-size     field `.request_id`: 4 bytes
print-type-size     field `.retval`: 4 bytes
print-type-size     field `.effect`: 48 bytes
print-type-size     field `.old`: 48 bytes
print-type-size type: `unix::linux_like::lconv`: 96 bytes, alignment: 8 bytes
print-type-size     field `.decimal_point`: 8 bytes
print-type-size     field `.thousands_sep`: 8 bytes
print-type-size     field `.grouping`: 8 bytes
print-type-size     field `.int_curr_symbol`: 8 bytes
print-type-size     field `.currency_symbol`: 8 bytes
print-type-size     field `.mon_decimal_point`: 8 bytes
print-type-size     field `.mon_thousands_sep`: 8 bytes
print-type-size     field `.mon_grouping`: 8 bytes
print-type-size     field `.positive_sign`: 8 bytes
print-type-size     field `.negative_sign`: 8 bytes
print-type-size     field `.int_frac_digits`: 1 bytes
print-type-size     field `.frac_digits`: 1 bytes
print-type-size     field `.p_cs_precedes`: 1 bytes
print-type-size     field `.p_sep_by_space`: 1 bytes
print-type-size     field `.n_cs_precedes`: 1 bytes
print-type-size     field `.n_sep_by_space`: 1 bytes
print-type-size     field `.p_sign_posn`: 1 bytes
print-type-size     field `.n_sign_posn`: 1 bytes
print-type-size     field `.int_p_cs_precedes`: 1 bytes
print-type-size     field `.int_p_sep_by_space`: 1 bytes
print-type-size     field `.int_n_cs_precedes`: 1 bytes
print-type-size     field `.int_n_sep_by_space`: 1 bytes
print-type-size     field `.int_p_sign_posn`: 1 bytes
print-type-size     field `.int_n_sign_posn`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `unix::linux_like::linux::uinput_setup`: 92 bytes, alignment: 4 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.ff_effects_max`: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::ptrace_syscall_info`: 88 bytes, alignment: 8 bytes
print-type-size     field `.op`: 1 bytes
print-type-size     field `.pad`: 3 bytes
print-type-size     field `.arch`: 4 bytes
print-type-size     field `.instruction_pointer`: 8 bytes
print-type-size     field `.stack_pointer`: 8 bytes
print-type-size     field `.u`: 64 bytes
print-type-size type: `unix::linux_like::linux::sockaddr_alg`: 88 bytes, alignment: 4 bytes
print-type-size     field `.salg_family`: 2 bytes
print-type-size     field `.salg_type`: 14 bytes
print-type-size     field `.salg_feat`: 4 bytes
print-type-size     field `.salg_mask`: 4 bytes
print-type-size     field `.salg_name`: 64 bytes
print-type-size type: `unix::linux_like::in6_rtmsg`: 80 bytes, alignment: 8 bytes
print-type-size     field `.rtmsg_dst`: 16 bytes
print-type-size     field `.rtmsg_src`: 16 bytes
print-type-size     field `.rtmsg_gateway`: 16 bytes
print-type-size     field `.rtmsg_type`: 4 bytes
print-type-size     field `.rtmsg_dst_len`: 2 bytes
print-type-size     field `.rtmsg_src_len`: 2 bytes
print-type-size     field `.rtmsg_metric`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.rtmsg_info`: 8 bytes, alignment: 8 bytes
print-type-size     field `.rtmsg_flags`: 4 bytes
print-type-size     field `.rtmsg_ifindex`: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::mallinfo2`: 80 bytes, alignment: 8 bytes
print-type-size     field `.arena`: 8 bytes
print-type-size     field `.ordblks`: 8 bytes
print-type-size     field `.smblks`: 8 bytes
print-type-size     field `.hblks`: 8 bytes
print-type-size     field `.hblkhd`: 8 bytes
print-type-size     field `.usmblks`: 8 bytes
print-type-size     field `.fsmblks`: 8 bytes
print-type-size     field `.uordblks`: 8 bytes
print-type-size     field `.fordblks`: 8 bytes
print-type-size     field `.keepcost`: 8 bytes
print-type-size type: `unix::linux_like::linux::posix_spawn_file_actions_t`: 80 bytes, alignment: 8 bytes
print-type-size     field `.__allocated`: 4 bytes
print-type-size     field `.__used`: 4 bytes
print-type-size     field `.__actions`: 8 bytes
print-type-size     field `.__pad`: 64 bytes
print-type-size type: `unix::linux_like::linux::canfd_frame`: 72 bytes, alignment: 8 bytes
print-type-size     field `.can_id`: 4 bytes
print-type-size     field `.len`: 1 bytes
print-type-size     field `.flags`: 1 bytes
print-type-size     field `.__res0`: 1 bytes
print-type-size     field `.__res1`: 1 bytes
print-type-size     field `.data`: 64 bytes
print-type-size type: `unix::linux_like::linux::dqblk`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dqb_bhardlimit`: 8 bytes
print-type-size     field `.dqb_bsoftlimit`: 8 bytes
print-type-size     field `.dqb_curspace`: 8 bytes
print-type-size     field `.dqb_ihardlimit`: 8 bytes
print-type-size     field `.dqb_isoftlimit`: 8 bytes
print-type-size     field `.dqb_curinodes`: 8 bytes
print-type-size     field `.dqb_btime`: 8 bytes
print-type-size     field `.dqb_itime`: 8 bytes
print-type-size     field `.dqb_valid`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::linux_like::linux::glob_t`: 72 bytes, alignment: 8 bytes
print-type-size     field `.gl_pathc`: 8 bytes
print-type-size     field `.gl_pathv`: 8 bytes
print-type-size     field `.gl_offs`: 8 bytes
print-type-size     field `.gl_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.__unused1`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__unused2`: 8 bytes
print-type-size     field `.__unused3`: 8 bytes
print-type-size     field `.__unused4`: 8 bytes
print-type-size     field `.__unused5`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::glob64_t`: 72 bytes, alignment: 8 bytes
print-type-size     field `.gl_pathc`: 8 bytes
print-type-size     field `.gl_pathv`: 8 bytes
print-type-size     field `.gl_offs`: 8 bytes
print-type-size     field `.gl_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.__unused1`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__unused2`: 8 bytes
print-type-size     field `.__unused3`: 8 bytes
print-type-size     field `.__unused4`: 8 bytes
print-type-size     field `.__unused5`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::ntptimeval`: 72 bytes, alignment: 8 bytes
print-type-size     field `.time`: 16 bytes
print-type-size     field `.maxerror`: 8 bytes
print-type-size     field `.esterror`: 8 bytes
print-type-size     field `.tai`: 8 bytes
print-type-size     field `.__glibc_reserved1`: 8 bytes
print-type-size     field `.__glibc_reserved2`: 8 bytes
print-type-size     field `.__glibc_reserved3`: 8 bytes
print-type-size     field `.__glibc_reserved4`: 8 bytes
print-type-size type: `unix::linux_like::linux::spwd`: 72 bytes, alignment: 8 bytes
print-type-size     field `.sp_namp`: 8 bytes
print-type-size     field `.sp_pwdp`: 8 bytes
print-type-size     field `.sp_lstchg`: 8 bytes
print-type-size     field `.sp_min`: 8 bytes
print-type-size     field `.sp_max`: 8 bytes
print-type-size     field `.sp_warn`: 8 bytes
print-type-size     field `.sp_inact`: 8 bytes
print-type-size     field `.sp_expire`: 8 bytes
print-type-size     field `.sp_flag`: 8 bytes
print-type-size type: `unix::linux_like::arpreq`: 68 bytes, alignment: 4 bytes
print-type-size     field `.arp_pa`: 16 bytes
print-type-size     field `.arp_ha`: 16 bytes
print-type-size     field `.arp_flags`: 4 bytes
print-type-size     field `.arp_netmask`: 16 bytes
print-type-size     field `.arp_dev`: 16 bytes
print-type-size type: `unix::linux_like::linux::Elf64_Ehdr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.e_ident`: 16 bytes
print-type-size     field `.e_type`: 2 bytes
print-type-size     field `.e_machine`: 2 bytes
print-type-size     field `.e_version`: 4 bytes
print-type-size     field `.e_entry`: 8 bytes
print-type-size     field `.e_phoff`: 8 bytes
print-type-size     field `.e_shoff`: 8 bytes
print-type-size     field `.e_flags`: 4 bytes
print-type-size     field `.e_ehsize`: 2 bytes
print-type-size     field `.e_phentsize`: 2 bytes
print-type-size     field `.e_phnum`: 2 bytes
print-type-size     field `.e_shentsize`: 2 bytes
print-type-size     field `.e_shnum`: 2 bytes
print-type-size     field `.e_shstrndx`: 2 bytes
print-type-size type: `unix::linux_like::linux::Elf64_Shdr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.sh_name`: 4 bytes
print-type-size     field `.sh_type`: 4 bytes
print-type-size     field `.sh_flags`: 8 bytes
print-type-size     field `.sh_addr`: 8 bytes
print-type-size     field `.sh_offset`: 8 bytes
print-type-size     field `.sh_size`: 8 bytes
print-type-size     field `.sh_link`: 4 bytes
print-type-size     field `.sh_info`: 4 bytes
print-type-size     field `.sh_addralign`: 8 bytes
print-type-size     field `.sh_entsize`: 8 bytes
print-type-size type: `unix::linux_like::linux::dl_phdr_info`: 64 bytes, alignment: 8 bytes
print-type-size     field `.dlpi_addr`: 8 bytes
print-type-size     field `.dlpi_name`: 8 bytes
print-type-size     field `.dlpi_phdr`: 8 bytes
print-type-size     field `.dlpi_phnum`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.dlpi_adds`: 8 bytes, alignment: 8 bytes
print-type-size     field `.dlpi_subs`: 8 bytes
print-type-size     field `.dlpi_tls_modid`: 8 bytes
print-type-size     field `.dlpi_tls_data`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_data`: 64 bytes, alignment: 8 bytes
print-type-size     variant `__c_anonymous_ptrace_syscall_info_data`: 64 bytes
print-type-size         field `.exit`: 16 bytes
print-type-size         field `.entry`: 56 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.seccomp`: 64 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_seccomp`: 64 bytes, alignment: 8 bytes
print-type-size     field `.nr`: 8 bytes
print-type-size     field `.args`: 48 bytes
print-type-size     field `.ret_data`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::regex_t`: 64 bytes, alignment: 8 bytes
print-type-size     field `.__buffer`: 8 bytes
print-type-size     field `.__allocated`: 8 bytes
print-type-size     field `.__used`: 8 bytes
print-type-size     field `.__syntax`: 8 bytes
print-type-size     field `.__fastmap`: 8 bytes
print-type-size     field `.__translate`: 8 bytes
print-type-size     field `.__re_nsub`: 8 bytes
print-type-size     field `.__bitfield`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unix::linux_like::linux::mq_attr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.mq_flags`: 8 bytes
print-type-size     field `.mq_maxmsg`: 8 bytes
print-type-size     field `.mq_msgsize`: 8 bytes
print-type-size     field `.mq_curmsgs`: 8 bytes
print-type-size     field `.pad`: 32 bytes
print-type-size type: `unix::linux_like::linux::seccomp_data`: 64 bytes, alignment: 8 bytes
print-type-size     field `.nr`: 4 bytes
print-type-size     field `.arch`: 4 bytes
print-type-size     field `.instruction_pointer`: 8 bytes
print-type-size     field `.args`: 48 bytes
print-type-size type: `unix::linux_like::mmsghdr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.msg_hdr`: 56 bytes
print-type-size     field `.msg_len`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::linux_like::sigevent`: 64 bytes, alignment: 8 bytes
print-type-size     field `.sigev_value`: 8 bytes
print-type-size     field `.sigev_signo`: 4 bytes
print-type-size     field `.sigev_notify`: 4 bytes
print-type-size     field `.sigev_notify_thread_id`: 4 bytes
print-type-size     field `.__unused1`: 44 bytes
print-type-size type: `unix::linux_like::linux::gnu::termios`: 60 bytes, alignment: 4 bytes
print-type-size     field `.c_iflag`: 4 bytes
print-type-size     field `.c_oflag`: 4 bytes
print-type-size     field `.c_cflag`: 4 bytes
print-type-size     field `.c_lflag`: 4 bytes
print-type-size     field `.c_line`: 1 bytes
print-type-size     field `.c_cc`: 32 bytes
print-type-size     padding: 3 bytes
print-type-size     field `.c_ispeed`: 4 bytes, alignment: 4 bytes
print-type-size     field `.c_ospeed`: 4 bytes
print-type-size type: `unix::linux_like::ifaddrs`: 56 bytes, alignment: 8 bytes
print-type-size     field `.ifa_next`: 8 bytes
print-type-size     field `.ifa_name`: 8 bytes
print-type-size     field `.ifa_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ifa_addr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ifa_netmask`: 8 bytes
print-type-size     field `.ifa_ifu`: 8 bytes
print-type-size     field `.ifa_data`: 8 bytes
print-type-size type: `unix::linux_like::linux::Elf64_Phdr`: 56 bytes, alignment: 8 bytes
print-type-size     field `.p_type`: 4 bytes
print-type-size     field `.p_flags`: 4 bytes
print-type-size     field `.p_offset`: 8 bytes
print-type-size     field `.p_vaddr`: 8 bytes
print-type-size     field `.p_paddr`: 8 bytes
print-type-size     field `.p_filesz`: 8 bytes
print-type-size     field `.p_memsz`: 8 bytes
print-type-size     field `.p_align`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_entry`: 56 bytes, alignment: 8 bytes
print-type-size     field `.nr`: 8 bytes
print-type-size     field `.args`: 48 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::pthread_attr_t`: 56 bytes, alignment: 8 bytes
print-type-size     field `.__size`: 56 bytes
print-type-size type: `unix::linux_like::linux::gnu::msghdr`: 56 bytes, alignment: 8 bytes
print-type-size     field `.msg_name`: 8 bytes
print-type-size     field `.msg_namelen`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.msg_iov`: 8 bytes, alignment: 8 bytes
print-type-size     field `.msg_iovlen`: 8 bytes
print-type-size     field `.msg_control`: 8 bytes
print-type-size     field `.msg_controllen`: 8 bytes
print-type-size     field `.msg_flags`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::linux_like::linux::pthread_rwlock_t`: 56 bytes, alignment: 8 bytes
print-type-size     field `.size`: 56 bytes
print-type-size type: `unix::linux_like::tm`: 56 bytes, alignment: 8 bytes
print-type-size     field `.tm_sec`: 4 bytes
print-type-size     field `.tm_min`: 4 bytes
print-type-size     field `.tm_hour`: 4 bytes
print-type-size     field `.tm_mday`: 4 bytes
print-type-size     field `.tm_mon`: 4 bytes
print-type-size     field `.tm_year`: 4 bytes
print-type-size     field `.tm_wday`: 4 bytes
print-type-size     field `.tm_yday`: 4 bytes
print-type-size     field `.tm_isdst`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.tm_gmtoff`: 8 bytes, alignment: 8 bytes
print-type-size     field `.tm_zone`: 8 bytes
print-type-size type: `unix::linux_like::arpreq_old`: 52 bytes, alignment: 4 bytes
print-type-size     field `.arp_pa`: 16 bytes
print-type-size     field `.arp_ha`: 16 bytes
print-type-size     field `.arp_flags`: 4 bytes
print-type-size     field `.arp_netmask`: 16 bytes
print-type-size type: `unix::linux_like::linux::Elf32_Ehdr`: 52 bytes, alignment: 4 bytes
print-type-size     field `.e_ident`: 16 bytes
print-type-size     field `.e_type`: 2 bytes
print-type-size     field `.e_machine`: 2 bytes
print-type-size     field `.e_version`: 4 bytes
print-type-size     field `.e_entry`: 4 bytes
print-type-size     field `.e_phoff`: 4 bytes
print-type-size     field `.e_shoff`: 4 bytes
print-type-size     field `.e_flags`: 4 bytes
print-type-size     field `.e_ehsize`: 2 bytes
print-type-size     field `.e_phentsize`: 2 bytes
print-type-size     field `.e_phnum`: 2 bytes
print-type-size     field `.e_shentsize`: 2 bytes
print-type-size     field `.e_shnum`: 2 bytes
print-type-size     field `.e_shstrndx`: 2 bytes
print-type-size type: `unix::linux_like::addrinfo`: 48 bytes, alignment: 8 bytes
print-type-size     field `.ai_flags`: 4 bytes
print-type-size     field `.ai_family`: 4 bytes
print-type-size     field `.ai_socktype`: 4 bytes
print-type-size     field `.ai_protocol`: 4 bytes
print-type-size     field `.ai_addrlen`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ai_addr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ai_canonname`: 8 bytes
print-type-size     field `.ai_next`: 8 bytes
print-type-size type: `unix::linux_like::linux::ff_effect`: 48 bytes, alignment: 8 bytes
print-type-size     field `.type_`: 2 bytes
print-type-size     field `.id`: 2 bytes
print-type-size     field `.direction`: 2 bytes
print-type-size     field `.trigger`: 4 bytes
print-type-size     field `.replay`: 4 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.u`: 32 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::ipc_perm`: 48 bytes, alignment: 8 bytes
print-type-size     field `.__key`: 4 bytes
print-type-size     field `.uid`: 4 bytes
print-type-size     field `.gid`: 4 bytes
print-type-size     field `.cuid`: 4 bytes
print-type-size     field `.cgid`: 4 bytes
print-type-size     field `.mode`: 2 bytes
print-type-size     field `.__pad1`: 2 bytes
print-type-size     field `.__seq`: 2 bytes
print-type-size     field `.__pad2`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.__unused1`: 8 bytes, alignment: 8 bytes
print-type-size     field `.__unused2`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::siginfo_f`: 48 bytes, alignment: 8 bytes
print-type-size     field `._siginfo_base`: 12 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.sifields`: 32 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::passwd`: 48 bytes, alignment: 8 bytes
print-type-size     field `.pw_name`: 8 bytes
print-type-size     field `.pw_passwd`: 8 bytes
print-type-size     field `.pw_uid`: 4 bytes
print-type-size     field `.pw_gid`: 4 bytes
print-type-size     field `.pw_gecos`: 8 bytes
print-type-size     field `.pw_dir`: 8 bytes
print-type-size     field `.pw_shell`: 8 bytes
print-type-size type: `unix::linux_like::linux::pthread_cond_t`: 48 bytes, alignment: 8 bytes
print-type-size     field `.size`: 48 bytes
print-type-size type: `unix::linux_like::linux::arch::generic::termios2`: 44 bytes, alignment: 4 bytes
print-type-size     field `.c_iflag`: 4 bytes
print-type-size     field `.c_oflag`: 4 bytes
print-type-size     field `.c_cflag`: 4 bytes
print-type-size     field `.c_lflag`: 4 bytes
print-type-size     field `.c_line`: 1 bytes
print-type-size     field `.c_cc`: 19 bytes
print-type-size     field `.c_ispeed`: 4 bytes
print-type-size     field `.c_ospeed`: 4 bytes
print-type-size type: `unix::linux_like::linux::Elf32_Shdr`: 40 bytes, alignment: 4 bytes
print-type-size     field `.sh_name`: 4 bytes
print-type-size     field `.sh_type`: 4 bytes
print-type-size     field `.sh_flags`: 4 bytes
print-type-size     field `.sh_addr`: 4 bytes
print-type-size     field `.sh_offset`: 4 bytes
print-type-size     field `.sh_size`: 4 bytes
print-type-size     field `.sh_link`: 4 bytes
print-type-size     field `.sh_info`: 4 bytes
print-type-size     field `.sh_addralign`: 4 bytes
print-type-size     field `.sh_entsize`: 4 bytes
print-type-size type: `unix::linux_like::linux::arpd_request`: 40 bytes, alignment: 8 bytes
print-type-size     field `.req`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.ip`: 4 bytes, alignment: 4 bytes
print-type-size     field `.dev`: 8 bytes
print-type-size     field `.stamp`: 8 bytes
print-type-size     field `.updated`: 8 bytes
print-type-size     field `.ha`: 7 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `unix::linux_like::linux::gnu::mallinfo`: 40 bytes, alignment: 4 bytes
print-type-size     field `.arena`: 4 bytes
print-type-size     field `.ordblks`: 4 bytes
print-type-size     field `.smblks`: 4 bytes
print-type-size     field `.hblks`: 4 bytes
print-type-size     field `.hblkhd`: 4 bytes
print-type-size     field `.usmblks`: 4 bytes
print-type-size     field `.fsmblks`: 4 bytes
print-type-size     field `.uordblks`: 4 bytes
print-type-size     field `.fordblks`: 4 bytes
print-type-size     field `.keepcost`: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::seminfo`: 40 bytes, alignment: 4 bytes
print-type-size     field `.semmap`: 4 bytes
print-type-size     field `.semmni`: 4 bytes
print-type-size     field `.semmns`: 4 bytes
print-type-size     field `.semmnu`: 4 bytes
print-type-size     field `.semmsl`: 4 bytes
print-type-size     field `.semopm`: 4 bytes
print-type-size     field `.semume`: 4 bytes
print-type-size     field `.semusz`: 4 bytes
print-type-size     field `.semvmx`: 4 bytes
print-type-size     field `.semaem`: 4 bytes
print-type-size type: `unix::linux_like::linux::input_keymap_entry`: 40 bytes, alignment: 4 bytes
print-type-size     field `.flags`: 1 bytes
print-type-size     field `.len`: 1 bytes
print-type-size     field `.index`: 2 bytes
print-type-size     field `.keycode`: 4 bytes
print-type-size     field `.scancode`: 32 bytes
print-type-size type: `unix::linux_like::linux::mntent`: 40 bytes, alignment: 8 bytes
print-type-size     field `.mnt_fsname`: 8 bytes
print-type-size     field `.mnt_dir`: 8 bytes
print-type-size     field `.mnt_type`: 8 bytes
print-type-size     field `.mnt_opts`: 8 bytes
print-type-size     field `.mnt_freq`: 4 bytes
print-type-size     field `.mnt_passno`: 4 bytes
print-type-size type: `unix::linux_like::linux::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `unix::group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.gr_name`: 8 bytes
print-type-size     field `.gr_passwd`: 8 bytes
print-type-size     field `.gr_gid`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.gr_mem`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::hostent`: 32 bytes, alignment: 8 bytes
print-type-size     field `.h_name`: 8 bytes
print-type-size     field `.h_aliases`: 8 bytes
print-type-size     field `.h_addrtype`: 4 bytes
print-type-size     field `.h_length`: 4 bytes
print-type-size     field `.h_addr_list`: 8 bytes
print-type-size type: `unix::itimerval`: 32 bytes, alignment: 8 bytes
print-type-size     field `.it_interval`: 16 bytes
print-type-size     field `.it_value`: 16 bytes
print-type-size type: `unix::linux_like::Dl_info`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dli_fname`: 8 bytes
print-type-size     field `.dli_fbase`: 8 bytes
print-type-size     field `.dli_sname`: 8 bytes
print-type-size     field `.dli_saddr`: 8 bytes
print-type-size type: `unix::linux_like::linux::Elf32_Phdr`: 32 bytes, alignment: 4 bytes
print-type-size     field `.p_type`: 4 bytes
print-type-size     field `.p_offset`: 4 bytes
print-type-size     field `.p_vaddr`: 4 bytes
print-type-size     field `.p_paddr`: 4 bytes
print-type-size     field `.p_filesz`: 4 bytes
print-type-size     field `.p_memsz`: 4 bytes
print-type-size     field `.p_flags`: 4 bytes
print-type-size     field `.p_align`: 4 bytes
print-type-size type: `unix::linux_like::linux::ff_periodic_effect`: 32 bytes, alignment: 8 bytes
print-type-size     field `.waveform`: 2 bytes
print-type-size     field `.period`: 2 bytes
print-type-size     field `.magnitude`: 2 bytes
print-type-size     field `.offset`: 2 bytes
print-type-size     field `.phase`: 2 bytes
print-type-size     field `.envelope`: 8 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.custom_len`: 4 bytes, alignment: 4 bytes
print-type-size     field `.custom_data`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_value::siginfo_timer`: 32 bytes, alignment: 8 bytes
print-type-size     field `._si_signo`: 4 bytes
print-type-size     field `._si_errno`: 4 bytes
print-type-size     field `._si_code`: 4 bytes
print-type-size     field `._si_tid`: 4 bytes
print-type-size     field `._si_overrun`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.si_sigval`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::align::sem_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.__size`: 32 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::align::max_align_t`: 32 bytes, alignment: 16 bytes
print-type-size     field `.priv_`: 32 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::flock`: 32 bytes, alignment: 8 bytes
print-type-size     field `.l_type`: 2 bytes
print-type-size     field `.l_whence`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.l_start`: 8 bytes, alignment: 8 bytes
print-type-size     field `.l_len`: 8 bytes
print-type-size     field `.l_pid`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::flock64`: 32 bytes, alignment: 8 bytes
print-type-size     field `.l_type`: 2 bytes
print-type-size     field `.l_whence`: 2 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.l_start`: 8 bytes, alignment: 8 bytes
print-type-size     field `.l_len`: 8 bytes
print-type-size     field `.l_pid`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::sifields`: 32 bytes, alignment: 8 bytes
print-type-size     variant `sifields`: 32 bytes
print-type-size         field `._align_pointer`: 8 bytes
print-type-size         field `.sigchld`: 32 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::sifields_sigchld`: 32 bytes, alignment: 8 bytes
print-type-size     field `.si_pid`: 4 bytes
print-type-size     field `.si_uid`: 4 bytes
print-type-size     field `.si_status`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.si_utime`: 8 bytes, alignment: 8 bytes
print-type-size     field `.si_stime`: 8 bytes
print-type-size type: `unix::linux_like::linux::itimerspec`: 32 bytes, alignment: 8 bytes
print-type-size     field `.it_interval`: 16 bytes
print-type-size     field `.it_value`: 16 bytes
print-type-size type: `unix::linux_like::linux::msginfo`: 32 bytes, alignment: 4 bytes
print-type-size     field `.msgpool`: 4 bytes
print-type-size     field `.msgmap`: 4 bytes
print-type-size     field `.msgmax`: 4 bytes
print-type-size     field `.msgmnb`: 4 bytes
print-type-size     field `.msgmni`: 4 bytes
print-type-size     field `.msgssz`: 4 bytes
print-type-size     field `.msgtql`: 4 bytes
print-type-size     field `.msgseg`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `unix::servent`: 32 bytes, alignment: 8 bytes
print-type-size     field `.s_name`: 8 bytes
print-type-size     field `.s_aliases`: 8 bytes
print-type-size     field `.s_port`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.s_proto`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::tms`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tms_utime`: 8 bytes
print-type-size     field `.tms_stime`: 8 bytes
print-type-size     field `.tms_cutime`: 8 bytes
print-type-size     field `.tms_cstime`: 8 bytes
print-type-size type: `unix::linux_like::linux::uinput_abs_setup`: 28 bytes, alignment: 4 bytes
print-type-size     field `.code`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.absinfo`: 24 bytes, alignment: 4 bytes
print-type-size type: `unix::linux_like::sockaddr_in6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.sin6_family`: 2 bytes
print-type-size     field `.sin6_port`: 2 bytes
print-type-size     field `.sin6_flowinfo`: 4 bytes
print-type-size     field `.sin6_addr`: 16 bytes
print-type-size     field `.sin6_scope_id`: 4 bytes
print-type-size type: `unix::linux_like::linux::Elf64_Sym`: 24 bytes, alignment: 8 bytes
print-type-size     field `.st_name`: 4 bytes
print-type-size     field `.st_info`: 1 bytes
print-type-size     field `.st_other`: 1 bytes
print-type-size     field `.st_shndx`: 2 bytes
print-type-size     field `.st_value`: 8 bytes
print-type-size     field `.st_size`: 8 bytes
print-type-size type: `unix::linux_like::linux::fanotify_event_metadata`: 24 bytes, alignment: 8 bytes
print-type-size     field `.event_len`: 4 bytes
print-type-size     field `.vers`: 1 bytes
print-type-size     field `.reserved`: 1 bytes
print-type-size     field `.metadata_len`: 2 bytes
print-type-size     field `.mask`: 8 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `.pid`: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::<impl unix::linux_like::linux::gnu::b64::x86_64::siginfo_t>::si_addr::siginfo_sigfault`: 24 bytes, alignment: 8 bytes
print-type-size     field `._si_signo`: 4 bytes
print-type-size     field `._si_errno`: 4 bytes
print-type-size     field `._si_code`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.si_addr`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::Elf64_Chdr`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ch_type`: 4 bytes
print-type-size     field `.ch_reserved`: 4 bytes
print-type-size     field `.ch_size`: 8 bytes
print-type-size     field `.ch_addralign`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::stack_t`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ss_sp`: 8 bytes
print-type-size     field `.ss_flags`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.ss_size`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::nl_mmap_hdr`: 24 bytes, alignment: 4 bytes
print-type-size     field `.nm_status`: 4 bytes
print-type-size     field `.nm_len`: 4 bytes
print-type-size     field `.nm_group`: 4 bytes
print-type-size     field `.nm_pid`: 4 bytes
print-type-size     field `.nm_uid`: 4 bytes
print-type-size     field `.nm_gid`: 4 bytes
print-type-size type: `unix::linux_like::linux::input_absinfo`: 24 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size     field `.minimum`: 4 bytes
print-type-size     field `.maximum`: 4 bytes
print-type-size     field `.fuzz`: 4 bytes
print-type-size     field `.flat`: 4 bytes
print-type-size     field `.resolution`: 4 bytes
print-type-size type: `unix::linux_like::linux::input_event`: 24 bytes, alignment: 8 bytes
print-type-size     field `.time`: 16 bytes
print-type-size     field `.type_`: 2 bytes
print-type-size     field `.code`: 2 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `unix::linux_like::linux::non_exhaustive::open_how`: 24 bytes, alignment: 8 bytes
print-type-size     field `.flags`: 8 bytes
print-type-size     field `.mode`: 8 bytes
print-type-size     field `.resolve`: 8 bytes
print-type-size type: `unix::linux_like::linux::sockaddr_can`: 24 bytes, alignment: 8 bytes
print-type-size     field `.can_family`: 2 bytes
print-type-size     padding: 2 bytes
print-type-size     field `.can_ifindex`: 4 bytes, alignment: 4 bytes
print-type-size     field `.can_addr`: 16 bytes
print-type-size type: `unix::protoent`: 24 bytes, alignment: 8 bytes
print-type-size     field `.p_name`: 8 bytes
print-type-size     field `.p_aliases`: 8 bytes
print-type-size     field `.p_proto`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unix::ipv6_mreq`: 20 bytes, alignment: 4 bytes
print-type-size     field `.ipv6mr_multiaddr`: 16 bytes
print-type-size     field `.ipv6mr_interface`: 4 bytes
print-type-size type: `unix::linux_like::linux::in6_pktinfo`: 20 bytes, alignment: 4 bytes
print-type-size     field `.ipi6_addr`: 16 bytes
print-type-size     field `.ipi6_ifindex`: 4 bytes
print-type-size type: `unix::linux_like::linux::nlmsgerr`: 20 bytes, alignment: 4 bytes
print-type-size     field `.error`: 4 bytes
print-type-size     field `.msg`: 16 bytes
print-type-size type: `unix::linux_like::sockaddr_ll`: 20 bytes, alignment: 4 bytes
print-type-size     field `.sll_family`: 2 bytes
print-type-size     field `.sll_protocol`: 2 bytes
print-type-size     field `.sll_ifindex`: 4 bytes
print-type-size     field `.sll_hatype`: 2 bytes
print-type-size     field `.sll_pkttype`: 1 bytes
print-type-size     field `.sll_halen`: 1 bytes
print-type-size     field `.sll_addr`: 8 bytes
print-type-size type: `core::slice::Iter<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `unix::align::in6_addr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.s6_addr`: 16 bytes
print-type-size type: `unix::iovec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iov_base`: 8 bytes
print-type-size     field `.iov_len`: 8 bytes
print-type-size type: `unix::linux_like::linux::Elf32_Sym`: 16 bytes, alignment: 4 bytes
print-type-size     field `.st_name`: 4 bytes
print-type-size     field `.st_value`: 4 bytes
print-type-size     field `.st_size`: 4 bytes
print-type-size     field `.st_info`: 1 bytes
print-type-size     field `.st_other`: 1 bytes
print-type-size     field `.st_shndx`: 2 bytes
print-type-size type: `unix::linux_like::linux::__c_anonymous_sockaddr_can_can_addr`: 16 bytes, alignment: 8 bytes
print-type-size     variant `__c_anonymous_sockaddr_can_can_addr`: 16 bytes
print-type-size         field `.tp`: 8 bytes
print-type-size         field `.j1939`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::__c_anonymous_sockaddr_can_j1939`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.pgn`: 4 bytes
print-type-size     field `.addr`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `unix::linux_like::linux::can_frame`: 16 bytes, alignment: 8 bytes
print-type-size     field `.can_id`: 4 bytes
print-type-size     field `.can_dlc`: 1 bytes
print-type-size     field `.__pad`: 1 bytes
print-type-size     field `.__res0`: 1 bytes
print-type-size     field `.__res1`: 1 bytes
print-type-size     field `.data`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::__c_anonymous_ptrace_syscall_info_exit`: 16 bytes, alignment: 8 bytes
print-type-size     field `.sval`: 8 bytes
print-type-size     field `.is_error`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::_libc_fpxreg`: 16 bytes, alignment: 2 bytes
print-type-size     field `.significand`: 8 bytes
print-type-size     field `.exponent`: 2 bytes
print-type-size     field `.__private`: 6 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::_libc_xmmreg`: 16 bytes, alignment: 4 bytes
print-type-size     field `.element`: 16 bytes
print-type-size type: `unix::linux_like::linux::gnu::cmsghdr`: 16 bytes, alignment: 8 bytes
print-type-size     field `.cmsg_len`: 8 bytes
print-type-size     field `.cmsg_level`: 4 bytes
print-type-size     field `.cmsg_type`: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::nl_mmap_req`: 16 bytes, alignment: 4 bytes
print-type-size     field `.nm_block_size`: 4 bytes
print-type-size     field `.nm_block_nr`: 4 bytes
print-type-size     field `.nm_frame_size`: 4 bytes
print-type-size     field `.nm_frame_nr`: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::ptrace_peeksiginfo_args`: 16 bytes, alignment: 8 bytes
print-type-size     field `.off`: 8 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.nr`: 4 bytes
print-type-size type: `unix::linux_like::linux::gnu::statx_timestamp`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 4 bytes
print-type-size     field `.__statx_timestamp_pad1`: 4 bytes
print-type-size type: `unix::linux_like::linux::if_nameindex`: 16 bytes, alignment: 8 bytes
print-type-size     field `.if_index`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.if_name`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::inotify_event`: 16 bytes, alignment: 4 bytes
print-type-size     field `.wd`: 4 bytes
print-type-size     field `.mask`: 4 bytes
print-type-size     field `.cookie`: 4 bytes
print-type-size     field `.len`: 4 bytes
print-type-size type: `unix::linux_like::linux::input_mask`: 16 bytes, alignment: 8 bytes
print-type-size     field `.type_`: 4 bytes
print-type-size     field `.codes_size`: 4 bytes
print-type-size     field `.codes_ptr`: 8 bytes
print-type-size type: `unix::linux_like::linux::nlmsghdr`: 16 bytes, alignment: 4 bytes
print-type-size     field `.nlmsg_len`: 4 bytes
print-type-size     field `.nlmsg_type`: 2 bytes
print-type-size     field `.nlmsg_flags`: 2 bytes
print-type-size     field `.nlmsg_seq`: 4 bytes
print-type-size     field `.nlmsg_pid`: 4 bytes
print-type-size type: `unix::linux_like::linux::packet_mreq`: 16 bytes, alignment: 4 bytes
print-type-size     field `.mr_ifindex`: 4 bytes
print-type-size     field `.mr_type`: 2 bytes
print-type-size     field `.mr_alen`: 2 bytes
print-type-size     field `.mr_address`: 8 bytes
print-type-size type: `unix::linux_like::linux::rlimit64`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rlim_cur`: 8 bytes
print-type-size     field `.rlim_max`: 8 bytes
print-type-size type: `unix::linux_like::linux::sock_extended_err`: 16 bytes, alignment: 4 bytes
print-type-size     field `.ee_errno`: 4 bytes
print-type-size     field `.ee_origin`: 1 bytes
print-type-size     field `.ee_type`: 1 bytes
print-type-size     field `.ee_code`: 1 bytes
print-type-size     field `.ee_pad`: 1 bytes
print-type-size     field `.ee_info`: 4 bytes
print-type-size     field `.ee_data`: 4 bytes
print-type-size type: `unix::linux_like::linux::sock_fprog`: 16 bytes, alignment: 8 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     padding: 6 bytes
print-type-size     field `.filter`: 8 bytes, alignment: 8 bytes
print-type-size type: `unix::linux_like::linux::sockaddr_vm`: 16 bytes, alignment: 4 bytes
print-type-size     field `.svm_family`: 2 bytes
print-type-size     field `.svm_reserved1`: 2 bytes
print-type-size     field `.svm_port`: 4 bytes
print-type-size     field `.svm_cid`: 4 bytes
print-type-size     field `.svm_zero`: 4 bytes
print-type-size type: `unix::linux_like::sockaddr`: 16 bytes, alignment: 2 bytes
print-type-size     field `.sa_family`: 2 bytes
print-type-size     field `.sa_data`: 14 bytes
print-type-size type: `unix::linux_like::sockaddr_in`: 16 bytes, alignment: 4 bytes
print-type-size     field `.sin_family`: 2 bytes
print-type-size     field `.sin_port`: 2 bytes
print-type-size     field `.sin_addr`: 4 bytes
print-type-size     field `.sin_zero`: 8 bytes
print-type-size type: `unix::rlimit`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rlim_cur`: 8 bytes
print-type-size     field `.rlim_max`: 8 bytes
print-type-size type: `unix::timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 8 bytes
print-type-size type: `unix::timeval`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_usec`: 8 bytes
print-type-size type: `unix::utimbuf`: 16 bytes, alignment: 8 bytes
print-type-size     field `.actime`: 8 bytes
print-type-size     field `.modtime`: 8 bytes
print-type-size type: `unix::linux_like::epoll_event`: 12 bytes, alignment: 1 bytes
print-type-size     field `.events`: 4 bytes
print-type-size     field `.u64`: 8 bytes
print-type-size type: `unix::linux_like::in_pktinfo`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ipi_ifindex`: 4 bytes
print-type-size     field `.ipi_spec_dst`: 4 bytes
print-type-size     field `.ipi_addr`: 4 bytes
print-type-size type: `unix::linux_like::ip_mreq_source`: 12 bytes, alignment: 4 bytes
print-type-size     field `.imr_multiaddr`: 4 bytes
print-type-size     field `.imr_interface`: 4 bytes
print-type-size     field `.imr_sourceaddr`: 4 bytes
print-type-size type: `unix::linux_like::ip_mreqn`: 12 bytes, alignment: 4 bytes
print-type-size     field `.imr_multiaddr`: 4 bytes
print-type-size     field `.imr_address`: 4 bytes
print-type-size     field `.imr_ifindex`: 4 bytes
print-type-size type: `unix::linux_like::linux::ff_condition_effect`: 12 bytes, alignment: 2 bytes
print-type-size     field `.right_saturation`: 2 bytes
print-type-size     field `.left_saturation`: 2 bytes
print-type-size     field `.right_coeff`: 2 bytes
print-type-size     field `.left_coeff`: 2 bytes
print-type-size     field `.deadband`: 2 bytes
print-type-size     field `.center`: 2 bytes
print-type-size type: `unix::linux_like::linux::ff_ramp_effect`: 12 bytes, alignment: 2 bytes
print-type-size     field `.start_level`: 2 bytes
print-type-size     field `.end_level`: 2 bytes
print-type-size     field `.envelope`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::Elf32_Chdr`: 12 bytes, alignment: 4 bytes
print-type-size     field `.ch_type`: 4 bytes
print-type-size     field `.ch_size`: 4 bytes
print-type-size     field `.ch_addralign`: 4 bytes
print-type-size type: `unix::linux_like::linux::sockaddr_nl`: 12 bytes, alignment: 4 bytes
print-type-size     field `.nl_family`: 2 bytes
print-type-size     field `.nl_pad`: 2 bytes
print-type-size     field `.nl_pid`: 4 bytes
print-type-size     field `.nl_groups`: 4 bytes
print-type-size type: `unix::linux_like::linux::ucred`: 12 bytes, alignment: 4 bytes
print-type-size     field `.pid`: 4 bytes
print-type-size     field `.uid`: 4 bytes
print-type-size     field `.gid`: 4 bytes
print-type-size type: `unix::linux_like::linux::uinput_ff_erase`: 12 bytes, alignment: 4 bytes
print-type-size     field `.request_id`: 4 bytes
print-type-size     field `.retval`: 4 bytes
print-type-size     field `.effect_id`: 4 bytes
print-type-size type: `unix::linux_like::linux::ff_constant_effect`: 10 bytes, alignment: 2 bytes
print-type-size     field `.level`: 2 bytes
print-type-size     field `.envelope`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&mut u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<extern "C" fn()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<extern "C" fn(*const i8, i32) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<unsafe extern "C" fn()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<unsafe extern "C" fn(*const core::ffi::c_void, *const core::ffi::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<unsafe extern "C" fn(*const core::ffi::c_void, *const core::ffi::c_void, *mut core::ffi::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<unsafe extern "C" fn(*mut core::ffi::c_void)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<unsafe extern "C" fn(*mut unix::linux_like::linux::dl_phdr_info, usize, *mut core::ffi::c_void) -> i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `unix::linger`: 8 bytes, alignment: 4 bytes
print-type-size     field `.l_onoff`: 4 bytes
print-type-size     field `.l_linger`: 4 bytes
print-type-size type: `unix::linux_like::arphdr`: 8 bytes, alignment: 2 bytes
print-type-size     field `.ar_hrd`: 2 bytes
print-type-size     field `.ar_pro`: 2 bytes
print-type-size     field `.ar_hln`: 1 bytes
print-type-size     field `.ar_pln`: 1 bytes
print-type-size     field `.ar_op`: 2 bytes
print-type-size type: `unix::linux_like::ip_mreq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.imr_multiaddr`: 4 bytes
print-type-size     field `.imr_interface`: 4 bytes
print-type-size type: `unix::linux_like::linux::__c_anonymous_sockaddr_can_tp`: 8 bytes, alignment: 4 bytes
print-type-size     field `.rx_id`: 4 bytes
print-type-size     field `.tx_id`: 4 bytes
print-type-size type: `unix::linux_like::linux::can_filter`: 8 bytes, alignment: 4 bytes
print-type-size     field `.can_id`: 4 bytes
print-type-size     field `.can_mask`: 4 bytes
print-type-size type: `unix::linux_like::linux::fanotify_response`: 8 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `.response`: 4 bytes
print-type-size type: `unix::linux_like::linux::ff_envelope`: 8 bytes, alignment: 2 bytes
print-type-size     field `.attack_length`: 2 bytes
print-type-size     field `.attack_level`: 2 bytes
print-type-size     field `.fade_length`: 2 bytes
print-type-size     field `.fade_level`: 2 bytes
print-type-size type: `unix::linux_like::linux::fsid_t`: 8 bytes, alignment: 4 bytes
print-type-size     field `.__val`: 8 bytes
print-type-size type: `unix::linux_like::linux::gnu::__timeval`: 8 bytes, alignment: 4 bytes
print-type-size     field `.tv_sec`: 4 bytes
print-type-size     field `.tv_usec`: 4 bytes
print-type-size type: `unix::linux_like::linux::input_id`: 8 bytes, alignment: 2 bytes
print-type-size     field `.bustype`: 2 bytes
print-type-size     field `.vendor`: 2 bytes
print-type-size     field `.product`: 2 bytes
print-type-size     field `.version`: 2 bytes
print-type-size type: `unix::linux_like::linux::pthread_rwlockattr_t`: 8 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size type: `unix::linux_like::linux::regmatch_t`: 8 bytes, alignment: 4 bytes
print-type-size     field `.rm_so`: 4 bytes
print-type-size     field `.rm_eo`: 4 bytes
print-type-size type: `unix::linux_like::linux::sock_filter`: 8 bytes, alignment: 4 bytes
print-type-size     field `.code`: 2 bytes
print-type-size     field `.jt`: 1 bytes
print-type-size     field `.jf`: 1 bytes
print-type-size     field `.k`: 4 bytes
print-type-size type: `unix::linux_like::linux::sock_txtime`: 8 bytes, alignment: 4 bytes
print-type-size     field `.clockid`: 4 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size type: `unix::pollfd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `.events`: 2 bytes
print-type-size     field `.revents`: 2 bytes
print-type-size type: `unix::sigval`: 8 bytes, alignment: 8 bytes
print-type-size     field `.sival_ptr`: 8 bytes
print-type-size type: `unix::winsize`: 8 bytes, alignment: 2 bytes
print-type-size     field `.ws_row`: 2 bytes
print-type-size     field `.ws_col`: 2 bytes
print-type-size     field `.ws_xpixel`: 2 bytes
print-type-size     field `.ws_ypixel`: 2 bytes
print-type-size type: `unix::linux_like::linux::gnu::b64::x86_64::seccomp_notif_sizes`: 6 bytes, alignment: 2 bytes
print-type-size     field `.seccomp_notif`: 2 bytes
print-type-size     field `.seccomp_notif_resp`: 2 bytes
print-type-size     field `.seccomp_data`: 2 bytes
print-type-size type: `unix::linux_like::linux::sembuf`: 6 bytes, alignment: 2 bytes
print-type-size     field `.sem_num`: 2 bytes
print-type-size     field `.sem_op`: 2 bytes
print-type-size     field `.sem_flg`: 2 bytes
print-type-size type: `unix::linux_like::in_addr`: 4 bytes, alignment: 4 bytes
print-type-size     field `.s_addr`: 4 bytes
print-type-size type: `unix::linux_like::linux::af_alg_iv`: 4 bytes, alignment: 4 bytes
print-type-size     field `.ivlen`: 4 bytes
print-type-size     field `.iv`: 0 bytes
print-type-size type: `unix::linux_like::linux::ff_replay`: 4 bytes, alignment: 2 bytes
print-type-size     field `.length`: 2 bytes
print-type-size     field `.delay`: 2 bytes
print-type-size type: `unix::linux_like::linux::ff_rumble_effect`: 4 bytes, alignment: 2 bytes
print-type-size     field `.strong_magnitude`: 2 bytes
print-type-size     field `.weak_magnitude`: 2 bytes
print-type-size type: `unix::linux_like::linux::ff_trigger`: 4 bytes, alignment: 2 bytes
print-type-size     field `.button`: 2 bytes
print-type-size     field `.interval`: 2 bytes
print-type-size type: `unix::linux_like::linux::genlmsghdr`: 4 bytes, alignment: 2 bytes
print-type-size     field `.cmd`: 1 bytes
print-type-size     field `.version`: 1 bytes
print-type-size     field `.reserved`: 2 bytes
print-type-size type: `unix::linux_like::linux::gnu::__exit_status`: 4 bytes, alignment: 2 bytes
print-type-size     field `.e_termination`: 2 bytes
print-type-size     field `.e_exit`: 2 bytes
print-type-size type: `unix::linux_like::linux::gnu::nl_pktinfo`: 4 bytes, alignment: 4 bytes
print-type-size     field `.group`: 4 bytes
print-type-size type: `unix::linux_like::linux::nlattr`: 4 bytes, alignment: 2 bytes
print-type-size     field `.nla_len`: 2 bytes
print-type-size     field `.nla_type`: 2 bytes
print-type-size type: `unix::linux_like::linux::pthread_condattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `unix::linux_like::linux::pthread_mutexattr_t`: 4 bytes, alignment: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size type: `unix::linux_like::sched_param`: 4 bytes, alignment: 4 bytes
print-type-size     field `.sched_priority`: 4 bytes
print-type-size type: `core::ffi::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `core::marker::PhantomData<&mut u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::DIR`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::FILE`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::fpos_t`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::linux_like::linux::fpos64_t`: 0 bytes, alignment: 1 bytes
print-type-size type: `unix::linux_like::timezone`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 104 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>, std::vec::IntoIter<proc_macro2::TokenTree>>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:187:37: 187:40]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `proc_macro2::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::TokenTree`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::FilterMap<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/spanned.rs:21:50: 21:54]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 40 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 40 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::imp::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::fallback::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 24 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::Group`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `proc_macro2::imp::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::option::Option<std::vec::IntoIter<proc_macro2::TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `__private::push_lifetime::Lifetime<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `__private::push_lifetime_spanned::Lifetime<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro::ConcatStreamsHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.streams`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::fallback::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::client::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:187:37: 187:40], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:187:37: 187:40]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29], [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::client::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro::bridge::client::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro::bridge::client::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:187:37: 187:40]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/spanned.rs:40:19: 40:25]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<__private::push_lifetime::Lifetime<'_>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<__private::push_lifetime_spanned::Lifetime<'_>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:187:37: 187:40]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Once<proc_macro2::TokenTree>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find_map::check<proc_macro2::TokenTree, proc_macro2::Span, &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/spanned.rs:21:50: 21:54]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<__private::push_lifetime::Lifetime<'_>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<__private::push_lifetime_spanned::Lifetime<'_>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:187:37: 187:40]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Once<proc_macro2::TokenTree>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}], [closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/runtime.rs:197:22: 197:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro::TokenStream {proc_macro2::imp::TokenStream::unwrap_nightly}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<proc_macro2::Span, std::convert::Infallible>>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::vec::IntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Once<proc_macro2::TokenStream>, [closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]>, fn(proc_macro2::imp::TokenStream) -> proc_macro2::fallback::TokenStream {proc_macro2::imp::TokenStream::unwrap_stable}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::IntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::vec::IntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::client::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::client::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::Span, std::convert::Infallible>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/spanned.rs:21:50: 21:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/spanned.rs:39:21: 39:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<proc_macro2::TokenStream as std::iter::Extend<proc_macro2::TokenStream>>::extend<std::iter::Once<proc_macro2::TokenStream>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::filter_map::filter_map_fold<proc_macro2::TokenTree, proc_macro2::Span, std::option::Option<proc_macro2::Span>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/spanned.rs:21:50: 21:54], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.15/src/spanned.rs:39:21: 39:34]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::client::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::option::Option<core::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::cell::UnsafeCell<libc::pthread_mutex_t>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `libc::pthread_mutex_t`: 40 bytes, alignment: 8 bytes
print-type-size     field `.size`: 40 bytes
print-type-size type: `use_file::Mutex`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::result::Result<&str, core::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::slice::ChunksMut<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `util_libc::Weak`: 24 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.addr`: 8 bytes
print-type-size type: `core::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&dyn core::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut [u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::NonNull<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::Unique<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<[u8]>, core::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `error_impls::std::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.5/src/use_file.rs:34:16: 34:32]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.5/src/use_file.rs:96:28: 96:30]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.5/src/util_libc.rs:92:42: 92:44]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::any::Erased<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<libc::c_void>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<libc::c_void>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<u8>, core::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<i32, error::Error>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `error_impls::std::boxed::Box<error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `error_impls::std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `error_impls::std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `libc::pollfd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.fd`: 4 bytes
print-type-size     field `.events`: 2 bytes
print-type-size     field `.revents`: 2 bytes
print-type-size type: `use_file::DropGuard<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.5/src/use_file.rs:96:28: 96:30]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `util::LazyBool`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `util::LazyUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<core::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<(), error::Error>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, error::Error>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `error::Error`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `error_impls::std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.5/src/error.rs:109:43: 109:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.5/src/linux_android.rs:19:30: 19:35]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.5/src/use_file.rs:68:28: 68:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.5/src/util.rs:62:28: 62:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::any::Demand<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::error::private::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::any::Erased<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<error_impls::std::io::error::ErrorData<error_impls::std::boxed::Box<error_impls::std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, core::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `error_impls::std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `use_file::DropGuard<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.5/src/use_file.rs:68:28: 68:30]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `mpc::mpc_t`: 64 bytes, alignment: 8 bytes
print-type-size     field `.re`: 32 bytes
print-type-size     field `.im`: 32 bytes
print-type-size type: `gmp::mpq_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.num`: 16 bytes
print-type-size     field `.den`: 16 bytes
print-type-size type: `gmp::randfnptr_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.seed`: 8 bytes
print-type-size     field `.get`: 8 bytes
print-type-size     field `.clear`: 8 bytes
print-type-size     field `.iset`: 8 bytes
print-type-size type: `gmp::randstate_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.seed`: 16 bytes
print-type-size     field `.alg`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.algdata`: 8 bytes, alignment: 8 bytes
print-type-size type: `mpfr::mpfr_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.prec`: 8 bytes
print-type-size     field `.sign`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.exp`: 8 bytes, alignment: 8 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `gmp::mpf_t`: 24 bytes, alignment: 8 bytes
print-type-size     field `.prec`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.exp`: 8 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `core::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `gmp::mpz_t`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `gmp::randseed_t`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `core::option::Option<extern "C" fn(usize) -> *mut libc::c_void>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<unsafe extern "C" fn(*mut libc::c_void, usize)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<unsafe extern "C" fn(*mut libc::c_void, usize, usize) -> *mut libc::c_void>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::NonNull<libc::c_void>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::mem::MaybeUninit<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `mpfr::rnd_t`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `RNDN`: 0 bytes
print-type-size     variant `RNDZ`: 0 bytes
print-type-size     variant `RNDU`: 0 bytes
print-type-size     variant `RNDD`: 0 bytes
print-type-size     variant `RNDA`: 0 bytes
print-type-size     variant `RNDF`: 0 bytes
print-type-size     variant `RNDNA`: 0 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::iter::Zip<core::slice::IterMut<'_, u32>, core::slice::ChunksExact<'_, u8>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size     field `.b`: 40 bytes
print-type-size type: `core::iter::Zip<core::slice::IterMut<'_, u64>, core::slice::ChunksExact<'_, u8>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size     field `.b`: 40 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, u32>, core::slice::ChunksMut<'_, u8>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, u64>, core::slice::ChunksMut<'_, u8>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::slice::ChunksExact<'_, u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.rem`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `core::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::option::Option<(&mut u32, &[u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&mut u64, &[u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&u32, &mut [u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&u64, &mut [u8])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::slice::ChunksMut<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&dyn core::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::NonNull<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::Unique<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<(), error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<[u8]>, core::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::slice::Iter<'_, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::Iter<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `error::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<[u8; 8], core::array::TryFromSliceError>`: 9 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&error::ErrorCode>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn RngCore>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::any::Erased<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<error::ErrorCode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<getrandom::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<error::ErrorCode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<getrandom::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<u8>, core::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::boxed::Box<error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<error::ErrorCode>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<getrandom::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::result::Result<[u8; 4], core::array::TryFromSliceError>`: 5 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, getrandom::Error>>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Break`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<core::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<(), getrandom::Error>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, getrandom::Error>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `error::ErrorCode`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `getrandom::Error`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand_core-0.6.3/src/error.rs:109:56: 109:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::any::Demand<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::array::TryFromSliceError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::error::private::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn RngCore>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::any::Erased<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<error::ErrorCode>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<getrandom::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, core::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `os::OsRng`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `core::iter::Enumerate<core::str::Chars<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `core::option::Option<(char, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::result::Result<i128, core::num::ParseIntError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u128, core::num::ParseIntError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::num::Wrapping<i128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::num::Wrapping<u128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(char, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<f64, ParseFloatError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i64, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<isize, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u64, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<usize, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::num::Wrapping<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<f32, ParseFloatError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i32, core::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u32, core::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::num::Wrapping<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::Wrapping<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i16, core::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u16, core::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::num::Wrapping<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::num::Wrapping<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::option::Option<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i8, core::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u8, core::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `FloatErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::num::FpCategory`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Subnormal`: 0 bytes
print-type-size     variant `Normal`: 0 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `core::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `core::num::Wrapping<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::num::Wrapping<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@<core::str::Chars<'_> as core::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::option::Option<core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `chacha::ChaCha12Rng`: 320 bytes, alignment: 16 bytes
print-type-size     field `.rng`: 320 bytes
print-type-size type: `chacha::ChaCha20Rng`: 320 bytes, alignment: 16 bytes
print-type-size     field `.rng`: 320 bytes
print-type-size type: `chacha::ChaCha8Rng`: 320 bytes, alignment: 16 bytes
print-type-size     field `.rng`: 320 bytes
print-type-size type: `rand_core::block::BlockRng<chacha::ChaCha12Core>`: 320 bytes, alignment: 16 bytes
print-type-size     field `.results`: 256 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     padding: 8 bytes
print-type-size     field `.core`: 48 bytes, alignment: 16 bytes
print-type-size type: `rand_core::block::BlockRng<chacha::ChaCha20Core>`: 320 bytes, alignment: 16 bytes
print-type-size     field `.results`: 256 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     padding: 8 bytes
print-type-size     field `.core`: 48 bytes, alignment: 16 bytes
print-type-size type: `rand_core::block::BlockRng<chacha::ChaCha8Core>`: 320 bytes, alignment: 16 bytes
print-type-size     field `.results`: 256 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     padding: 8 bytes
print-type-size     field `.core`: 48 bytes, alignment: 16 bytes
print-type-size type: `chacha::Array64<u32>`: 256 bytes, alignment: 4 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `guts::State<ppv_lite86::soft::x2<ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2<ppv_lite86::x86_64::NoNI>, ppv_lite86::x86_64::sse2::G0>>`: 256 bytes, alignment: 32 bytes
print-type-size     field `.a`: 64 bytes
print-type-size     field `.b`: 64 bytes
print-type-size     field `.c`: 64 bytes
print-type-size     field `.d`: 64 bytes
print-type-size type: `guts::State<ppv_lite86::soft::x4<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 256 bytes, alignment: 16 bytes
print-type-size     field `.a`: 64 bytes
print-type-size     field `.b`: 64 bytes
print-type-size     field `.c`: 64 bytes
print-type-size     field `.d`: 64 bytes
print-type-size type: `guts::State<ppv_lite86::soft::x4<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 256 bytes, alignment: 16 bytes
print-type-size     field `.a`: 64 bytes
print-type-size     field `.b`: 64 bytes
print-type-size     field `.c`: 64 bytes
print-type-size     field `.d`: 64 bytes
print-type-size type: `guts::State<ppv_lite86::soft::x4<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>`: 256 bytes, alignment: 16 bytes
print-type-size     field `.a`: 64 bytes
print-type-size     field `.b`: 64 bytes
print-type-size     field `.c`: 64 bytes
print-type-size     field `.d`: 64 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 176 bytes, alignment: 8 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size     field `.a`: 136 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 176 bytes, alignment: 8 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size     field `.a`: 136 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>`: 176 bytes, alignment: 8 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size     field `.a`: 136 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.a`: 96 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.a`: 96 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.a`: 96 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size     field `.a`: 56 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size     field `.a`: 56 bytes
print-type-size type: `std::iter::Zip<std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size     field `.a`: 56 bytes
print-type-size type: `guts::State<ppv_lite86::vec128_storage>`: 64 bytes, alignment: 16 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.c`: 16 bytes
print-type-size     field `.d`: 16 bytes
print-type-size type: `ppv_lite86::soft::x2<ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2<ppv_lite86::x86_64::NoNI>, ppv_lite86::x86_64::sse2::G0>`: 64 bytes, alignment: 32 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `ppv_lite86::soft::x4<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 64 bytes, alignment: 16 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `ppv_lite86::soft::x4<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 64 bytes, alignment: 16 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `ppv_lite86::soft::x4<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>`: 64 bytes, alignment: 16 bytes
print-type-size     field `.0`: 64 bytes
print-type-size type: `ppv_lite86::vec512_storage`: 64 bytes, alignment: 32 bytes
print-type-size     variant `vec512_storage`: 64 bytes
print-type-size         field `.u32x16`: 64 bytes
print-type-size         field `.u64x8`: 64 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.u128x4`: 64 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.sse2`: 64 bytes, offset: 0 bytes, alignment: 16 bytes
print-type-size         field `.avx`: 64 bytes, offset: 0 bytes, alignment: 32 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `chacha::abstract12::ChaCha12Rng`: 56 bytes, alignment: 8 bytes
print-type-size     field `.seed`: 32 bytes
print-type-size     field `.word_pos`: 16 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size type: `chacha::abstract20::ChaCha20Rng`: 56 bytes, alignment: 8 bytes
print-type-size     field `.seed`: 32 bytes
print-type-size     field `.word_pos`: 16 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size type: `chacha::abstract8::ChaCha8Rng`: 56 bytes, alignment: 8 bytes
print-type-size     field `.seed`: 32 bytes
print-type-size     field `.word_pos`: 16 bytes
print-type-size     field `.stream`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>, std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `chacha::ChaCha12Core`: 48 bytes, alignment: 16 bytes
print-type-size     field `.state`: 48 bytes
print-type-size type: `chacha::ChaCha20Core`: 48 bytes, alignment: 16 bytes
print-type-size     field `.state`: 48 bytes
print-type-size type: `chacha::ChaCha8Core`: 48 bytes, alignment: 16 bytes
print-type-size     field `.state`: 48 bytes
print-type-size type: `guts::ChaCha`: 48 bytes, alignment: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.c`: 16 bytes
print-type-size     field `.d`: 16 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<((((&ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>, &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>), &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>), &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>), &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<((((&ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>, &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>), &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>), &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>), &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<((((&ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>, &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>), &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>), &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>), &ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::slice::ChunksExactMut<'_, u8>`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.rem`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `core::core_arch::simd::i32x8`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 4 bytes
print-type-size     field `.2`: 4 bytes
print-type-size     field `.3`: 4 bytes
print-type-size     field `.4`: 4 bytes
print-type-size     field `.5`: 4 bytes
print-type-size     field `.6`: 4 bytes
print-type-size     field `.7`: 4 bytes
print-type-size type: `core::core_arch::simd::i64x4`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size     field `.2`: 8 bytes
print-type-size     field `.3`: 8 bytes
print-type-size type: `core::core_arch::simd::u8x32`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size     field `.4`: 1 bytes
print-type-size     field `.5`: 1 bytes
print-type-size     field `.6`: 1 bytes
print-type-size     field `.7`: 1 bytes
print-type-size     field `.8`: 1 bytes
print-type-size     field `.9`: 1 bytes
print-type-size     field `.10`: 1 bytes
print-type-size     field `.11`: 1 bytes
print-type-size     field `.12`: 1 bytes
print-type-size     field `.13`: 1 bytes
print-type-size     field `.14`: 1 bytes
print-type-size     field `.15`: 1 bytes
print-type-size     field `.16`: 1 bytes
print-type-size     field `.17`: 1 bytes
print-type-size     field `.18`: 1 bytes
print-type-size     field `.19`: 1 bytes
print-type-size     field `.20`: 1 bytes
print-type-size     field `.21`: 1 bytes
print-type-size     field `.22`: 1 bytes
print-type-size     field `.23`: 1 bytes
print-type-size     field `.24`: 1 bytes
print-type-size     field `.25`: 1 bytes
print-type-size     field `.26`: 1 bytes
print-type-size     field `.27`: 1 bytes
print-type-size     field `.28`: 1 bytes
print-type-size     field `.29`: 1 bytes
print-type-size     field `.30`: 1 bytes
print-type-size     field `.31`: 1 bytes
print-type-size type: `ppv_lite86::vec256_storage`: 32 bytes, alignment: 32 bytes
print-type-size     variant `vec256_storage`: 32 bytes
print-type-size         field `.u32x8`: 32 bytes
print-type-size         field `.u64x4`: 32 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.u128x2`: 32 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.sse2`: 32 bytes, offset: 0 bytes, alignment: 16 bytes
print-type-size         field `.avx`: 32 bytes, offset: 0 bytes, alignment: 32 bytes
print-type-size type: `ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2<ppv_lite86::x86_64::NoNI>`: 32 bytes, alignment: 32 bytes
print-type-size     field `.ni`: 0 bytes
print-type-size     field `.x`: 32 bytes
print-type-size type: `std::arch::x86_64::__m256`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 4 bytes
print-type-size     field `.2`: 4 bytes
print-type-size     field `.3`: 4 bytes
print-type-size     field `.4`: 4 bytes
print-type-size     field `.5`: 4 bytes
print-type-size     field `.6`: 4 bytes
print-type-size     field `.7`: 4 bytes
print-type-size type: `std::arch::x86_64::__m256i`: 32 bytes, alignment: 32 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size     field `.2`: 8 bytes
print-type-size     field `.3`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::core_arch::simd::i16x8`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 2 bytes
print-type-size     field `.1`: 2 bytes
print-type-size     field `.2`: 2 bytes
print-type-size     field `.3`: 2 bytes
print-type-size     field `.4`: 2 bytes
print-type-size     field `.5`: 2 bytes
print-type-size     field `.6`: 2 bytes
print-type-size     field `.7`: 2 bytes
print-type-size type: `core::core_arch::simd::i32x4`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 4 bytes
print-type-size     field `.2`: 4 bytes
print-type-size     field `.3`: 4 bytes
print-type-size type: `core::core_arch::simd::i64x2`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size     field `.4`: 1 bytes
print-type-size     field `.5`: 1 bytes
print-type-size     field `.6`: 1 bytes
print-type-size     field `.7`: 1 bytes
print-type-size     field `.8`: 1 bytes
print-type-size     field `.9`: 1 bytes
print-type-size     field `.10`: 1 bytes
print-type-size     field `.11`: 1 bytes
print-type-size     field `.12`: 1 bytes
print-type-size     field `.13`: 1 bytes
print-type-size     field `.14`: 1 bytes
print-type-size     field `.15`: 1 bytes
print-type-size type: `core::core_arch::simd::u8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size     field `.4`: 1 bytes
print-type-size     field `.5`: 1 bytes
print-type-size     field `.6`: 1 bytes
print-type-size     field `.7`: 1 bytes
print-type-size     field `.8`: 1 bytes
print-type-size     field `.9`: 1 bytes
print-type-size     field `.10`: 1 bytes
print-type-size     field `.11`: 1 bytes
print-type-size     field `.12`: 1 bytes
print-type-size     field `.13`: 1 bytes
print-type-size     field `.14`: 1 bytes
print-type-size     field `.15`: 1 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `ppv_lite86::vec128_storage`: 16 bytes, alignment: 16 bytes
print-type-size     variant `vec128_storage`: 16 bytes
print-type-size         field `.u32x4`: 16 bytes
print-type-size         field `.u64x2`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.u128x1`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.sse2`: 16 bytes, offset: 0 bytes, alignment: 16 bytes
print-type-size type: `ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.s3`: 0 bytes
print-type-size     field `.s4`: 0 bytes
print-type-size     field `.ni`: 0 bytes
print-type-size     field `.x`: 16 bytes
print-type-size type: `ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.s3`: 0 bytes
print-type-size     field `.s4`: 0 bytes
print-type-size     field `.ni`: 0 bytes
print-type-size     field `.x`: 16 bytes
print-type-size type: `ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>`: 16 bytes, alignment: 16 bytes
print-type-size     field `.s3`: 0 bytes
print-type-size     field `.s4`: 0 bytes
print-type-size     field `.ni`: 0 bytes
print-type-size     field `.x`: 16 bytes
print-type-size type: `rand_core::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::arch::x86_64::__m128`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 4 bytes
print-type-size     field `.1`: 4 bytes
print-type-size     field `.2`: 4 bytes
print-type-size     field `.3`: 4 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut [u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), rand_core::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `[closure@std_detect::detect::cache::test::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std_detect::detect::cache::Cache`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std_detect::detect::cache::Initializer`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std_detect::detect::arch::x86::Feature`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `aes`: 0 bytes
print-type-size     variant `pclmulqdq`: 0 bytes
print-type-size     variant `rdrand`: 0 bytes
print-type-size     variant `rdseed`: 0 bytes
print-type-size     variant `tsc`: 0 bytes
print-type-size     variant `mmx`: 0 bytes
print-type-size     variant `sse`: 0 bytes
print-type-size     variant `sse2`: 0 bytes
print-type-size     variant `sse3`: 0 bytes
print-type-size     variant `ssse3`: 0 bytes
print-type-size     variant `sse4_1`: 0 bytes
print-type-size     variant `sse4_2`: 0 bytes
print-type-size     variant `sse4a`: 0 bytes
print-type-size     variant `sha`: 0 bytes
print-type-size     variant `avx`: 0 bytes
print-type-size     variant `avx2`: 0 bytes
print-type-size     variant `avx512f`: 0 bytes
print-type-size     variant `avx512cd`: 0 bytes
print-type-size     variant `avx512er`: 0 bytes
print-type-size     variant `avx512pf`: 0 bytes
print-type-size     variant `avx512bw`: 0 bytes
print-type-size     variant `avx512dq`: 0 bytes
print-type-size     variant `avx512vl`: 0 bytes
print-type-size     variant `avx512ifma`: 0 bytes
print-type-size     variant `avx512vbmi`: 0 bytes
print-type-size     variant `avx512vpopcntdq`: 0 bytes
print-type-size     variant `avx512vbmi2`: 0 bytes
print-type-size     variant `gfni`: 0 bytes
print-type-size     variant `vaes`: 0 bytes
print-type-size     variant `vpclmulqdq`: 0 bytes
print-type-size     variant `avx512vnni`: 0 bytes
print-type-size     variant `avx512bitalg`: 0 bytes
print-type-size     variant `avx512bf16`: 0 bytes
print-type-size     variant `avx512vp2intersect`: 0 bytes
print-type-size     variant `f16c`: 0 bytes
print-type-size     variant `fma`: 0 bytes
print-type-size     variant `bmi1`: 0 bytes
print-type-size     variant `bmi2`: 0 bytes
print-type-size     variant `lzcnt`: 0 bytes
print-type-size     variant `tbm`: 0 bytes
print-type-size     variant `popcnt`: 0 bytes
print-type-size     variant `fxsr`: 0 bytes
print-type-size     variant `xsave`: 0 bytes
print-type-size     variant `xsaveopt`: 0 bytes
print-type-size     variant `xsaves`: 0 bytes
print-type-size     variant `xsavec`: 0 bytes
print-type-size     variant `cmpxchg16b`: 0 bytes
print-type-size     variant `adx`: 0 bytes
print-type-size     variant `rtm`: 0 bytes
print-type-size     variant `_last`: 0 bytes
print-type-size type: `[closure@<rand_core::block::BlockRng<chacha::ChaCha12Core> as rand_core::RngCore>::next_u64::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<rand_core::block::BlockRng<chacha::ChaCha20Core> as rand_core::RngCore>::next_u64::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<rand_core::block::BlockRng<chacha::ChaCha8Core> as rand_core::RngCore>::next_u64::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `ppv_lite86::x86_64::Avx2Machine<ppv_lite86::x86_64::NoNI>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `ppv_lite86::x86_64::SseMachine<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `ppv_lite86::x86_64::SseMachine<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `ppv_lite86::x86_64::SseMachine<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&ppv_lite86::x86_64::sse2::u32x4_sse2<ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(ppv_lite86::x86_64::NoS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::NoS4, ppv_lite86::x86_64::NoNI)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(ppv_lite86::x86_64::YesS3, ppv_lite86::x86_64::YesS4, ppv_lite86::x86_64::NoNI)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ppv_lite86::x86_64::NoNI>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ppv_lite86::x86_64::NoS3>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ppv_lite86::x86_64::NoS4>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ppv_lite86::x86_64::YesS3>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ppv_lite86::x86_64::YesS4>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ppv_lite86::x86_64::sse2::G0>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `int::Float<u128>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 24 bytes
print-type-size     field `.neg`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<i128>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<u128>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `int::Float<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size     field `.neg`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `int::FloatKind<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Overflowing`: 23 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::num::Wrapping<i128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::num::Wrapping<u128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<i64>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<isize>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<u64>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `int::FloatKind<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Overflowing`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size type: `int::Float<u32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.kind`: 8 bytes
print-type-size     field `.neg`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `Round<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<i32>>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<u32>>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `int::FloatKind<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Overflowing`: 7 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 2 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size type: `Round<f32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::Wrapping<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::Wrapping<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<i16>>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<u16>>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::num::Wrapping<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::num::Wrapping<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<i8>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::Wrapping<u8>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::num::Wrapping<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::num::Wrapping<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::option::Option<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `core::iter::Enumerate<core::str::Chars<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `core::option::Option<(char, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::result::Result<i128, core::num::ParseIntError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u128, core::num::ParseIntError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::num::Wrapping<i128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::num::Wrapping<u128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(char, usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<f64, ParseFloatError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i128, core::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<i64, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<isize, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<isize, core::num::TryFromIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u128, core::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<u64, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<usize, core::num::ParseIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<usize, core::num::TryFromIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::num::Wrapping<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<f32, ParseFloatError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i32, core::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i32, core::num::TryFromIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<i64, core::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<u32, core::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u64, core::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::Wrapping<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i16, core::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i16, core::num::TryFromIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u16, core::num::ParseIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u16, core::num::TryFromIntError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u32, core::convert::Infallible>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `core::num::Wrapping<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::num::Wrapping<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::option::Option<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i8, core::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<i8, core::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u8, core::num::ParseIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<u8, core::num::TryFromIntError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `FloatErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `Invalid`: 0 bytes
print-type-size type: `ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::num::FpCategory`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Subnormal`: 0 bytes
print-type-size     variant `Normal`: 0 bytes
print-type-size type: `core::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `core::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `core::num::Wrapping<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::num::Wrapping<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@<core::str::Chars<'_> as core::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::f64::<impl f64>::ln::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::f64::<impl f64>::log10::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::f64::<impl f64>::log2::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::option::Option<core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `ExtendedGcd<i128>`: 48 bytes, alignment: 8 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 16 bytes
print-type-size     field `.x`: 16 bytes
print-type-size     field `.y`: 16 bytes
print-type-size type: `ExtendedGcd<u128>`: 48 bytes, alignment: 8 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 16 bytes
print-type-size     field `.x`: 16 bytes
print-type-size     field `.y`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `ExtendedGcd<i64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size     field `.y`: 8 bytes
print-type-size type: `ExtendedGcd<isize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size     field `.y`: 8 bytes
print-type-size type: `ExtendedGcd<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size     field `.y`: 8 bytes
print-type-size type: `ExtendedGcd<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size     field `.y`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-integer-0.1.44/src/roots.rs:265:32: 265:39]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `core::option::Option<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ExtendedGcd<i32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 4 bytes
print-type-size     field `.x`: 4 bytes
print-type-size     field `.y`: 4 bytes
print-type-size type: `ExtendedGcd<u32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 4 bytes
print-type-size     field `.x`: 4 bytes
print-type-size     field `.y`: 4 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-integer-0.1.44/src/roots.rs:312:32: 312:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-integer-0.1.44/src/roots.rs:376:32: 376:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::iter::Rev<core::ops::Range<u32>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `core::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ExtendedGcd<i16>`: 6 bytes, alignment: 2 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 2 bytes
print-type-size     field `.x`: 2 bytes
print-type-size     field `.y`: 2 bytes
print-type-size type: `ExtendedGcd<u16>`: 6 bytes, alignment: 2 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 2 bytes
print-type-size     field `.x`: 2 bytes
print-type-size     field `.y`: 2 bytes
print-type-size type: `core::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `ExtendedGcd<i8>`: 3 bytes, alignment: 1 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 1 bytes
print-type-size     field `.x`: 1 bytes
print-type-size     field `.y`: 1 bytes
print-type-size type: `ExtendedGcd<u8>`: 3 bytes, alignment: 1 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 1 bytes
print-type-size     field `.x`: 1 bytes
print-type-size     field `.y`: 1 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `[closure@std::f64::<impl f64>::ln::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::rc::RcBox<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>`: 368 bytes, alignment: 16 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 352 bytes
print-type-size type: `core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>`: 352 bytes, alignment: 16 bytes
print-type-size     field `.value`: 352 bytes
print-type-size type: `rand_core::block::BlockRng<rngs::adapter::reseeding::ReseedingCore<rand_chacha::ChaCha12Core, rand_core::OsRng>>`: 352 bytes, alignment: 16 bytes
print-type-size     field `.results`: 256 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     padding: 8 bytes
print-type-size     field `.core`: 80 bytes, alignment: 16 bytes
print-type-size type: `rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>`: 352 bytes, alignment: 16 bytes
print-type-size     field `.0`: 352 bytes
print-type-size type: `core::result::Result<rand_chacha::ChaCha12Rng, rand_core::Error>`: 336 bytes, alignment: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 328 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 320 bytes, alignment: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<rngs::std::StdRng, rand_core::Error>`: 336 bytes, alignment: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 328 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 320 bytes, alignment: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `rand_chacha::ChaCha12Rng`: 320 bytes, alignment: 16 bytes
print-type-size     field `.rng`: 320 bytes
print-type-size type: `rand_core::block::BlockRng<rand_chacha::ChaCha12Core>`: 320 bytes, alignment: 16 bytes
print-type-size     field `.results`: 256 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     padding: 8 bytes
print-type-size     field `.core`: 48 bytes, alignment: 16 bytes
print-type-size type: `rngs::std::StdRng`: 320 bytes, alignment: 16 bytes
print-type-size     field `.0`: 320 bytes
print-type-size type: `rand_chacha::chacha::Array64<u32>`: 256 bytes, alignment: 4 bytes
print-type-size     field `.0`: 256 bytes
print-type-size type: `rngs::adapter::reseeding::ReseedingCore<rand_chacha::ChaCha12Core, rand_core::OsRng>`: 80 bytes, alignment: 16 bytes
print-type-size     field `.reseeder`: 0 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size     field `.threshold`: 8 bytes
print-type-size     field `.bytes_until_reseed`: 8 bytes
print-type-size     field `.fork_counter`: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::result::Result<rand_chacha::ChaCha12Core, rand_core::Error>`: 64 bytes, alignment: 16 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, u32>, core::slice::Iter<'_, usize>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, usize>, core::slice::Iter<'_, u32>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::option::Option<core::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `distributions::uniform::UniformDuration`: 48 bytes, alignment: 8 bytes
print-type-size     field `.mode`: 40 bytes
print-type-size     field `.offset`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `distributions::uniform::UniformInt<i128>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.low`: 16 bytes
print-type-size     field `.range`: 16 bytes
print-type-size     field `.z`: 16 bytes
print-type-size type: `distributions::uniform::UniformInt<u128>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.low`: 16 bytes
print-type-size     field `.range`: 16 bytes
print-type-size     field `.z`: 16 bytes
print-type-size type: `rand_chacha::ChaCha12Core`: 48 bytes, alignment: 16 bytes
print-type-size     field `.state`: 48 bytes
print-type-size type: `rand_chacha::guts::ChaCha`: 48 bytes, alignment: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.c`: 16 bytes
print-type-size     field `.d`: 16 bytes
print-type-size type: `distributions::uniform::UniformDurationMode`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Large`: 36 bytes
print-type-size         field `.max_nanos`: 4 bytes
print-type-size         field `.max_secs`: 8 bytes
print-type-size         field `.secs`: 24 bytes
print-type-size     variant `Medium`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.nanos`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Small`: 20 bytes
print-type-size         field `.nanos`: 12 bytes
print-type-size         field `.secs`: 8 bytes
print-type-size type: `seq::index::IndexVecIntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `U32`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `USize`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `core::iter::Map<std::vec::IntoIter<u32>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/seq/index.rs:75:51: 75:54]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, distributions::weighted_index::WeightedError>, seq::index::IndexVec>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `core::result::Result<seq::index::IndexVec, distributions::weighted_index::WeightedError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `hashbrown::raw::RawTableInner<std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size type: `seq::index::IndexVec`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `U32`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `USize`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::vec::IntoIter<u32>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<usize>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `core::fmt::DebugTuple<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::mem::ManuallyDrop<std::vec::Vec<u32>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::mem::ManuallyDrop<std::vec::Vec<usize>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `distributions::uniform::Uniform<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `distributions::uniform::Uniform<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `distributions::uniform::UniformInt<i64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.range`: 8 bytes
print-type-size     field `.z`: 8 bytes
print-type-size type: `distributions::uniform::UniformInt<isize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.range`: 8 bytes
print-type-size     field `.z`: 8 bytes
print-type-size type: `distributions::uniform::UniformInt<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.range`: 8 bytes
print-type-size     field `.z`: 8 bytes
print-type-size type: `distributions::uniform::UniformInt<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.range`: 8 bytes
print-type-size     field `.z`: 8 bytes
print-type-size type: `seq::index::IndexVecIter<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `U32`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `USize`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `core::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `core::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::iter::Rev<core::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::mem::ManuallyDrop<std::boxed::Box<dyn core::any::Any + core::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::num::NonZeroU128`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::num::Wrapping<i128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::num::Wrapping<u128>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, rand_core::Error>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::Range<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&dyn core::error::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&u32, &usize)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&usize, &u32)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::NonZeroU128>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::time::Duration>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::NonNull<dyn core::any::Any + core::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::NonNull<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::Unique<dyn core::any::Any + core::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::Unique<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[usize]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<(), rand_core::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<(), std::boxed::Box<dyn core::any::Any + core::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, rand_core::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<[u8]>, core::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<distributions::bernoulli::Bernoulli, distributions::bernoulli::BernoulliError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::slice::Iter<'_, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::Iter<'_, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `distributions::uniform::UniformFloat<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.low`: 8 bytes
print-type-size     field `.scale`: 8 bytes
print-type-size type: `ppv_lite86::x86_64::vec128_storage`: 16 bytes, alignment: 16 bytes
print-type-size     variant `vec128_storage`: 16 bytes
print-type-size         field `.u32x4`: 16 bytes
print-type-size         field `.u64x2`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.u128x1`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.sse2`: 16 bytes, offset: 0 bytes, alignment: 16 bytes
print-type-size type: `rand_core::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `rngs::mock::StepRng`: 16 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size     field `.a`: 8 bytes
print-type-size type: `std::boxed::Box<dyn core::any::Any + core::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::io::Write::write_fmt::Adapter<'_, std::sys::unix::stdio::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::panicking::r#try::Data<core::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>::{closure#0}]>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::sys_common::once::futex::CompletionGuard<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `.set_state_on_drop_to`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::thread::__LocalKeyInner<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::ops::RangeInclusive<u32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `distributions::uniform::Uniform<u32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `distributions::uniform::UniformChar`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sampler`: 12 bytes
print-type-size type: `distributions::uniform::UniformInt<i32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.low`: 4 bytes
print-type-size     field `.range`: 4 bytes
print-type-size     field `.z`: 4 bytes
print-type-size type: `distributions::uniform::UniformInt<u32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.low`: 4 bytes
print-type-size     field `.range`: 4 bytes
print-type-size     field `.z`: 4 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/rngs/adapter/reseeding.rs:220:45: 220:53]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/rustc/511364e7874dba9649a264100407e4bffe7b5425/library/std/src/sys/common/thread_local/fast_local.rs:115:31: 115:38]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as core::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sync::Once::call_once<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/rngs/adapter/reseeding.rs:319:28: 319:30]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `core::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `core::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<core::option::Option<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::iter::Rev<core::ops::Range<u32>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<core::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>::{closure#0}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<std::boxed::Box<std::rc::RcBox<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `core::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::num::Wrapping<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, std::thread::AccessError>, &std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&mut core::option::Option<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::NonZeroU64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::NonZeroUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<unsafe extern "C" fn()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::any::Any + core::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::any::Erased<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::error::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<i128>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<i16>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<i32>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<i64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<i8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<isize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<u128>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<u16>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<u32>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<core::num::Wrapping<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<f32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<i128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<i16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<i32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<std::rc::RcBox<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<std::rc::RcBox<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<char>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<i128>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<i16>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<i32>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<i64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<i8>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<isize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<u128>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<u16>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<u32>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<core::num::Wrapping<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<f32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<i128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<i16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<i32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u128>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<bool>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<char>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<i128>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<i16>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<i32>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<i64>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<i8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<isize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<u128>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<u16>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<u32>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<core::num::Wrapping<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<f32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<i128>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<i16>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<i32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<i8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u128>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u16>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<&std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<u8>, core::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u32, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `distributions::bernoulli::Bernoulli`: 8 bytes, alignment: 8 bytes
print-type-size     field `.p_int`: 8 bytes
print-type-size type: `distributions::uniform::UniformFloat<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.low`: 4 bytes
print-type-size     field `.scale`: 4 bytes
print-type-size type: `rngs::adapter::read::ReadError`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `rngs::thread::ThreadRng`: 8 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::rc::RcBox<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::OnceState`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::sys::common::thread_local::lazy::LazyKeyInner<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::sys_common::once::futex::OnceState`: 8 bytes, alignment: 4 bytes
print-type-size     field `.set_state_to`: 4 bytes
print-type-size     field `.poisoned`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::thread::LocalKey<core::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::rc::Rc<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `distributions::uniform::UniformInt<i16>`: 6 bytes, alignment: 2 bytes
print-type-size     field `.low`: 2 bytes
print-type-size     field `.range`: 2 bytes
print-type-size     field `.z`: 2 bytes
print-type-size type: `distributions::uniform::UniformInt<u16>`: 6 bytes, alignment: 2 bytes
print-type-size     field `.low`: 2 bytes
print-type-size     field `.range`: 2 bytes
print-type-size     field `.z`: 2 bytes
print-type-size type: `core::cell::Cell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::mem::ManuallyDrop<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::mem::MaybeUninit<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `core::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::Wrapping<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::num::Wrapping<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `core::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `core::time::Nanoseconds`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::sync::Once`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sys_common::once::futex::Once`: 4 bytes, alignment: 4 bytes
print-type-size     field `.state`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `distributions::uniform::UniformInt<i8>`: 3 bytes, alignment: 1 bytes
print-type-size     field `.low`: 1 bytes
print-type-size     field `.range`: 1 bytes
print-type-size     field `.z`: 1 bytes
print-type-size type: `distributions::uniform::UniformInt<u8>`: 3 bytes, alignment: 1 bytes
print-type-size     field `.low`: 1 bytes
print-type-size     field `.range`: 1 bytes
print-type-size     field `.z`: 1 bytes
print-type-size type: `core::num::NonZeroU16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::num::Wrapping<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::num::Wrapping<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::option::Option<core::num::NonZeroU16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::cell::Cell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cell::UnsafeCell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::num::NonZeroU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::num::Wrapping<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `core::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/rngs/adapter/reseeding.rs:319:28: 319:30]>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::num::NonZeroU8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<std::sys::unix::stdio::Stderr>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<(), distributions::weighted_index::WeightedError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, distributions::weighted_index::WeightedError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `distributions::weighted_index::WeightedError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NoItem`: 0 bytes
print-type-size     variant `InvalidWeight`: 0 bytes
print-type-size     variant `AllWeightsZero`: 0 bytes
print-type-size     variant `TooMany`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::sys::common::thread_local::fast_local::fast::DtorState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unregistered`: 0 bytes
print-type-size     variant `Registered`: 0 bytes
print-type-size     variant `RunningOrHasRun`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/rngs/adapter/reseeding.rs:319:28: 319:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/rngs/thread.rs:71:54: 71:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/rngs/thread.rs:89:35: 89:38]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/seq/index.rs:111:73: 111:81]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/seq/index.rs:114:73: 114:81]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/seq/index.rs:150:50: 150:53]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/seq/index.rs:182:44: 182:47]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/seq/index.rs:75:51: 75:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<rand_core::block::BlockRng<rand_chacha::ChaCha12Core> as rand_core::RngCore>::next_u64::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<rand_core::block::BlockRng<rngs::adapter::reseeding::ReseedingCore<rand_chacha::ChaCha12Core, rand_core::OsRng>> as rand_core::RngCore>::next_u64::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as core::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::iter::Iterator::all::check<(&u32, &usize), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/seq/index.rs:111:73: 111:81]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::iter::Iterator::all::check<(&usize, &u32), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rand-0.8.5/src/seq/index.rs:114:73: 114:81]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::collections::hash_map::RandomState::new::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::any::Demand<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::error::private::Internal`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::any::Any + core::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::any::Erased<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error + core::marker::Send + core::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::error::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<std::rc::RcBox<core::cell::UnsafeCell<rngs::adapter::reseeding::ReseedingRng<rand_chacha::ChaCha12Core, rand_core::OsRng>>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `core::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `core::ops::ControlFlow<(), core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, core::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `distributions::Standard`: 0 bytes, alignment: 1 bytes
print-type-size type: `distributions::bernoulli::BernoulliError`: 0 bytes, alignment: 1 bytes
print-type-size     variant `InvalidProbability`: 0 bytes
print-type-size type: `distributions::float::Open01`: 0 bytes, alignment: 1 bytes
print-type-size type: `distributions::float::OpenClosed01`: 0 bytes, alignment: 1 bytes
print-type-size type: `distributions::other::Alphanumeric`: 0 bytes, alignment: 1 bytes
print-type-size type: `distributions::slice::EmptySlice`: 0 bytes, alignment: 1 bytes
print-type-size type: `rand_core::OsRng`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::sys::unix::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `array::traits::InnerError`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `UnequalLen`: 16 bytes
print-type-size         field `.actual`: 8 bytes
print-type-size         field `.expected`: 8 bytes
print-type-size     variant `Misaligned`: 0 bytes
print-type-size type: `array::traits::TryFromBitSliceError`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `core::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::result::Result<(), array::traits::InnerError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<(), array::traits::TryFromBitSliceError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<usize, core::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::ptr::NonNull<[()]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<[()]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[()]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[()]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<(), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `access::BitSafeU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `access::BitSafeUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `core::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `core::cell::Cell<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::ops::ControlFlow<usize, core::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::ops::RangeToInclusive<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::sync::atomic::AtomicU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `core::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `mem::BitElement`: 8 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size type: `mem::BitElement<core::cell::Cell<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size type: `mem::BitElement<core::cell::Cell<usize>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size type: `mem::BitElement<core::sync::atomic::AtomicU64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size type: `mem::BitElement<core::sync::atomic::AtomicUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size type: `mem::BitElement<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size type: `wyz::Address<wyz::Const, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.comu`: 0 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `wyz::Address<wyz::Frozen<wyz::Mut>, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.comu`: 0 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `wyz::Address<wyz::Mut, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.comu`: 0 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `access::BitSafeU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `core::cell::Cell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `core::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `mem::BitElement<core::cell::Cell<u32>>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.elem`: 4 bytes
print-type-size type: `mem::BitElement<core::sync::atomic::AtomicU32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.elem`: 4 bytes
print-type-size type: `mem::BitElement<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.elem`: 4 bytes
print-type-size type: `core::ops::RangeInclusive<u8>`: 3 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size type: `access::BitSafeU16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.inner`: 2 bytes
print-type-size type: `core::cell::Cell<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `core::cell::UnsafeCell<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `core::ops::Range<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `core::option::Option<(bool, bool)>`: 2 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::sync::atomic::AtomicU16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.v`: 2 bytes
print-type-size type: `mem::BitElement<core::cell::Cell<u16>>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.elem`: 2 bytes
print-type-size type: `mem::BitElement<core::sync::atomic::AtomicU16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.elem`: 2 bytes
print-type-size type: `mem::BitElement<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.elem`: 2 bytes
print-type-size type: `access::BitSafeU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size type: `core::cell::Cell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::iter::Repeat<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.element`: 1 bytes
print-type-size type: `core::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::iter::Repeat<bool>>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::sync::atomic::AtomicU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `core::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `index::BitIdx`: 1 bytes, alignment: 1 bytes
print-type-size     field `._ty`: 0 bytes
print-type-size     field `.idx`: 1 bytes
print-type-size type: `mem::BitElement<core::cell::Cell<u8>>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.elem`: 1 bytes
print-type-size type: `mem::BitElement<core::sync::atomic::AtomicU8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.elem`: 1 bytes
print-type-size type: `mem::BitElement<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.elem`: 1 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<order::Lsb0>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<order::Msb0>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<usize>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<wyz::Address<wyz::Const, [usize]>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<wyz::Address<wyz::Mut, [usize]>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::ops::ControlFlow<(), core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::option::Option<core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, core::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, wyz::NullPtrError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `order::Lsb0`: 0 bytes, alignment: 1 bytes
print-type-size type: `order::Msb0`: 0 bytes, alignment: 1 bytes
print-type-size type: `wyz::Const`: 0 bytes, alignment: 1 bytes
print-type-size type: `wyz::Frozen<wyz::Const>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `wyz::Frozen<wyz::Mut>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `wyz::Mut`: 0 bytes, alignment: 1 bytes
print-type-size type: `wyz::NullPtrError`: 0 bytes, alignment: 1 bytes
print-type-size type: `num_integer::ExtendedGcd<bigint::BigInt>`: 96 bytes, alignment: 8 bytes
print-type-size     field `._hidden`: 0 bytes
print-type-size     field `.gcd`: 32 bytes
print-type-size     field `.x`: 32 bytes
print-type-size     field `.y`: 32 bytes
print-type-size type: `core::iter::Take<core::iter::Enumerate<core::iter::Zip<core::slice::Iter<'_, u64>, core::slice::Iter<'_, u64>>>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 64 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `core::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::iter::Enumerate<core::iter::Zip<core::slice::Iter<'_, u64>, core::slice::Iter<'_, u64>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.count`: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size type: `core::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, u64>, core::slice::Iter<'_, u64>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::iter::Zip<core::slice::Iter<'_, u64>, core::slice::IterMut<'_, u64>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::iter::Zip<core::slice::IterMut<'_, u64>, core::slice::Iter<'_, u64>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `core::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `core::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::option::Option<core::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `[closure@core::iter::adapters::map::map_fold<&u64, u64, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:191:39: 191:44], [closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:191:39: 191:44]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@core::iter::adapters::map::map_fold<&u64, u64, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:329:39: 329:44], [closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:329:39: 329:44]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@core::iter::adapters::map::map_fold<&u64, u64, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:94:39: 94:44], [closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:94:39: 94:44]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `std::vec::Drain<'_, u64>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.tail_start`: 8 bytes
print-type-size     field `.tail_len`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `TryFromBigIntError<bigint::BigInt>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.original`: 32 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/convert.rs:128:48: 128:51]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@core::iter::adapters::map::map_fold<&[u8], u64, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:51:14: 51:21], [closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Chunks<'_, u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:51:14: 51:21]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@core::iter::adapters::map::map_fold<&u64, u64, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:363:39: 363:44], [closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:363:39: 363:44]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@core::iter::adapters::map::map_fold<&u64, u64, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:399:39: 399:44], [closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:399:39: 399:44]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `bigint::BigInt`: 32 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size     field `.sign`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `core::iter::Map<core::slice::Chunks<'_, u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:51:14: 51:21]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:191:39: 191:44]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:329:39: 329:44]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:94:39: 94:44]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `core::option::Option<bigint::BigInt>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<bigint::BigInt, ParseBigIntError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<biguint::BigUint, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `core::result::Result<i128, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<i128, TryFromBigIntError<biguint::BigUint>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<i16, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `core::result::Result<i32, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::result::Result<i64, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<i8, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<isize, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<u128, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<u128, TryFromBigIntError<biguint::BigUint>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<u16, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `core::result::Result<u32, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::result::Result<u64, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<u8, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<usize, TryFromBigIntError<bigint::BigInt>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `TryFromBigIntError<biguint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.original`: 24 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:394:48: 394:51]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/power.rs:185:24: 185:36]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Cloned<core::slice::Iter<'_, u64>>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Chunks<'_, u32>, for<'a> fn(&'a [u32]) -> u64 {biguint::u32_chunk_to_u64}>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Chunks<'_, u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:51:14: 51:21]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:191:39: 191:44]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:329:39: 329:44]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:363:39: 363:44]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:399:39: 399:44]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:94:39: 94:44]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::adapters::map::map_fold<&[u32], u64, (), for<'a> fn(&'a [u32]) -> u64 {biguint::u32_chunk_to_u64}, [closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Chunks<'_, u32>, for<'a> fn(&'a [u32]) -> u64 {biguint::u32_chunk_to_u64}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@core::iter::adapters::map::map_fold<&u64, u64, (), for<'a> fn(&'a u64) -> u64 {<u64 as core::clone::Clone>::clone}, [closure@core::iter::Iterator::for_each::call<u64, [closure@std::vec::Vec<u64>::extend_trusted<core::iter::Cloned<core::slice::Iter<'_, u64>>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::rt::begin_panic<&str>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u64>::extend_trusted<core::iter::Cloned<core::slice::Iter<'_, u64>>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Chunks<'_, u32>, for<'a> fn(&'a [u32]) -> u64 {biguint::u32_chunk_to_u64}>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Chunks<'_, u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:51:14: 51:21]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:191:39: 191:44]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:329:39: 329:44]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:363:39: 363:44]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:399:39: 399:44]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u64>::extend_trusted<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:94:39: 94:44]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `bigint::CheckedUnsignedAbs<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Positive`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Negative`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `biguint::BigUint`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `biguint::iter::U32Digits<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size     field `.next_is_lo`: 1 bytes
print-type-size     field `.last_hi_is_zero`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::iter::Enumerate<core::slice::Iter<'_, u64>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `core::iter::Map<core::slice::Chunks<'_, u32>, for<'a> fn(&'a [u32]) -> u64 {biguint::u32_chunk_to_u64}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:363:39: 363:44]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:399:39: 399:44]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `core::iter::Skip<core::iter::Rev<core::slice::Iter<'_, u8>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `core::iter::Skip<core::slice::Iter<'_, u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `core::iter::Skip<core::slice::IterMut<'_, u64>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<biguint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `core::mem::MaybeUninit<biguint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, biguint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ParseBigIntError>, biguint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, std::collections::TryReserveError>, core::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, std::collections::TryReserveErrorKind>, core::alloc::Layout>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, std::collections::TryReserveErrorKind>, core::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::option::Option<(&u64, &[u64])>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(core::ptr::NonNull<u8>, core::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(usize, (&u64, &u64))>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<biguint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `core::result::Result<&str, core::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<biguint::BigUint, ParseBigIntError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<biguint::BigUint, TryFromBigIntError<()>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::alloc::Layout, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<[u8]>, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<i128, TryFromBigIntError<()>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<i16, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `core::result::Result<i32, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::result::Result<i64, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<i8, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<isize, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<u128, TryFromBigIntError<()>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u16, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `core::result::Result<u32, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `core::result::Result<u64, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::result::Result<u8, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::result::Result<usize, TryFromBigIntError<biguint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::slice::Chunks<'_, u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `core::slice::Chunks<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `std::borrow::Cow<'_, biguint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Borrowed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<biguint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u32>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:191:39: 191:44]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:329:39: 329:44]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:94:39: 94:44]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:407:35: 407:43]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<biguint::BigUint>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u32>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `bigint::CheckedUnsignedAbs<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Positive`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Negative`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `bigint::CheckedUnsignedAbs<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Positive`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Negative`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `biguint::iter::U64Digits<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `core::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `core::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `core::iter::Cloned<core::slice::Iter<'_, u64>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `core::iter::Copied<core::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:912:30: 912:34]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Map<core::slice::Iter<'_, u64>, for<'a> fn(&'a u64) -> u64 {<u64 as core::clone::Clone>::clone}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Rev<core::ops::Range<usize>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Rev<core::slice::Iter<'_, u64>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Rev<core::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Rev<core::slice::IterMut<'_, u64>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::iter::Rev<core::slice::IterMut<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `core::mem::ManuallyDrop<std::boxed::Box<[u64]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::mem::ManuallyDrop<std::boxed::Box<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::mem::ManuallyDrop<std::boxed::Box<dyn core::any::Any + core::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `core::ops::Bound<&usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Included`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Excluded`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, (&u64, &u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, std::collections::TryReserveError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::ops::Range<*mut u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&[core::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&mut u64, &u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&u64, &mut u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(&u64, &u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<(usize, &u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::NonNull<dyn core::any::Any + core::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::Unique<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::Unique<dyn core::any::Any + core::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[biguint::BigUint]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[biguint::BigUint]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u32]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::alloc::Layout, core::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<[u8]>, core::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<i64, TryFromBigIntError<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<isize, TryFromBigIntError<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u64, TryFromBigIntError<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<usize, TryFromBigIntError<()>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `core::slice::Iter<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::slice::IterMut<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::str::Bytes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `core::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::boxed::Box<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn core::any::Any + core::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::rt::begin_panic::PanicPayload<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `<std::vec::Drain<'_, T, A> as core::ops::Drop>::drop::DropGuard<'_, '_, u64, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:363:39: 363:44]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/bits.rs:399:39: 399:44]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:450:35: 450:43]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:491:35: 491:43]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:103:32: 103:36]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:124:18: 124:27]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:141:22: 141:31]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:158:39: 158:43]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:189:39: 189:43]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:45:32: 45:36]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:51:14: 51:21]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:55:26: 55:35]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/convert.rs:66:32: 66:36]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/iter.rs:72:30: 72:37]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::RawVec<u64>::shrink::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::iter::Iterator::try_for_each::call<&u64, core::ops::ControlFlow<core::ops::ControlFlow<core::cmp::Ordering, core::cmp::Ordering>>, [closure@core::iter::traits::iterator::iter_compare::compare<'_, core::iter::Rev<core::slice::Iter<'_, u64>>, &u64, core::cmp::Ordering, [closure@core::iter::Iterator::cmp_by::compare<&u64, &u64, [closure@<core::iter::Rev<core::slice::Iter<'_, u64>> as core::iter::Iterator>::cmp<core::iter::Rev<core::slice::Iter<'_, u64>>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::iter::traits::iterator::iter_compare::compare<'_, core::iter::Rev<core::slice::Iter<'_, u64>>, &u64, core::cmp::Ordering, [closure@core::iter::Iterator::cmp_by::compare<&u64, &u64, [closure@<core::iter::Rev<core::slice::Iter<'_, u64>> as core::iter::Iterator>::cmp<core::iter::Rev<core::slice::Iter<'_, u64>>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `bigint::CheckedUnsignedAbs<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Positive`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Negative`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `biguint::monty::MontyReducer`: 8 bytes, alignment: 8 bytes
print-type-size     field `.n0inv`: 8 bytes
print-type-size type: `core::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `core::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `core::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, &u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, f32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `core::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `core::option::Option<&core::fmt::Arguments<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&u128>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&u32>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<f32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::any::Any + core::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::DynMetadata<dyn core::panic::BoxMeUp>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `core::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<[u64; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<[u8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<biguint::BigUint>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<std::vec::Vec<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<[u64; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<[u8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<biguint::BigUint>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<u32>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::result::Result<&[u64; 1], core::array::TryFromSliceError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::ptr::NonNull<u8>, core::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<i32, TryFromBigIntError<()>>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u32, TryFromBigIntError<()>>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::boxed::Box<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[u64; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[u8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::vec::ExtendElement<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `bigint::CheckedUnsignedAbs<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Positive`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Negative`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `core::option::Option<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i16, TryFromBigIntError<()>>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u16, TryFromBigIntError<()>>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `bigint::CheckedUnsignedAbs<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Positive`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Negative`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::ops::ControlFlow<core::cmp::Ordering, core::cmp::Ordering>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<core::cmp::Ordering, core::cmp::Ordering>, core::convert::Infallible>`: 2 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<core::cmp::Ordering, core::cmp::Ordering>>`: 2 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::ControlFlow<core::ops::ControlFlow<core::ops::ControlFlow<core::cmp::Ordering, core::cmp::Ordering>, core::convert::Infallible>>`: 2 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::ops::Range<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     field `.start`: 1 bytes
print-type-size     field `.end`: 1 bytes
print-type-size type: `core::option::Option<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<i8, TryFromBigIntError<()>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<u8, TryFromBigIntError<()>>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `BigIntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size type: `ParseBigIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `bigint::Sign`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Minus`: 0 bytes
print-type-size     variant `NoSign`: 0 bytes
print-type-size     variant `Plus`: 0 bytes
print-type-size type: `core::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `core::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `core::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `core::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `core::ops::ControlFlow<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<core::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `core::result::Result<(), core::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, ParseBigIntError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `TryFromBigIntError<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.original`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/bigint/convert.rs:324:25: 324:27]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:892:43: 892:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:899:52: 899:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:912:30: 912:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/iter.rs:26:18: 26:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/multiplication.rs:341:33: 341:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/multiplication.rs:341:56: 341:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/multiplication.rs:342:33: 342:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/multiplication.rs:342:56: 342:59]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/power.rs:155:44: 155:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/subtraction.rs:102:40: 102:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint/subtraction.rs:70:40: 70:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<core::iter::Rev<core::slice::Iter<'_, u64>> as core::iter::Iterator>::cmp<core::iter::Rev<core::slice::Iter<'_, u64>>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<u64 as core::iter::Sum>::sum<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:912:30: 912:34]>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<u64 as std::vec::is_zero::IsZero>::is_zero::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::iter::Iterator::cmp_by::compare<&u64, &u64, [closure@<core::iter::Rev<core::slice::Iter<'_, u64>> as core::iter::Iterator>::cmp<core::iter::Rev<core::slice::Iter<'_, u64>>>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::iter::adapters::map::map_fold<&u64, u64, u64, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:912:30: 912:34], [closure@<u64 as core::iter::Sum>::sum<core::iter::Map<core::slice::Iter<'_, u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-0.3.3/src/biguint.rs:912:30: 912:34]>>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::slice::range<core::ops::RangeTo<usize>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::slice::range<core::ops::RangeTo<usize>>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::f64::<impl f64>::ln::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::f64::<impl f64>::log2::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::array::TryFromSliceError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<[u64; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<[u64]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<[u8; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<biguint::BigUint>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::any::Any + core::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<dyn core::panic::BoxMeUp>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<u32>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::option::Option<core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::result::Result<core::convert::Infallible, core::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Skip<std::iter::Enumerate<std::slice::Iter<'_, num_bigint::BigUint>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `Step`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Add`: 16 bytes
print-type-size         field `.left`: 8 bytes
print-type-size         field `.right`: 8 bytes
print-type-size     variant `Double`: 8 bytes
print-type-size         field `.index`: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<num_bigint::BigUint, [closure@std::vec::Vec<num_bigint::BigUint>::extend_trusted<std::iter::Map<std::ops::RangeInclusive<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addchain-0.2.0/src/bbbd.rs:57:31: 57:34]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<u64, num_bigint::BigUint, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addchain-0.2.0/src/bbbd.rs:57:31: 57:34], [closure@std::iter::Iterator::for_each::call<num_bigint::BigUint, [closure@std::vec::Vec<num_bigint::BigUint>::extend_trusted<std::iter::Map<std::ops::RangeInclusive<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addchain-0.2.0/src/bbbd.rs:57:31: 57:34]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), u64, [closure@std::iter::adapters::map::map_fold<u64, num_bigint::BigUint, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addchain-0.2.0/src/bbbd.rs:57:31: 57:34], [closure@std::iter::Iterator::for_each::call<num_bigint::BigUint, [closure@std::vec::Vec<num_bigint::BigUint>::extend_trusted<std::iter::Map<std::ops::RangeInclusive<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addchain-0.2.0/src/bbbd.rs:57:31: 57:34]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<num_bigint::BigUint>::extend_trusted<std::iter::Map<std::ops::RangeInclusive<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addchain-0.2.0/src/bbbd.rs:57:31: 57:34]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `bbbd::Chain`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 24 bytes
print-type-size type: `num_bigint::BigUint`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `std::borrow::Cow<'_, num_bigint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Borrowed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, num_bigint::BigUint>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::RangeInclusive<u64>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addchain-0.2.0/src/bbbd.rs:57:31: 57:34]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::RangeInclusive<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::vec::Vec<Step>, Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::vec::Vec<Step>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<num_bigint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<Step>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<num_bigint::BigUint>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[num_bigint::BigUint]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[num_bigint::BigUint]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &num_bigint::BigUint)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[num_bigint::BigUint]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[num_bigint::BigUint]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[Step]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[num_bigint::BigUint]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[Step]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[num_bigint::BigUint]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, num_bigint::BigUint>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, num_bigint::BigUint>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::boxed::Box<[num_bigint::BigUint; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[u64; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &num_bigint::BigUint>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::RangeToInclusive<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut num_bigint::BigUint>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&num_bigint::BigUint>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<Step>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[num_bigint::BigUint; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u64; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<num_bigint::BigUint>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<Step>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[num_bigint::BigUint; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[u64; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<num_bigint::BigUint>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<num_bigint::BigUint>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<num_bigint::BigUint>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `Error`: 0 bytes, alignment: 1 bytes
print-type-size     variant `InvalidChain`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/addchain-0.2.0/src/bbbd.rs:57:31: 57:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut num_bigint::BigUint>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&num_bigint::BigUint>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<Step>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[num_bigint::BigUint; 3]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[num_bigint::BigUint]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u64; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u64]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<num_bigint::BigUint>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `item::ImplItem`: 672 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Const`: 664 bytes
print-type-size         field `.0`: 664 bytes
print-type-size     variant `Type`: 480 bytes
print-type-size         field `.0`: 480 bytes
print-type-size     variant `Method`: 352 bytes
print-type-size         field `.0`: 352 bytes
print-type-size     variant `Macro`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<item::ImplItem>`: 672 bytes, alignment: 8 bytes
print-type-size     field `.value`: 672 bytes
print-type-size type: `std::mem::MaybeUninit<item::ImplItem>`: 672 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 672 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 672 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::ImplItem>`: 672 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 672 bytes
print-type-size         field `.0`: 672 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<item::ImplItem, error::Error>`: 672 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 672 bytes
print-type-size         field `.0`: 672 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `item::ImplItemConst`: 664 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.expr`: 272 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.defaultness`: 8 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::result::Result<item::ImplItemConst, error::Error>`: 664 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 664 bytes
print-type-size         field `.0`: 664 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::TraitItem`: 648 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Const`: 640 bytes
print-type-size         field `.0`: 640 bytes
print-type-size     variant `Type`: 488 bytes
print-type-size         field `.0`: 488 bytes
print-type-size     variant `Method`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Macro`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::GenericParam, token::Comma)>`: 648 bytes, alignment: 8 bytes
print-type-size     field `.value`: 648 bytes
print-type-size type: `std::mem::ManuallyDrop<item::TraitItem>`: 648 bytes, alignment: 8 bytes
print-type-size     field `.value`: 648 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::GenericParam, token::Comma)>`: 648 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 648 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 648 bytes
print-type-size type: `std::mem::MaybeUninit<item::TraitItem>`: 648 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 648 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 648 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::TraitItem>`: 648 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 648 bytes
print-type-size         field `.0`: 648 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<item::TraitItem, error::Error>`: 648 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 648 bytes
print-type-size         field `.0`: 648 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `generics::GenericParam`: 640 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Const`: 632 bytes
print-type-size         field `.0`: 632 bytes
print-type-size     variant `Type`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `Lifetime`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `item::TraitItemConst`: 640 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.default`: 280 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::GenericParam>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.value`: 640 bytes
print-type-size type: `std::mem::MaybeUninit<generics::GenericParam>`: 640 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 640 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 640 bytes
print-type-size type: `std::result::Result<generics::GenericParam, error::Error>`: 640 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 640 bytes
print-type-size         field `.0`: 640 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<item::TraitItemConst, error::Error>`: 640 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 640 bytes
print-type-size         field `.0`: 640 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `generics::ConstParam`: 632 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.default`: 272 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::ConstParam>`: 632 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 632 bytes
print-type-size         field `.0`: 632 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::ConstParam, error::Error>`: 632 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 632 bytes
print-type-size         field `.0`: 632 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::WherePredicate, token::Comma)>`: 592 bytes, alignment: 8 bytes
print-type-size     field `.value`: 592 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::WherePredicate, token::Comma)>`: 592 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 592 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 592 bytes
print-type-size type: `generics::PredicateEq`: 584 bytes, alignment: 8 bytes
print-type-size     field `.lhs_ty`: 288 bytes
print-type-size     field `.rhs_ty`: 288 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `generics::WherePredicate`: 584 bytes, alignment: 8 bytes
print-type-size     variant `Eq`: 584 bytes
print-type-size         field `.0`: 584 bytes
print-type-size     variant `Type`: 384 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 376 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::WherePredicate>`: 584 bytes, alignment: 8 bytes
print-type-size     field `.value`: 584 bytes
print-type-size type: `std::mem::MaybeUninit<generics::WherePredicate>`: 584 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 584 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 584 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::WherePredicate>`: 584 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 584 bytes
print-type-size         field `.0`: 584 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::WherePredicate, error::Error>`: 584 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 584 bytes
print-type-size         field `.0`: 584 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `item::parsing::FlexibleItemType`: 496 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.defaultness`: 8 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.ty`: 296 bytes
print-type-size     field `.type_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::parsing::FlexibleItemType>`: 496 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 496 bytes
print-type-size         field `.0`: 496 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::parsing::FlexibleItemType, error::Error>`: 496 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 496 bytes
print-type-size         field `.0`: 496 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::TraitItemType`: 488 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.default`: 296 bytes
print-type-size     field `.type_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::result::Result<item::TraitItemType, error::Error>`: 488 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 488 bytes
print-type-size         field `.0`: 488 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::ImplItemType`: 480 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.defaultness`: 8 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.type_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<item::ImplItemType, error::Error>`: 480 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 480 bytes
print-type-size         field `.0`: 480 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `generics::TypeParam`: 392 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.default`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(data::Variant, token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     field `.value`: 392 bytes
print-type-size type: `std::mem::MaybeUninit<(data::Variant, token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 392 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 392 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TypeParam>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::TypeParam, error::Error>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `data::Variant`: 384 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.discriminant`: 280 bytes
print-type-size type: `std::mem::ManuallyDrop<(data::Field, token::Comma)>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.value`: 384 bytes
print-type-size type: `std::mem::ManuallyDrop<data::Variant>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.value`: 384 bytes
print-type-size type: `std::mem::MaybeUninit<(data::Field, token::Comma)>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 384 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 384 bytes
print-type-size type: `std::mem::MaybeUninit<data::Variant>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 384 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 384 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::Variant>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(data::Field, token::Comma)>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<data::Variant, error::Error>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `data::Field`: 376 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `generics::PredicateType`: 376 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.bounded_ty`: 288 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<(data::Field, ())>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.value`: 376 bytes
print-type-size type: `std::mem::ManuallyDrop<data::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.value`: 376 bytes
print-type-size type: `std::mem::MaybeUninit<(data::Field, ())>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 376 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 376 bytes
print-type-size type: `std::mem::MaybeUninit<data::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 376 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 376 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::IntoIter<data::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 376 bytes
print-type-size type: `std::option::Item<data::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 376 bytes
print-type-size type: `std::option::Option<(data::Field, ())>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<data::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<data::Field, error::Error>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<(ty::BareFnArg, token::Comma)>`: 360 bytes, alignment: 8 bytes
print-type-size     field `.value`: 360 bytes
print-type-size type: `std::mem::MaybeUninit<(ty::BareFnArg, token::Comma)>`: 360 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 360 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 360 bytes
print-type-size type: `item::ImplItemMethod`: 352 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.defaultness`: 8 bytes
print-type-size     field `.sig`: 264 bytes
print-type-size type: `std::mem::ManuallyDrop<ty::BareFnArg>`: 352 bytes, alignment: 8 bytes
print-type-size     field `.value`: 352 bytes
print-type-size type: `std::mem::MaybeUninit<ty::BareFnArg>`: 352 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 352 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 352 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<ty::BareFnArg>>`: 352 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 352 bytes
print-type-size         field `.0`: 352 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<ty::BareFnArg>`: 352 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 352 bytes
print-type-size         field `.0`: 352 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<item::ImplItemMethod, error::Error>`: 352 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 352 bytes
print-type-size         field `.0`: 352 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<ty::BareFnArg>, error::Error>`: 352 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 352 bytes
print-type-size         field `.0`: 352 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::BareFnArg, error::Error>`: 352 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 352 bytes
print-type-size         field `.0`: 352 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ty::BareFnArg`: 352 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.name`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<(expr::FieldValue, token::Comma)>`: 344 bytes, alignment: 8 bytes
print-type-size     field `.value`: 344 bytes
print-type-size type: `std::mem::MaybeUninit<(expr::FieldValue, token::Comma)>`: 344 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 344 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 344 bytes
print-type-size type: `expr::FieldValue`: 336 bytes, alignment: 8 bytes
print-type-size     field `.member`: 32 bytes
print-type-size     field `.expr`: 272 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(path::GenericArgument, token::Comma)>`: 336 bytes, alignment: 8 bytes
print-type-size     field `.value`: 336 bytes
print-type-size type: `std::mem::ManuallyDrop<expr::FieldValue>`: 336 bytes, alignment: 8 bytes
print-type-size     field `.value`: 336 bytes
print-type-size type: `std::mem::MaybeUninit<(path::GenericArgument, token::Comma)>`: 336 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 336 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 336 bytes
print-type-size type: `std::mem::MaybeUninit<expr::FieldValue>`: 336 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 336 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 336 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::FieldValue>`: 336 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 336 bytes
print-type-size         field `.0`: 336 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::FieldValue, error::Error>`: 336 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 336 bytes
print-type-size         field `.0`: 336 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::TraitItemMethod`: 328 bytes, alignment: 8 bytes
print-type-size     field `.default`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.sig`: 264 bytes
print-type-size type: `path::Binding`: 328 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::GenericArgument`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 328 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Binding`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Const`: 312 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Constraint`: 112 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 80 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<path::GenericArgument>`: 328 bytes, alignment: 8 bytes
print-type-size     field `.value`: 328 bytes
print-type-size type: `std::mem::MaybeUninit<path::GenericArgument>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 328 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 328 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::Binding>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::GenericArgument>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::TraitItemMethod, error::Error>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::Binding, error::Error>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::GenericArgument, error::Error>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::ForeignItem`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Fn`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Macro`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Static`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Type`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `item::ForeignItemFn`: 320 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.sig`: 264 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::Item`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Fn`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Trait`: 256 bytes
print-type-size         field `.0`: 256 bytes
print-type-size     variant `Impl`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Struct`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `TraitAlias`: 216 bytes
print-type-size         field `.0`: 216 bytes
print-type-size     variant `Union`: 216 bytes
print-type-size         field `.0`: 216 bytes
print-type-size     variant `Enum`: 208 bytes
print-type-size         field `.0`: 208 bytes
print-type-size     variant `Type`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size     variant `Macro`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Use`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `ExternCrate`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Macro2`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Mod`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Static`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Const`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `ForeignMod`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `item::ItemFn`: 320 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.block`: 8 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.sig`: 264 bytes
print-type-size type: `std::mem::ManuallyDrop<item::ForeignItem>`: 320 bytes, alignment: 8 bytes
print-type-size     field `.value`: 320 bytes
print-type-size type: `std::mem::ManuallyDrop<item::Item>`: 320 bytes, alignment: 8 bytes
print-type-size     field `.value`: 320 bytes
print-type-size type: `std::mem::ManuallyDrop<stmt::Stmt>`: 320 bytes, alignment: 8 bytes
print-type-size     field `.value`: 320 bytes
print-type-size type: `std::mem::MaybeUninit<item::ForeignItem>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 320 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 320 bytes
print-type-size type: `std::mem::MaybeUninit<item::Item>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 320 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 320 bytes
print-type-size type: `std::mem::MaybeUninit<stmt::Stmt>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 320 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 320 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::ForeignItem>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::Item>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, stmt::Stmt>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ForeignItem, error::Error>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ForeignItemFn, error::Error>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::Item, error::Error>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemFn, error::Error>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<stmt::Stmt, error::Error>`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `stmt::Stmt`: 320 bytes, alignment: 8 bytes
print-type-size     variant `Item`: 320 bytes
print-type-size         field `.0`: 320 bytes
print-type-size     variant `Semi`: 276 bytes
print-type-size         field `.0`: 272 bytes
print-type-size         field `.1`: 4 bytes
print-type-size     variant `Expr`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Local`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size type: `std::mem::ManuallyDrop<(expr::GenericMethodArgument, token::Comma)>`: 296 bytes, alignment: 8 bytes
print-type-size     field `.value`: 296 bytes
print-type-size type: `std::mem::ManuallyDrop<(ty::Type, token::Comma)>`: 296 bytes, alignment: 8 bytes
print-type-size     field `.value`: 296 bytes
print-type-size type: `std::mem::MaybeUninit<(expr::GenericMethodArgument, token::Comma)>`: 296 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 296 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 296 bytes
print-type-size type: `std::mem::MaybeUninit<(ty::Type, token::Comma)>`: 296 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 296 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 296 bytes
print-type-size type: `std::option::Option<(token::Eq, ty::Type)>`: 296 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 296 bytes
print-type-size         field `.0`: 296 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `expr::GenericMethodArgument`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Const`: 280 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 272 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<expr::GenericMethodArgument>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::mem::ManuallyDrop<ty::Type>`: 288 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size type: `std::mem::MaybeUninit<expr::GenericMethodArgument>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `std::mem::MaybeUninit<ty::Type>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 288 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 288 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::GenericMethodArgument>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::Type>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<ty::Type>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<expr::GenericMethodArgument, error::Error>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::Type, error::Error>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypeArray, error::Error>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `ty::Type`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `BareFn`: 184 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 72 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Never`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `ty::TypeArray`: 288 bytes, alignment: 8 bytes
print-type-size     field `.len`: 272 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<(expr::Expr, token::Comma)>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.value`: 280 bytes
print-type-size type: `std::mem::MaybeUninit<(expr::Expr, token::Comma)>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 280 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 280 bytes
print-type-size type: `std::option::Option<(token::Eq, expr::Expr)>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `expr::Expr`: 272 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ForLoop`: 264 bytes
print-type-size         field `.0`: 264 bytes
print-type-size     variant `Let`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `MethodCall`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `While`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Closure`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Loop`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Block`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `If`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Async`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Call`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Continue`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Field`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Array`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Match`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `TryBlock`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Unsafe`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `AssignOp`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Binary`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Lit`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Assign`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Cast`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Index`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Repeat`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Await`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Group`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Paren`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Return`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Try`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unary`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Yield`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<expr::Expr>`: 272 bytes, alignment: 8 bytes
print-type-size     field `.value`: 272 bytes
print-type-size type: `std::mem::MaybeUninit<expr::Expr>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 272 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 272 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Expr>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<expr::Expr>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<expr::Expr, error::Error>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `expr::ExprForLoop`: 264 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.in_token`: 4 bytes
print-type-size type: `item::Signature`: 264 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.variadic`: 40 bytes
print-type-size     field `.constness`: 8 bytes
print-type-size     field `.asyncness`: 8 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprForLoop>`: 264 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 264 bytes
print-type-size         field `.0`: 264 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::Signature>`: 264 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 264 bytes
print-type-size         field `.0`: 264 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprForLoop, error::Error>`: 264 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 264 bytes
print-type-size         field `.0`: 264 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::Signature, error::Error>`: 264 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 264 bytes
print-type-size         field `.0`: 264 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::ItemTrait`: 256 bytes, alignment: 8 bytes
print-type-size     field `.supertraits`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.items`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.auto_token`: 8 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.trait_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `std::result::Result<item::ItemTrait, error::Error>`: 256 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 256 bytes
print-type-size         field `.0`: 256 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `derive::DeriveInput`: 232 bytes, alignment: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size type: `item::ItemImpl`: 232 bytes, alignment: 8 bytes
print-type-size     field `.trait_`: 64 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.self_ty`: 8 bytes
print-type-size     field `.items`: 24 bytes
print-type-size     field `.defaultness`: 8 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `item::ItemStruct`: 232 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<item::ItemImpl>>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<item::ItemImpl>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<derive::DeriveInput, error::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<item::ItemImpl, error::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemStruct, error::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<item::ItemImpl>, error::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::ItemTraitAlias`: 216 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.trait_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::ItemUnion`: 216 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.fields`: 40 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<item::ItemTraitAlias, error::Error>`: 216 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 216 bytes
print-type-size         field `.0`: 216 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemUnion, error::Error>`: 216 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 216 bytes
print-type-size         field `.0`: 216 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `expr::Arm`: 208 bytes, alignment: 8 bytes
print-type-size     field `.guard`: 16 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.fat_arrow_token`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.body`: 8 bytes
print-type-size     field `.comma`: 8 bytes
print-type-size type: `item::ItemEnum`: 208 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<expr::Arm>`: 208 bytes, alignment: 8 bytes
print-type-size     field `.value`: 208 bytes
print-type-size type: `std::mem::MaybeUninit<expr::Arm>`: 208 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 208 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 208 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Arm>`: 208 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 208 bytes
print-type-size         field `.0`: 208 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::Arm, error::Error>`: 208 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 208 bytes
print-type-size         field `.0`: 208 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<item::ItemEnum, error::Error>`: 208 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 208 bytes
print-type-size         field `.0`: 208 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `item::ItemType`: 192 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.type_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::result::Result<item::ItemType, error::Error>`: 192 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 192 bytes
print-type-size         field `.0`: 192 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `stmt::Local`: 192 bytes, alignment: 8 bytes
print-type-size     field `.init`: 16 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.let_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `expr::ExprLet`: 184 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.let_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size type: `std::result::Result<expr::ExprLet, error::Error>`: 184 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::vec::Vec<attr::Attribute>, data::Visibility, token::Trait, proc_macro2::Ident, generics::Generics)>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<ty::TypeBareFn>>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<ty::TypeBareFn>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(std::vec::Vec<attr::Attribute>, data::Visibility, token::Trait, proc_macro2::Ident, generics::Generics), error::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<ty::TypeBareFn>, error::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeBareFn, error::Error>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ty::TypeBareFn`: 176 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.variadic`: 40 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `item::ItemMacro`: 168 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::ItemMacro>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemMacro, error::Error>`: 168 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 168 bytes
print-type-size         field `.0`: 168 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `expr::ExprMethodCall`: 152 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `.turbofish`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.receiver`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `item::ItemUse`: 152 bytes, alignment: 8 bytes
print-type-size     field `.tree`: 80 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.use_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<(pat::Pat, token::Comma)>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.value`: 152 bytes
print-type-size type: `std::mem::ManuallyDrop<(pat::Pat, token::Or)>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.value`: 152 bytes
print-type-size type: `std::mem::MaybeUninit<(pat::Pat, token::Comma)>`: 152 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 152 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 152 bytes
print-type-size type: `std::mem::MaybeUninit<(pat::Pat, token::Or)>`: 152 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 152 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 152 bytes
print-type-size type: `std::result::Result<expr::ExprMethodCall, error::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemUse, error::Error>`: 152 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `pat::Pat`: 144 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TupleStruct`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Ident`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Or`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Slice`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Lit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Rest`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Wild`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<pat::Pat>`: 144 bytes, alignment: 8 bytes
print-type-size     field `.value`: 144 bytes
print-type-size type: `std::mem::MaybeUninit<pat::Pat>`: 144 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 144 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 144 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, pat::Pat>`: 144 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<pat::Pat, error::Error>`: 144 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 144 bytes
print-type-size         field `.0`: 144 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `item::ForeignItemMacro`: 136 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `item::ImplItemMacro`: 136 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `item::ItemExternCrate`: 136 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.rename`: 40 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     field `.crate_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::TraitItemMacro`: 136 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `pat::PatTupleStruct`: 136 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 64 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, pat::PatTupleStruct>`: 136 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ForeignItemMacro, error::Error>`: 136 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ImplItemMacro, error::Error>`: 136 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemExternCrate, error::Error>`: 136 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::TraitItemMacro, error::Error>`: 136 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<pat::PatTupleStruct, error::Error>`: 136 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `expr::ExprMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `expr::ExprStruct`: 128 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.rest`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `item::ItemMacro2`: 128 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.rules`: 40 bytes
print-type-size     field `.macro_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::ItemMod`: 128 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.semi`: 8 bytes
print-type-size     field `.mod_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `pat::PatMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `punctuated::IntoPairs<path::PathSegment, token::Colon2>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `.last`: 96 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprStruct>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::ItemMod>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprMacro, error::Error>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprStruct, error::Error>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemMacro2, error::Error>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemMod, error::Error>`: 128 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `expr::ExprWhile`: 120 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.while_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::ItemStatic`: 120 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.static_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `pat::PatStruct`: 120 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::TypeParamBound, token::Add)>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.value`: 120 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::TypeParamBound, token::Add)>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 120 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 120 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprWhile>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, pat::PatStruct>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(generics::TypeParamBound, token::Add)>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<expr::ExprWhile, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemStatic, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<pat::PatStruct, error::Error>`: 120 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `expr::ExprClosure`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.body`: 8 bytes
print-type-size     field `.movability`: 8 bytes
print-type-size     field `.asyncness`: 8 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.or1_token`: 4 bytes
print-type-size     field `.or2_token`: 4 bytes
print-type-size type: `expr::ExprLoop`: 112 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.loop_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `generics::TraitBound`: 112 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.paren_token`: 8 bytes
print-type-size     field `.modifier`: 8 bytes
print-type-size type: `generics::TypeParamBound`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Trait`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Lifetime`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `item::ForeignItemStatic`: 112 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.static_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::ItemConst`: 112 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<(generics::LifetimeDef, token::Comma)>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.value`: 112 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::TypeParamBound>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.value`: 112 bytes
print-type-size type: `std::mem::MaybeUninit<(generics::LifetimeDef, token::Comma)>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 112 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 112 bytes
print-type-size type: `std::mem::MaybeUninit<generics::TypeParamBound>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 112 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 112 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprLoop>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TraitBound>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TypeParamBound>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::IntoIter<generics::TypeParamBound>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 112 bytes
print-type-size type: `std::option::Item<generics::TypeParamBound>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 112 bytes
print-type-size type: `std::option::Option<generics::TypeParamBound>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<expr::ExprClosure, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprLoop, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::TraitBound, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::TypeParamBound, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ForeignItemStatic, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemConst, error::Error>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `attr::Attribute`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size type: `expr::ExprBlock`: 104 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `expr::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `generics::LifetimeDef`: 104 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `mac::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.delimiter`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `pat::PatPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `punctuated::Pair<path::PathSegment, token::Colon2>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 104 bytes
print-type-size         field `.0`: 96 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(attr::NestedMeta, token::Comma)>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::ManuallyDrop<(path::PathSegment, token::Colon2)>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::ManuallyDrop<attr::Attribute>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::ManuallyDrop<generics::LifetimeDef>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<(attr::NestedMeta, token::Comma)>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<(path::PathSegment, token::Colon2)>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<attr::Attribute>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<generics::LifetimeDef>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, attr::Attribute>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprBlock>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprPath>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::LifetimeDef>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, mac::Macro>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(path::PathSegment, token::Colon2)>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<path::PathSegment, token::Colon2>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<attr::Attribute, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprBlock, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprPath, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::LifetimeDef, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<mac::Macro, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeMacro, error::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ty::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `attr::Meta`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `List`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `NameValue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Path`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `attr::NestedMeta`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Meta`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Lit`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `path::PathSegment`: 96 bytes, alignment: 8 bytes
print-type-size     field `.arguments`: 64 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size type: `punctuated::Pair<item::FnArg, token::Comma>`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Punctuated`: 92 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `End`: 92 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 88 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(item::FnArg, token::Comma)>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<attr::NestedMeta>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<path::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::mem::MaybeUninit<(item::FnArg, token::Comma)>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 96 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 96 bytes
print-type-size type: `std::mem::MaybeUninit<attr::NestedMeta>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 96 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 96 bytes
print-type-size type: `std::mem::MaybeUninit<path::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 96 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 96 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<generics::WhereClause>, data::Fields, std::option::Option<token::Semi>)>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, attr::Meta>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, attr::NestedMeta>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::IntoIter<path::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::option::Item<path::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 96 bytes
print-type-size type: `std::option::Option<(item::FnArg, token::Comma)>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<path::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<item::FnArg, token::Comma>>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<generics::WhereClause>, data::Fields, std::option::Option<token::Semi>), error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<attr::Meta, error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<attr::NestedMeta, error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<path::PathSegment, error::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `attr::MetaList`: 88 bytes, alignment: 8 bytes
print-type-size     field `.nested`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `attr::MetaNameValue`: 88 bytes, alignment: 8 bytes
print-type-size     field `.lit`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprIf`: 88 bytes, alignment: 8 bytes
print-type-size     field `.then_branch`: 32 bytes
print-type-size     field `.else_branch`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.if_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `generics::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `item::FnArg`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Receiver`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Typed`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `item::ForeignItemType`: 88 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.type_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `item::Receiver`: 88 bytes, alignment: 8 bytes
print-type-size     field `.reference`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.self_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `pat::PatIdent`: 88 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.subpat`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.by_ref`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size type: `std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::vec::IntoIter<proc_macro2::TokenTree>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.a`: 32 bytes
print-type-size     field `.b`: 32 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(item::UseTree, token::Comma)>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::mem::ManuallyDrop<item::FnArg>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::mem::MaybeUninit<(item::UseTree, token::Comma)>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 88 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 88 bytes
print-type-size type: `std::mem::MaybeUninit<item::FnArg>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 88 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 88 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprIf>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::Generics>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::FnArg>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<attr::MetaList, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<attr::MetaNameValue, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprIf, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::Generics, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::FnArg, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ForeignItemType, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::Receiver, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<pat::PatIdent, error::Error>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `expr::ExprBreak`: 80 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.break_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `generics::PredicateLifetime`: 80 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::UseTree`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Rename`: 76 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Name`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Glob`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::iter::Flatten<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 80 bytes
print-type-size type: `std::iter::Peekable<proc_macro2::token_stream::IntoIter>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.peeked`: 40 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>, std::vec::IntoIter<proc_macro2::TokenTree>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<(pat::FieldPat, token::Comma)>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::ManuallyDrop<item::UseTree>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::MaybeUninit<(pat::FieldPat, token::Comma)>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 80 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 80 bytes
print-type-size type: `std::mem::MaybeUninit<item::UseTree>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 80 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 80 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<generics::WhereClause>, data::FieldsNamed)>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<generics::WhereClause>, token::Brace, punctuated::Punctuated<data::Variant, token::Comma>)>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (std::option::Option<path::QSelf>, path::Path)>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::UseTree>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypePath>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenTree, proc_macro2::TokenTree)>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<generics::WhereClause>, data::FieldsNamed), error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(std::option::Option<generics::WhereClause>, token::Brace, punctuated::Punctuated<data::Variant, token::Comma>), error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(std::option::Option<path::QSelf>, path::Path), error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprBreak, error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::UseTree, error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypePath, error::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ty::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size type: `core::str::iter::SplitInternal<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.matcher`: 48 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.allow_trailing_empty`: 1 bytes
print-type-size     field `.finished`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `expr::ExprAsync`: 72 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.async_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprCall`: 72 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprContinue`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.continue_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprField`: 72 bytes, alignment: 8 bytes
print-type-size     field `.member`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `file::File`: 72 bytes, alignment: 8 bytes
print-type-size     field `.shebang`: 24 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.items`: 24 bytes
print-type-size type: `item::ItemForeignMod`: 72 bytes, alignment: 8 bytes
print-type-size     field `.abi`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.items`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::UseRename`: 72 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.rename`: 32 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `pat::FieldPat`: 72 bytes, alignment: 8 bytes
print-type-size     field `.member`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `path::Constraint`: 72 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.a`: 32 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<pat::FieldPat>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.value`: 72 bytes
print-type-size type: `std::mem::MaybeUninit<pat::FieldPat>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 72 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 72 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, file::File>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, item::ItemForeignMod>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, pat::FieldPat>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::Constraint>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprAsync, error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprCall, error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprContinue, error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprField, error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<file::File, error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<item::ItemForeignMod, error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<pat::FieldPat, error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::Constraint, error::Error>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::Split<'_, char>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `derive::Data`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Union`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Enum`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size type: `derive::DataStruct`: 64 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprArray`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprMatch`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.arms`: 24 bytes
print-type-size     field `.match_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `expr::ExprTryBlock`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.try_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprUnsafe`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.unsafe_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `lit::LitFloatRepr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.digits`: 16 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `lit::LitIntRepr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.digits`: 16 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `pat::PatOr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.cases`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.leading_vert`: 8 bytes
print-type-size type: `pat::PatSlice`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `pat::PatTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::PathArguments`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `AngleBracketed`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Parenthesized`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<lit::LitFloatRepr>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::ManuallyDrop<lit::LitIntRepr>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<lit::LitFloatRepr>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<lit::LitIntRepr>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((mac::MacroDelimiter, proc_macro2::TokenStream), buffer::Cursor<'_>)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((proc_macro2::Span, parse::ParseBuffer<'_>), buffer::Cursor<'_>)>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprMatch>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprTryBlock>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprUnsafe>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, pat::PatTuple>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(std::option::Option<token::Bang>, path::Path, token::For)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<((mac::MacroDelimiter, proc_macro2::TokenStream), buffer::Cursor<'_>), error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<((proc_macro2::Span, parse::ParseBuffer<'_>), buffer::Cursor<'_>), error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprArray, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprMatch, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprTryBlock, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprTuple, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprUnsafe, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<pat::PatSlice, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<pat::PatTuple, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<ty::TypeReference, error::Error>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ty::TypeReference`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `buffer::Cursor<'a>::empty::UnsafeSyncEntry`: 56 bytes, alignment: 8 bytes
print-type-size     field `.0`: 56 bytes
print-type-size type: `buffer::Entry`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `End`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `error::ErrorMessage`: 56 bytes, alignment: 8 bytes
print-type-size     field `.start_span`: 16 bytes
print-type-size     field `.end_span`: 16 bytes
print-type-size     field `.message`: 24 bytes
print-type-size type: `expr::ExprAssignOp`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `expr::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `expr::ExprLit`: 56 bytes, alignment: 8 bytes
print-type-size     field `.lit`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `expr::ExprRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.from`: 8 bytes
print-type-size     field `.to`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `lookahead::Lookahead1<'_>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.comparisons`: 32 bytes
print-type-size     field `.cursor`: 16 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `pat::PatRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lo`: 8 bytes
print-type-size     field `.hi`: 8 bytes
print-type-size type: `path::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::ParenthesizedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (attr::NestedMeta, token::Comma)>, std::slice::Iter<'_, (attr::NestedMeta, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (data::Field, token::Comma)>, std::slice::Iter<'_, (data::Field, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (data::Variant, token::Comma)>, std::slice::Iter<'_, (data::Variant, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (expr::Expr, token::Comma)>, std::slice::Iter<'_, (expr::Expr, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (expr::FieldValue, token::Comma)>, std::slice::Iter<'_, (expr::FieldValue, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (expr::GenericMethodArgument, token::Comma)>, std::slice::Iter<'_, (expr::GenericMethodArgument, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (generics::GenericParam, token::Comma)>, std::slice::Iter<'_, (generics::GenericParam, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (generics::LifetimeDef, token::Comma)>, std::slice::Iter<'_, (generics::LifetimeDef, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (generics::TypeParamBound, token::Add)>, std::slice::Iter<'_, (generics::TypeParamBound, token::Add)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (generics::WherePredicate, token::Comma)>, std::slice::Iter<'_, (generics::WherePredicate, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (item::FnArg, token::Comma)>, std::slice::Iter<'_, (item::FnArg, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (item::UseTree, token::Comma)>, std::slice::Iter<'_, (item::UseTree, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (lifetime::Lifetime, token::Add)>, std::slice::Iter<'_, (lifetime::Lifetime, token::Add)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (pat::FieldPat, token::Comma)>, std::slice::Iter<'_, (pat::FieldPat, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (pat::Pat, token::Comma)>, std::slice::Iter<'_, (pat::Pat, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (pat::Pat, token::Or)>, std::slice::Iter<'_, (pat::Pat, token::Or)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (path::GenericArgument, token::Comma)>, std::slice::Iter<'_, (path::GenericArgument, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (path::PathSegment, token::Colon2)>, std::slice::Iter<'_, (path::PathSegment, token::Colon2)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (ty::BareFnArg, token::Comma)>, std::slice::Iter<'_, (ty::BareFnArg, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, (ty::Type, token::Comma)>, std::slice::Iter<'_, (ty::Type, token::Comma)>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, attr::Attribute>, std::slice::Iter<'_, attr::Attribute>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, expr::Arm>, std::slice::Iter<'_, expr::Arm>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, item::ForeignItem>, std::slice::Iter<'_, item::ForeignItem>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, item::ImplItem>, std::slice::Iter<'_, item::ImplItem>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, item::Item>, std::slice::Iter<'_, item::Item>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, item::TraitItem>, std::slice::Iter<'_, item::TraitItem>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, stmt::Stmt>, std::slice::Iter<'_, stmt::Stmt>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::str::Chars<'_>, std::slice::Iter<'_, proc_macro2::Span>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<buffer::Entry>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::ManuallyDrop<error::ErrorMessage>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<buffer::Entry>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::mem::MaybeUninit<error::ErrorMessage>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 56 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 56 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, error::ErrorMessage>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (lifetime::Lifetime, buffer::Cursor<'_>)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::TokenStream, buffer::Cursor<'_>)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::TokenTree, buffer::Cursor<'_>)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::ExprLit>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::AngleBracketedGenericArguments>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::ParenthesizedGenericArguments>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Break`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<generics::BoundLifetimes>>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(lifetime::Lifetime, buffer::Cursor<'_>)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenTree, buffer::Cursor<'_>)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::As, path::Path)>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<error::ErrorMessage>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(lifetime::Lifetime, buffer::Cursor<'_>), error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::TokenStream, buffer::Cursor<'_>), error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::TokenTree, buffer::Cursor<'_>), error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprAssignOp, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprBinary, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprLit, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprRange, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<path::AngleBracketedGenericArguments, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<path::ParenthesizedGenericArguments, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<generics::BoundLifetimes>, error::Error>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/attr.rs:193:22: 193:42]`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `alloc::sync::ArcInner<std::thread::Inner>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 32 bytes
print-type-size type: `data::Fields`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unnamed`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `derive::DataUnion`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 40 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprAssign`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprIndex`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 0 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprRepeat`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `expr::ExprType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::Label`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 40 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::MethodTurbofish`: 48 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `generics::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::UsePath`: 48 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.colon2_token`: 8 bytes
print-type-size     field `.tree`: 8 bytes
print-type-size type: `lit::LitRepr`: 48 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `pat::PatReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `pat::PatType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<(lifetime::Lifetime, token::Add)>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<lit::LitRepr>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::ManuallyDrop<path::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<(lifetime::Lifetime, token::Add)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<lit::LitRepr>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<path::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, (proc_macro2::Literal, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (lit::Lit, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (mac::MacroDelimiter, proc_macro2::TokenStream)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Group, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Ident, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Literal, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::FieldsNamed>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::FieldsUnnamed>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Label>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::WhereClause>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, group::Group<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, pat::PatType>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, path::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<expr::Label>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<generics::WhereClause>>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(buffer::Cursor<'_>, proc_macro2::Span, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(lit::Lit, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Literal, buffer::Cursor<'_>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenTree, &proc_macro2::Span)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::And, std::option::Option<lifetime::Lifetime>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<expr::Label>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<expr::MethodTurbofish>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<generics::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(lit::Lit, buffer::Cursor<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(mac::MacroDelimiter, proc_macro2::TokenStream), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::Group, buffer::Cursor<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::Ident, buffer::Cursor<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::Literal, buffer::Cursor<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::Span, parse::ParseBuffer<'_>), error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<data::FieldsNamed, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<data::FieldsUnnamed, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprAssign, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprCast, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprIndex, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprReference, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprRepeat, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprReturn, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::ExprType, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprYield, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::Label, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<generics::BoundLifetimes, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 48 bytes
print-type-size         padding: 24 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<generics::WhereClause, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Braces<'_>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Brackets<'_>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Group<'_>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<group::Parens<'_>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<pat::PatReference, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<pat::PatType, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<path::Path, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<expr::Label>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<generics::WhereClause>, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeImplTrait, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeTuple, error::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `data::FieldsNamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `data::FieldsUnnamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `derive::DataEnum`: 40 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `expr::ExprAwait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.await_token`: 4 bytes
print-type-size type: `expr::ExprBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprParen`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprReturn`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.return_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprTry`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.question_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `expr::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `expr::ExprYield`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.yield_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `generics::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Braces<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Brackets<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Group<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `group::Parens<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.content`: 32 bytes
print-type-size     field `.token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `item::UseGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.items`: 32 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `lifetime::Lifetime`: 40 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `pat::PatBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::TokenTree`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Once<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<(usize, proc_macro2::Group)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<lifetime::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<(usize, proc_macro2::Group)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<lifetime::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lifetime::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<attr::NestedMeta, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<data::Field, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<data::Variant, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<expr::Expr, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<generics::TypeParamBound, token::Add>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<item::FnArg, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<item::UseTree, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, punctuated::Punctuated<ty::Type, token::Comma>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lifetime::Lifetime>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, stmt::Block>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypeTraitObject>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, proc_macro2::LexError>, proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::option::IntoIter<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::option::Item<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 40 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, token::Colon)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::As, proc_macro2::Ident)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, proc_macro2::Group)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<generics::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lifetime::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::imp::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ty::Variadic>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<expr::ExprBox, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprGroup, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprParen, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprTry, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<expr::ExprUnary, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<lifetime::Lifetime, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<parse::ParseBuffer<'_>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<pat::PatBox, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<pat::PatWild, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenTree, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<attr::NestedMeta, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<data::Field, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<data::Variant, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<expr::Expr, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<generics::TypeParamBound, token::Add>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<item::FnArg, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<item::UseTree, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<punctuated::Punctuated<ty::Type, token::Comma>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<lifetime::Lifetime>, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<stmt::Block, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypePtr, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<ty::TypeTraitObject, error::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::string::FromUtf8Error`: 40 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size type: `ty::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `ty::TypeTuple`: 40 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::Variadic`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `error::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 32 bytes
print-type-size type: `expr::Member`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `item::UseName`: 32 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size type: `lit::Lit`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `parse::ParseBuffer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `pat::PatLit`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size type: `pat::PatRest`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dot2_token`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `pat::PatWild`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `path::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `proc_macro2::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::fallback::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 24 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::Group`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `proc_macro2::imp::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `punctuated::IntoIter<data::Field>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `punctuated::IntoIter<generics::TypeParamBound>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `punctuated::Punctuated<attr::NestedMeta, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<data::Field, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<data::Field, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<data::Variant, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<expr::Expr, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<expr::FieldValue, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<expr::GenericMethodArgument, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<generics::GenericParam, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<generics::LifetimeDef, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<generics::TypeParamBound, token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<generics::WherePredicate, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<item::FnArg, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<item::UseTree, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<lifetime::Lifetime, token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<pat::FieldPat, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<pat::Pat, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<pat::Pat, token::Or>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<path::GenericArgument, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<path::PathSegment, token::Colon2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<ty::BareFnArg, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `punctuated::Punctuated<ty::Type, token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::cell::RefCell<std::vec::Vec<&str>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(data::Field, ())>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Add)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Skip<punctuated::Pairs<'_, path::PathSegment, token::Colon2>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (attr::NestedMeta, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (data::Field, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (data::Variant, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (expr::Expr, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (expr::FieldValue, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (expr::GenericMethodArgument, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (generics::GenericParam, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (generics::LifetimeDef, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (generics::TypeParamBound, token::Add)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (generics::WherePredicate, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (item::FnArg, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (item::UseTree, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (lifetime::Lifetime, token::Add)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (pat::FieldPat, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (pat::Pat, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (pat::Pat, token::Or)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (path::GenericArgument, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (path::PathSegment, token::Colon2)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (ty::BareFnArg, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, (ty::Type, token::Comma)>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, attr::Attribute>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, error::ErrorMessage>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, expr::Arm>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, item::ForeignItem>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, item::ImplItem>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, item::Item>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, item::TraitItem>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, stmt::Stmt>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<stmt::Block>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<stmt::Block>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, (std::boxed::Box<str>, std::boxed::Box<str>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro2::Literal>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ((), buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (expr::parsing::raw, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (item::parsing::macro_rules, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Punct, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (proc_macro2::Span, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (token::Else, std::boxed::Box<expr::Expr>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, (token::Underscore, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [proc_macro2::Span; 3]>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, data::Visibility>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Member>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::RangeLimits>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::Lit>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, op::BinOp>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<proc_macro2::Ident>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Colon2>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Dot3>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<ty::Abi>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::vec::Vec<attr::Attribute>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::vec::Vec<stmt::Stmt>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Dot3>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Break`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::Abi>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::ReturnType>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, ty::TypeGroup>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<(proc_macro2::Punct, buffer::Cursor<'_>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::boxed::Box<str>, std::boxed::Box<str>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::Brace, std::vec::Vec<item::Item>)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, punctuated::Pair<&path::PathSegment, &token::Colon2>)>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<path::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Literal>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::IntoIter<proc_macro2::TokenTree>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<stmt::Block>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::cell::Cell<parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<((), buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(expr::parsing::raw, buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(item::parsing::macro_rules, buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(proc_macro2::Punct, buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(proc_macro2::Span, buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<(token::Else, std::boxed::Box<expr::Expr>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(token::Underscore, buffer::Cursor<'_>), error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<[proc_macro2::Span; 3], error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<data::Visibility, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::Member, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<expr::RangeLimits, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<lit::Lit, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<op::BinOp, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<proc_macro2::Group, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Ident, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Literal, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro2::Literal, proc_macro2::LexError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 5 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<proc_macro2::Punct, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro2::Ident>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Colon2>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Dot3>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<ty::Abi>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<attr::Attribute>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<attr::NestedMeta>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::vec::Vec<stmt::Stmt>, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<token::Dot3, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<token::DotDotEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<token::ShlEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<token::ShrEq, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::result::Result<ty::Abi, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ty::ReturnType, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ty::TypeGroup, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ty::TypeParen, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ty::TypeSlice, error::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::thread::Inner`: 32 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.id`: 8 bytes
print-type-size     field `.parker`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::vec::IntoIter<(data::Field, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<(data::Field, token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<(generics::TypeParamBound, token::Add)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<(path::PathSegment, token::Colon2)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<(usize, proc_macro2::Group)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<attr::Attribute>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<data::Field>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<error::ErrorMessage>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<generics::TypeParamBound>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `stmt::Block`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stmts`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:2305:42: 2305:55]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<data::Field, [closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, ())>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<data::Field, [closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<data::Field, [closure@std::vec::Vec<data::Field>::extend_trusted<std::option::IntoIter<data::Field>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<generics::TypeParamBound, [closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Add)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<generics::TypeParamBound, [closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::option::IntoIter<generics::TypeParamBound>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(data::Field, ()), data::Field, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58], [closure@std::iter::Iterator::for_each::call<data::Field, [closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, ())>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(data::Field, token::Comma), data::Field, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58], [closure@std::iter::Iterator::for_each::call<data::Field, [closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(generics::TypeParamBound, token::Add), generics::TypeParamBound, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58], [closure@std::iter::Iterator::for_each::call<generics::TypeParamBound, [closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Add)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, ())>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<data::Field>::extend_trusted<std::iter::Map<std::vec::IntoIter<(data::Field, token::Comma)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<data::Field>::extend_trusted<std::option::IntoIter<data::Field>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::iter::Map<std::vec::IntoIter<(generics::TypeParamBound, token::Add)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<generics::TypeParamBound>::extend_trusted<std::option::IntoIter<generics::TypeParamBound>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `bigint::BigInt`: 24 bytes, alignment: 8 bytes
print-type-size     field `.digits`: 24 bytes
print-type-size type: `data::VisRestricted`: 24 bytes, alignment: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `data::Visibility`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Restricted`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Public`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Crate`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `error::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `parse::StepCursor<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.cursor`: 16 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro::ConcatStreamsHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.streams`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `punctuated::Pairs<'_, attr::NestedMeta, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, data::Field, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, data::Variant, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, expr::Expr, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, expr::FieldValue, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, expr::GenericMethodArgument, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, generics::GenericParam, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, generics::LifetimeDef, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, generics::TypeParamBound, token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, generics::WherePredicate, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, item::FnArg, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, item::UseTree, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, lifetime::Lifetime, token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, pat::FieldPat, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, pat::Pat, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, pat::Pat, token::Or>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, path::GenericArgument, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, path::PathSegment, token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, ty::BareFnArg, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::Pairs<'_, ty::Type, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PairsMut<'_, path::PathSegment, token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<'_, data::Field, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<'_, generics::TypeParamBound, token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<'_, item::FnArg, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIter<'_, path::PathSegment, token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<'_, data::Field, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<'_, item::FnArg, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `punctuated::PrivateIterMut<'_, path::PathSegment, token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::vec::Vec<&str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::fmt::DebugTuple<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Take<&mut punctuated::Pairs<'_, path::PathSegment, token::Colon2>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (attr::NestedMeta, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (data::Field, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (data::Variant, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (expr::Expr, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (expr::FieldValue, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (expr::GenericMethodArgument, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (generics::GenericParam, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (generics::LifetimeDef, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (generics::TypeParamBound, token::Add)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (generics::WherePredicate, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (item::FnArg, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (item::UseTree, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (lifetime::Lifetime, token::Add)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (pat::FieldPat, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (pat::Pat, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (pat::Pat, token::Or)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (path::GenericArgument, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (path::PathSegment, token::Colon2)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (ty::BareFnArg, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (ty::Type, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, attr::Attribute>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, error::ErrorMessage>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, expr::Arm>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, item::ForeignItem>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, item::ImplItem>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, item::Item>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, item::TraitItem>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, stmt::Stmt>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Bytes<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::str::Chars<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, attr::Attribute>, for<'a, 'b> fn(&'a &'b attr::Attribute) -> bool>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Map<punctuated::Pairs<'_, path::PathSegment, token::Colon2>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/attr.rs:184:22: 184:28]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(data::Field, ())>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(data::Field, token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(generics::TypeParamBound, token::Add)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(path::PathSegment, token::Colon2)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(usize, proc_macro2::Group)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<attr::Attribute>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<buffer::Entry>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<data::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<error::ErrorMessage>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<generics::TypeParamBound>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, punctuated::Pair<&path::PathSegment, &token::Colon2>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [proc_macro2::Span; 1]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, [proc_macro2::Span; 2]>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, bool>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::Index>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, expr::parsing::raw>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, generics::TraitBoundModifier>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::LitFloat>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::LitInt>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, lit::LitStr>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, op::UnOp>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, proc_macro2::Span>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::boxed::Box<expr::Expr>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::boxed::Box<pat::Pat>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::boxed::Box<ty::Type>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lit::LitFloat>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<lit::LitStr>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<std::boxed::Box<expr::Expr>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Add>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Async>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Auto>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Await>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Box>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Colon>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Const>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Default>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Dyn>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Eq>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Move>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Mut>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Or>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Question>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Ref>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::SelfValue>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Semi>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Static>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Sub>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, std::option::Option<token::Unsafe>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::And>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::As>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Async>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::At>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Auto>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Await>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Bang>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Box>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Break>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Colon>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Const>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Continue>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Crate>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Default>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Dot2>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Dot>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Dyn>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Else>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Enum>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Eq>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Extern>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::FatArrow>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Fn>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::For>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Gt>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::If>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Impl>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::In>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Let>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Loop>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Lt>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Macro>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Match>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Mod>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Move>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Mut>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Or>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Pound>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Pub>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Question>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::RArrow>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Ref>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Return>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::SelfValue>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Semi>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Star>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Static>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Struct>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Sub>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Tilde>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Trait>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Try>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Type>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Underscore>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Union>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Unsafe>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Use>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Where>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::While>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, token::Yield>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>, u32>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, punctuated::Pair<&path::PathSegment, &token::Colon2>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, u8)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<buffer::Cursor<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::fallback::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&attr::NestedMeta, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&data::Field, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&data::Variant, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&expr::Expr, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&expr::FieldValue, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&expr::GenericMethodArgument, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::GenericParam, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::LifetimeDef, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::TypeParamBound, &token::Add>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&generics::WherePredicate, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&item::FnArg, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&item::UseTree, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&lifetime::Lifetime, &token::Add>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&mut path::PathSegment, &mut token::Colon2>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&pat::FieldPat, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&pat::Pat, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&pat::Pat, &token::Or>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&path::GenericArgument, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&path::PathSegment, &token::Colon2>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&ty::BareFnArg, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<punctuated::Pair<&ty::Type, &token::Comma>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ty::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<(), error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<[proc_macro2::Span; 1], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<[proc_macro2::Span; 2], error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<bool, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<expr::Index, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<expr::parsing::raw, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<generics::TraitBoundModifier, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<item::parsing::macro_rules, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<lit::LitBool, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitByte, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitByteStr, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitChar, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitFloat, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitInt, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<lit::LitStr, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<op::UnOp, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<parse::Nothing, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<proc_macro2::Span, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<punctuated::Pair<&path::PathSegment, &token::Colon2>, usize>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::boxed::Box<expr::Expr>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::boxed::Box<pat::Pat>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::boxed::Box<ty::Type>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::option::Option<lit::LitFloat>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<lit::LitStr>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<std::boxed::Box<expr::Expr>>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Add>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Async>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Auto>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Await>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Box>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Colon>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Comma>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Const>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Default>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Dyn>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Eq>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Move>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Mut>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Or>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Question>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Ref>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::SelfValue>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Semi>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Static>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Sub>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<token::Unsafe>, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<token::Abstract, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Add, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::AddEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::And, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::AndAnd, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::AndEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::As, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Async, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::At, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Auto, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Await, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Bang, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Become, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Box, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Break, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Caret, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::CaretEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Colon, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Colon2, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Comma, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Const, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Continue, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Crate, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Default, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Div, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::DivEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Do, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Dollar, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Dot, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Dot2, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Dyn, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Else, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Enum, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Eq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::EqEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Extern, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::FatArrow, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Final, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Fn, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::For, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Ge, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Gt, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::If, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Impl, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::In, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::LArrow, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Le, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Let, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Loop, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Lt, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Macro, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Match, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Mod, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Move, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::MulEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Mut, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Ne, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Or, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::OrEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::OrOr, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Override, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Pound, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Priv, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Pub, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Question, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::RArrow, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Ref, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Rem, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::RemEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Return, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::SelfType, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::SelfValue, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Semi, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Shl, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Shr, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Star, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Static, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Struct, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Sub, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::SubEq, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<token::Super, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Tilde, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Trait, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Try, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Type, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Typeof, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Underscore, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Union, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Unsafe, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Unsized, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Use, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Virtual, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Where, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::While, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<token::Yield, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<ty::TypeInfer, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<ty::TypeNever, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<u32, error::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<&str>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(attr::NestedMeta, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(data::Field, ())>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(data::Field, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(data::Variant, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(expr::Expr, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(expr::FieldValue, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(expr::GenericMethodArgument, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::GenericParam, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::LifetimeDef, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::TypeParamBound, token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(generics::WherePredicate, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(item::FnArg, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(item::UseTree, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(lifetime::Lifetime, token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(pat::FieldPat, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(pat::Pat, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(pat::Pat, token::Or)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(path::GenericArgument, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(path::PathSegment, token::Colon2)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(ty::BareFnArg, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(ty::Type, token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(usize, proc_macro2::Group)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<attr::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<attr::NestedMeta>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<buffer::Entry>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<data::Field>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<expr::Arm>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<generics::TypeParamBound>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<item::ForeignItem>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<item::ImplItem>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<item::Item>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<item::TraitItem>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::client::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<stmt::Stmt>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (attr::NestedMeta, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (data::Field, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (data::Variant, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (expr::Expr, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (expr::FieldValue, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (expr::GenericMethodArgument, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (generics::GenericParam, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (generics::LifetimeDef, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (generics::TypeParamBound, token::Add), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (generics::WherePredicate, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (item::FnArg, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (item::UseTree, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (lifetime::Lifetime, token::Add), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (pat::FieldPat, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (pat::Pat, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (pat::Pat, token::Or), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (path::GenericArgument, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (path::PathSegment, token::Colon2), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (ty::BareFnArg, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, (ty::Type, token::Comma), std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, attr::Attribute, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, error::ErrorMessage, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, expr::Arm, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, item::ForeignItem, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, item::ImplItem, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, item::Item, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, item::TraitItem, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, stmt::Stmt, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/group.rs:74:16: 74:24]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:2839:40: 2839:48]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:3086:56: 3086:64]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/token.rs:922:20: 922:28]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29], [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(attr::NestedMeta, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(data::Field, ())>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(data::Field, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(data::Variant, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(expr::Expr, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(expr::FieldValue, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(expr::GenericMethodArgument, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::GenericParam, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::LifetimeDef, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::TypeParamBound, token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(generics::WherePredicate, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(item::FnArg, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(item::UseTree, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(lifetime::Lifetime, token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(pat::FieldPat, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(pat::Pat, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(pat::Pat, token::Or)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(path::GenericArgument, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(path::PathSegment, token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(ty::BareFnArg, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(ty::Type, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(usize, proc_macro2::Group)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<attr::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<attr::NestedMeta>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<buffer::Entry>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<expr::Arm>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<generics::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<item::ForeignItem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<item::ImplItem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<item::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<item::TraitItem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::client::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<stmt::Stmt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::sync::WeakInner<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size type: `buffer::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size type: `buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `error::Iter<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 16 bytes
print-type-size type: `expr::RangeLimits`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Closed`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `HalfOpen`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `generics::ConstParams<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::ConstParamsMut<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::Lifetimes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::LifetimesMut<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::TypeParams<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `generics::TypeParamsMut<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `lit::StrStyle`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Raw`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Cooked`: 0 bytes
print-type-size type: `op::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Chain`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `punctuated::Iter<'_, data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<'_, generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<'_, generics::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<'_, item::FnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Iter<'_, path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<'_, data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<'_, generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<'_, item::FnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::IterMut<'_, path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `punctuated::Pair<&attr::NestedMeta, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&data::Field, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&data::Variant, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&expr::Expr, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&expr::FieldValue, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&expr::GenericMethodArgument, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&generics::GenericParam, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&generics::LifetimeDef, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&generics::TypeParamBound, &token::Add>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&generics::WherePredicate, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&item::FnArg, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&item::UseTree, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&lifetime::Lifetime, &token::Add>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&mut path::PathSegment, &mut token::Colon2>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&pat::FieldPat, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&pat::Pat, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&pat::Pat, &token::Or>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&path::GenericArgument, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&path::PathSegment, &token::Colon2>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&ty::BareFnArg, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `punctuated::Pair<&ty::Type, &token::Comma>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[proc_macro2::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[stmt::Stmt]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterMutTrait<'_, data::Field, Item = &mut data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterMutTrait<'_, generics::GenericParam, Item = &mut generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterMutTrait<'_, item::FnArg, Item = &mut item::FnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterMutTrait<'_, path::PathSegment, Item = &mut path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterTrait<'_, data::Field, Item = &data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterTrait<'_, generics::GenericParam, Item = &generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterTrait<'_, generics::TypeParamBound, Item = &generics::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterTrait<'_, item::FnArg, Item = &item::FnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn punctuated::IterTrait<'_, path::PathSegment, Item = &path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::cell::Cell<buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Ref<'_, std::vec::Vec<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefMut<'_, std::vec::Vec<&str>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugStruct<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::iter::Copied<std::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, &str>, [closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, &str>, [closure@std::str::join_generic_copy<str, u8, &str>::{closure#1}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Take<&mut punctuated::Pairs<'_, path::PathSegment, token::Colon2>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<buffer::Entry>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::raw_vec::RawVec<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[buffer::Entry]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[error::ErrorMessage]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[std::mem::MaybeUninit<buffer::Entry>]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[std::mem::MaybeUninit<u8>]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[stmt::Stmt]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, token::Dot3>`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Continue`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &generics::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &item::FnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut data::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut generics::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut item::FnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &path::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(attr::NestedMeta, token::Comma), &(attr::NestedMeta, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(data::Field, token::Comma), &(data::Field, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(data::Variant, token::Comma), &(data::Variant, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(expr::Expr, token::Comma), &(expr::Expr, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(expr::FieldValue, token::Comma), &(expr::FieldValue, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(expr::GenericMethodArgument, token::Comma), &(expr::GenericMethodArgument, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(generics::GenericParam, token::Comma), &(generics::GenericParam, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(generics::LifetimeDef, token::Comma), &(generics::LifetimeDef, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(generics::TypeParamBound, token::Add), &(generics::TypeParamBound, token::Add))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(generics::WherePredicate, token::Comma), &(generics::WherePredicate, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(item::FnArg, token::Comma), &(item::FnArg, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(item::UseTree, token::Comma), &(item::UseTree, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(lifetime::Lifetime, token::Add), &(lifetime::Lifetime, token::Add))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(pat::FieldPat, token::Comma), &(pat::FieldPat, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(pat::Pat, token::Comma), &(pat::Pat, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(pat::Pat, token::Or), &(pat::Pat, token::Or))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(path::GenericArgument, token::Comma), &(path::GenericArgument, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(path::PathSegment, token::Colon2), &(path::PathSegment, token::Colon2))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(ty::BareFnArg, token::Comma), &(ty::BareFnArg, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&(ty::Type, token::Comma), &(ty::Type, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&attr::Attribute, &attr::Attribute)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&expr::Arm, &expr::Arm)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&item::ForeignItem, &item::ForeignItem)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&item::ImplItem, &item::ImplItem)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&item::Item, &item::Item)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&item::TraitItem, &item::TraitItem)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&stmt::Stmt, &stmt::Stmt)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(char, &proc_macro2::Span)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::At, std::boxed::Box<pat::Pat>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::Else, std::boxed::Box<expr::Expr>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::Eq, std::boxed::Box<expr::Expr>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(token::If, std::boxed::Box<expr::Expr>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(attr::NestedMeta, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(data::Field, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(data::Variant, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(expr::Expr, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(expr::FieldValue, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(expr::GenericMethodArgument, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::GenericParam, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::LifetimeDef, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::TypeParamBound, token::Add))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(generics::WherePredicate, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(item::FnArg, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(item::UseTree, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(lifetime::Lifetime, token::Add))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(pat::FieldPat, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(pat::Pat, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(pat::Pat, token::Or))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(path::GenericArgument, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(path::PathSegment, token::Colon2))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(ty::BareFnArg, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(ty::Type, token::Comma))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &attr::Attribute)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &error::ErrorMessage)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &expr::Arm)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &item::ForeignItem)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &item::ImplItem)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &item::Item)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &item::TraitItem)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &stmt::Stmt)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::sync::WeakInner<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<op::BinOp>`: 16 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ffi::CString>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Dot3>`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[stmt::Stmt]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterMutTrait<'_, data::Field, Item = &mut data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterMutTrait<'_, generics::GenericParam, Item = &mut generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterMutTrait<'_, item::FnArg, Item = &mut item::FnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterMutTrait<'_, path::PathSegment, Item = &mut path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterTrait<'_, data::Field, Item = &data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterTrait<'_, generics::GenericParam, Item = &generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterTrait<'_, generics::TypeParamBound, Item = &generics::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterTrait<'_, item::FnArg, Item = &item::FnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn punctuated::IterTrait<'_, path::PathSegment, Item = &path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[proc_macro2::TokenTree]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[stmt::Stmt]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterMutTrait<'_, data::Field, Item = &mut data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterMutTrait<'_, generics::GenericParam, Item = &mut generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterMutTrait<'_, item::FnArg, Item = &mut item::FnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterMutTrait<'_, path::PathSegment, Item = &mut path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterTrait<'_, data::Field, Item = &data::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterTrait<'_, generics::GenericParam, Item = &generics::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterTrait<'_, generics::TypeParamBound, Item = &generics::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterTrait<'_, item::FnArg, Item = &item::FnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn punctuated::IterTrait<'_, path::PathSegment, Item = &path::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(attr::NestedMeta, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(data::Field, ())]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(data::Field, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(data::Variant, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(expr::Expr, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(expr::FieldValue, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(expr::GenericMethodArgument, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(generics::GenericParam, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(generics::LifetimeDef, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(generics::TypeParamBound, token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(generics::WherePredicate, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(item::FnArg, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(item::UseTree, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(lifetime::Lifetime, token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(pat::FieldPat, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(pat::Pat, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(pat::Pat, token::Or)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(path::GenericArgument, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(path::PathSegment, token::Colon2)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(ty::BareFnArg, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(ty::Type, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(usize, proc_macro2::Group)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[attr::Attribute]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[attr::NestedMeta]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[data::Field]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[expr::Arm]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[generics::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[item::ForeignItem]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[item::ImplItem]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[item::Item]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[item::TraitItem]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(attr::NestedMeta, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(data::Field, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(data::Variant, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(expr::Expr, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(expr::FieldValue, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(expr::GenericMethodArgument, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(generics::GenericParam, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(generics::LifetimeDef, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(generics::TypeParamBound, token::Add)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(generics::WherePredicate, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(item::FnArg, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(item::UseTree, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(lifetime::Lifetime, token::Add)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(pat::FieldPat, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(pat::Pat, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(pat::Pat, token::Or)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(path::GenericArgument, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(path::PathSegment, token::Colon2)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(ty::BareFnArg, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<(ty::Type, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<attr::Attribute>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<error::ErrorMessage>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<expr::Arm>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<item::ForeignItem>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<item::ImplItem>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<item::Item>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<item::TraitItem>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<stmt::Stmt>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[stmt::Stmt]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&str]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(attr::NestedMeta, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(data::Field, ())]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(data::Field, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(data::Variant, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(expr::Expr, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(expr::FieldValue, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(expr::GenericMethodArgument, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(generics::GenericParam, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(generics::LifetimeDef, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(generics::TypeParamBound, token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(generics::WherePredicate, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(item::FnArg, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(item::UseTree, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(lifetime::Lifetime, token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(pat::FieldPat, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(pat::Pat, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(pat::Pat, token::Or)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(path::GenericArgument, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(path::PathSegment, token::Colon2)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(ty::BareFnArg, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(ty::Type, token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(usize, proc_macro2::Group)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[attr::Attribute]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[attr::NestedMeta]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[buffer::Entry]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[data::Field]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[expr::Arm]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[generics::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[item::ForeignItem]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[item::ImplItem]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[item::Item]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[item::TraitItem]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(attr::NestedMeta, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(data::Field, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(data::Variant, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(expr::Expr, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(expr::FieldValue, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(expr::GenericMethodArgument, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(generics::GenericParam, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(generics::LifetimeDef, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(generics::TypeParamBound, token::Add)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(generics::WherePredicate, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(item::FnArg, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(item::UseTree, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(lifetime::Lifetime, token::Add)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(pat::FieldPat, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(pat::Pat, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(pat::Pat, token::Or)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(path::GenericArgument, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(path::PathSegment, token::Colon2)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(ty::BareFnArg, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<(ty::Type, token::Comma)>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<attr::Attribute>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<buffer::Entry>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<error::ErrorMessage>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<expr::Arm>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<item::ForeignItem>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<item::ImplItem>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<item::Item>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<item::TraitItem>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<stmt::Stmt>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<u8>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[stmt::Stmt]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&data::Field, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&generics::GenericParam, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&generics::TypeParamBound, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&item::FnArg, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut data::Field, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut generics::GenericParam, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut item::FnArg, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut path::PathSegment, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&path::PathSegment, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::Ref<'_, std::vec::Vec<&str>>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<'_, std::vec::Vec<&str>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (attr::NestedMeta, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (data::Field, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (data::Variant, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (expr::Expr, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (expr::FieldValue, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (expr::GenericMethodArgument, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (generics::GenericParam, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (generics::LifetimeDef, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (generics::TypeParamBound, token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (generics::WherePredicate, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (item::FnArg, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (item::UseTree, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (lifetime::Lifetime, token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (pat::FieldPat, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (pat::Pat, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (pat::Pat, token::Or)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (path::GenericArgument, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (path::PathSegment, token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (ty::BareFnArg, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (ty::Type, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, attr::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, expr::Arm>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, item::ForeignItem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, item::ImplItem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, item::Item>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, item::TraitItem>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro2::Delimiter>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, stmt::Stmt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (data::Field, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (generics::GenericParam, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (item::FnArg, token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (path::PathSegment, token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Bytes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `thread::ThreadBound<proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread_id`: 8 bytes
print-type-size     field `.value`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `ty::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypeParen`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `ty::TypeSlice`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<(token::Tilde, token::Const)>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Colon2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Dot2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `token::Dot3`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `token::DotDotEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (data::Field, ()), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (data::Field, token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (generics::TypeParamBound, token::Add), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (path::PathSegment, token::Colon2), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (usize, proc_macro2::Group), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, attr::Attribute, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, error::ErrorMessage, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, generics::TypeParamBound, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/attr.rs:637:49: 637:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/attr.rs:648:47: 648:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/data.rs:451:47: 451:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/data.rs:460:47: 460:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/data.rs:497:47: 497:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/derive.rs:269:55: 269:63]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:1289:32: 1289:36]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:2855:34: 2855:39]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:2871:56: 2871:61]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:2908:54: 2908:62]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:2947:49: 2947:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:2959:47: 2959:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:2974:47: 2974:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3007:47: 3007:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3079:62: 3079:70]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3119:52: 3119:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3136:52: 3136:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3150:52: 3150:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3164:47: 3164:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3243:53: 3243:61]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3256:53: 3256:61]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3319:49: 3319:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3404:47: 3404:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3422:49: 3422:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3436:47: 3436:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/expr.rs:3446:47: 3446:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/generics.rs:1246:29: 1246:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:2824:53: 2824:61]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:2854:47: 2854:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:2885:47: 2885:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:2945:47: 2945:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:2982:47: 2982:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:2998:44: 2998:52]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:3001:44: 3001:52]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:3004:46: 3004:54]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:3057:47: 3057:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:3158:53: 3158:61]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/item.rs:3271:47: 3271:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lifetime.rs:133:33: 133:35]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/mac.rs:208:44: 208:52]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/mac.rs:211:44: 211:52]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/mac.rs:214:46: 214:54]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/pat.rs:796:47: 796:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/pat.rs:838:47: 838:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/pat.rs:896:49: 896:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/path.rs:714:67: 714:75]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/path.rs:800:47: 800:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:545:22: 545:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:595:22: 595:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:635:22: 635:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:785:22: 785:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:793:22: 793:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:879:22: 879:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:887:22: 887:24]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/stmt.rs:311:47: 311:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/token.rs:897:20: 897:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1082:49: 1082:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1091:49: 1091:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1130:47: 1130:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1154:47: 1154:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1186:47: 1186:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1195:47: 1195:55]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::vec::IntoIter<proc_macro2::TokenTree>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::RawVec<buffer::Entry>::shrink::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::RawVec<u8>::shrink::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::vec::IntoIter<proc_macro2::TokenTree>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<proc_macro2::token_stream::IntoIter>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&error::ErrorMessage, proc_macro2::TokenStream, (), for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}, [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}], [closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(proc_macro2::TokenTree, &proc_macro2::Span), proc_macro2::TokenTree, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(proc_macro2::TokenTree, &proc_macro2::Span), proc_macro2::TokenTree, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43], [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenStream, proc_macro2::imp::TokenStream, (), [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}], [closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:208:22: 208:29]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<std::iter::Zip<std::vec::IntoIter<proc_macro2::TokenTree>, std::slice::Iter<'_, proc_macro2::Span>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::vec::IntoIter<proc_macro2::TokenTree>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::imp::TokenStream, proc_macro::TokenStream, (), [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<proc_macro::TokenStream, [closure@<proc_macro::TokenStream as std::iter::Extend<proc_macro::TokenStream>>::extend<std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_try_fold<'_, &&str, usize, usize, std::option::Option<usize>, [closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}], fn(usize, usize) -> std::option::Option<usize> {core::num::<impl usize>::checked_add}>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `attr::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `expr::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `generics::ImplGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `generics::TraitBoundModifier`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Maybe`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `generics::Turbofish<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `generics::TypeGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `lit::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `lit::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `lit::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `mac::MacroDelimiter`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Brace`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Bracket`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `op::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `print::TokensOrDefault<'_, token::As>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Colon>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Const>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Eq>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Gt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Lt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `print::TokensOrDefault<'_, token::Semi>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `std::boxed::Box<[error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[proc_macro2::TokenTree; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[proc_macro2::TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[stmt::Stmt; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<expr::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<item::UseTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<pat::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<pat::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<path::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIter<'_, data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIter<'_, item::FnArg, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIter<'_, path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIterMut<'_, item::FnArg, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<punctuated::PrivateIterMut<'_, path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::iter::Empty<&data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::iter::Empty<&mut data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<expr::GenericMethodArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<item::FnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<item::UseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lit::LitIntRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<lit::LitRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<pat::FieldPat>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<pat::Pat>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<path::Path>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<stmt::Block>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<stmt::Block>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::BorrowRef<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<attr::NestedMeta>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<data::Field>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<data::Variant>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<expr::Expr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<expr::FieldValue>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<expr::GenericMethodArgument>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<generics::GenericParam>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<generics::LifetimeDef>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<generics::TypeParamBound>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<generics::WherePredicate>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<item::FnArg>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<item::UseTree>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<lifetime::Lifetime>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<lit::LitFloatRepr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<lit::LitIntRepr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<lit::LitRepr>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<pat::FieldPat>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<pat::Pat>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<path::GenericArgument>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<path::Path>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<path::PathSegment>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<stmt::Block>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<ty::BareFnArg>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<ty::Type>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(expr::FieldValue, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(expr::GenericMethodArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(item::FnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(item::UseTree, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(pat::FieldPat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(pat::Pat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(pat::Pat, token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(token::And, std::option::Option<lifetime::Lifetime>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &expr::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &item::ForeignItem>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &item::ImplItem>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &item::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &item::TraitItem>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &stmt::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&expr::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&item::UseTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&pat::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&pat::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&expr::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&item::UseTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&pat::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&pat::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&token::Colon2>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&token::Comma>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(expr::FieldValue, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(expr::GenericMethodArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(item::FnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(item::UseTree, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(pat::FieldPat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(pat::Pat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(pat::Pat, token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(token::And, std::option::Option<lifetime::Lifetime>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&expr::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&expr::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::ConstParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&item::ForeignItem>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&item::ImplItem>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&item::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&item::TraitItem>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&item::UseTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (item::FnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::ConstParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut generics::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<item::FnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>, [closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut token::Colon2>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&pat::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&pat::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Delimiter>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<expr::GenericMethodArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<item::FnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<item::UseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<pat::FieldPat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<pat::Pat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::vec::IntoIter<proc_macro2::TokenTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&stmt::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&token::Colon2>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<expr::parsing::raw>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lit::LitFloat>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<lit::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<expr::GenericMethodArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<item::FnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<item::UseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<pat::FieldPat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<pat::Pat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Add>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Async>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Auto>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Await>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Bang>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Box>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Brace>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Comma>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Default>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Move>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Or>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Paren>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Question>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Ref>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::SelfValue>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Static>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Sub>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::pin::Pin<std::sync::Arc<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterMutTrait<'_, data::Field, Item = &mut data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterMutTrait<'_, generics::GenericParam, Item = &mut generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterMutTrait<'_, item::FnArg, Item = &mut item::FnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterMutTrait<'_, path::PathSegment, Item = &mut path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterTrait<'_, data::Field, Item = &data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterTrait<'_, generics::GenericParam, Item = &generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterTrait<'_, generics::TypeParamBound, Item = &generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterTrait<'_, item::FnArg, Item = &item::FnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn punctuated::IterTrait<'_, path::PathSegment, Item = &path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(data::Field, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(expr::FieldValue, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(expr::GenericMethodArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(item::FnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(item::UseTree, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(pat::FieldPat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(pat::Pat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(pat::Pat, token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(usize, proc_macro2::Group)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::TokenTree; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[stmt::Stmt; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8; 0]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::sync::ArcInner<std::thread::Inner>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<expr::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<expr::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<item::ForeignItem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<item::ImplItem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<item::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<item::TraitItem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<item::UseTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<pat::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<pat::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<path::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Delimiter>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::client::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIter<'_, data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIter<'_, item::FnArg, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIter<'_, path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIterMut<'_, item::FnArg, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<punctuated::PrivateIterMut<'_, path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::iter::Empty<&data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::iter::Empty<&mut data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<expr::GenericMethodArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<item::FnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<item::UseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lit::LitIntRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<lit::LitRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<pat::FieldPat>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<pat::Pat>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<path::Path>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<stmt::Block>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<&str>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<stmt::Block>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<stmt::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(data::Field, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(expr::FieldValue, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(expr::GenericMethodArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(item::FnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(item::UseTree, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(pat::FieldPat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(pat::Pat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(pat::Pat, token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(usize, proc_macro2::Group)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[proc_macro2::TokenTree; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[proc_macro2::TokenTree; 3]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[stmt::Stmt; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[u8; 0]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<attr::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<data::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<expr::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<expr::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<expr::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<expr::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<generics::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<generics::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<generics::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<item::FnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<item::ForeignItem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<item::ImplItem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<item::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<item::TraitItem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<item::UseTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<lifetime::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<pat::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<pat::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<path::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<path::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<path::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::client::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIter<'_, data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIter<'_, item::FnArg, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIter<'_, path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIterMut<'_, item::FnArg, token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<punctuated::PrivateIterMut<'_, path::PathSegment, token::Colon2>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::iter::Empty<&data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::iter::Empty<&mut data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<attr::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<data::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<data::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<expr::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<expr::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<expr::GenericMethodArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<generics::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<item::FnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<item::UseTree>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lifetime::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lit::LitIntRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<lit::LitRepr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<pat::FieldPat>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<pat::Pat>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<path::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<path::Path>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<path::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<stmt::Block>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<ty::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<ty::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<stmt::Block>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<stmt::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<ty::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<ty::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(data::Field, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(expr::FieldValue, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(expr::GenericMethodArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(item::FnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(item::UseTree, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(pat::FieldPat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(pat::Pat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(pat::Pat, token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(usize, proc_macro2::Group)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<expr::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<item::ForeignItem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<item::ImplItem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<item::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<item::TraitItem>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<proc_macro2::Delimiter>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<stmt::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(attr::NestedMeta, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(data::Field, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(data::Field, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(data::Variant, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(expr::Expr, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(expr::FieldValue, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(expr::GenericMethodArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(generics::GenericParam, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(generics::LifetimeDef, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(generics::TypeParamBound, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(generics::WherePredicate, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(item::FnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(item::UseTree, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(lifetime::Lifetime, token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(pat::FieldPat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(pat::Pat, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(pat::Pat, token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(path::GenericArgument, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(path::PathSegment, token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(ty::BareFnArg, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(ty::Type, token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(usize, proc_macro2::Group)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<attr::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<buffer::Entry>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<data::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<expr::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<generics::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<item::ForeignItem>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<item::ImplItem>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<item::Item>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<item::TraitItem>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<proc_macro2::Delimiter>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<proc_macro2::Span>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<stmt::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<attr::NestedMeta>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<data::Field>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<data::Variant>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<expr::Expr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<expr::FieldValue>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<expr::GenericMethodArgument>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::GenericParam>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::LifetimeDef>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::TypeParamBound>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<generics::WherePredicate>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<item::FnArg>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<item::UseTree>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lifetime::Lifetime>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lit::LitFloatRepr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lit::LitIntRepr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<lit::LitRepr>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<pat::FieldPat>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<pat::Pat>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<path::GenericArgument>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<path::Path>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<path::PathSegment>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<stmt::Block>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<ty::BareFnArg>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<ty::Type>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::Arc<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::Weak<std::thread::Inner>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::Thread`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `token::AddEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Colon2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::DivEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Dot2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::FatArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::LArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::MulEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::RemEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `token::SubEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `tt::TokenStreamHelper<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `tt::TokenTreeHelper<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `data::VisCrate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.crate_token`: 4 bytes
print-type-size type: `data::VisPublic`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size type: `expr::parsing::raw`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `item::UseGlob`: 4 bytes, alignment: 4 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size type: `item::parsing::macro_rules`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<char, std::char::CharTryFromError>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sys_common::thread_parking::futex::Parker`: 4 bytes, alignment: 4 bytes
print-type-size     field `.state`: 4 bytes
print-type-size type: `token::Abstract`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Add`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Async`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::At`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Auto`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Await`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Bang`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Become`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Box`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Brace`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Bracket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Break`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Continue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Crate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Default`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Div`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Do`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Dollar`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Else`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Final`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::If`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Let`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Loop`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Macro`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Match`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Mod`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Move`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Override`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Paren`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Priv`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Ref`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Rem`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Return`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::SelfType`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::SelfValue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Static`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Sub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Super`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Tilde`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Trait`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Try`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Type`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Typeof`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Unsized`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Use`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Virtual`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::While`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::Yield`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `token::private::WithSpan`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `ty::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `ty::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `expr::parsing::AllowStruct`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `expr::parsing::Precedence`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Any`: 0 bytes
print-type-size     variant `Assign`: 0 bytes
print-type-size     variant `Range`: 0 bytes
print-type-size     variant `Or`: 0 bytes
print-type-size     variant `And`: 0 bytes
print-type-size     variant `Compare`: 0 bytes
print-type-size     variant `BitOr`: 0 bytes
print-type-size     variant `BitXor`: 0 bytes
print-type-size     variant `BitAnd`: 0 bytes
print-type-size     variant `Shift`: 0 bytes
print-type-size     variant `Arithmetic`: 0 bytes
print-type-size     variant `Term`: 0 bytes
print-type-size     variant `Cast`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, proc_macro2::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::vec::ExtendElement<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/attr.rs:179:22: 179:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/attr.rs:184:22: 184:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/custom_keyword.rs:145:28: 145:36]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/error.rs:160:62: 160:65]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/error.rs:161:45: 161:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ext.rs:91:20: 91:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/generics.rs:175:46: 175:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/group.rs:38:56: 38:73]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/group.rs:47:50: 47:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/group.rs:56:52: 56:69]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/group.rs:64:49: 64:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ident.rs:42:20: 42:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lifetime.rs:130:24: 130:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:1518:31: 1518:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/lit.rs:747:24: 747:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/mac.rs:154:16: 154:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/parse.rs:1083:20: 1083:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/parse.rs:1090:20: 1090:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/parse.rs:1100:20: 1100:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/parse.rs:1116:20: 1116:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/parse.rs:1126:20: 1126:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:148:33: 148:36]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:194:34: 194:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:196:34: 196:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:495:52: 495:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:496:39: 496:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:544:18: 544:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:594:18: 594:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:634:18: 634:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:784:18: 784:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:793:52: 793:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:878:18: 878:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/punctuated.rs:887:52: 887:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/token.rs:572:20: 572:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.86/src/ty.rs:1024:26: 1024:43]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(attr::NestedMeta, token::Comma)] as core::slice::cmp::SlicePartialEq<(attr::NestedMeta, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(data::Field, token::Comma)] as core::slice::cmp::SlicePartialEq<(data::Field, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(data::Variant, token::Comma)] as core::slice::cmp::SlicePartialEq<(data::Variant, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(expr::Expr, token::Comma)] as core::slice::cmp::SlicePartialEq<(expr::Expr, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(expr::FieldValue, token::Comma)] as core::slice::cmp::SlicePartialEq<(expr::FieldValue, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(expr::GenericMethodArgument, token::Comma)] as core::slice::cmp::SlicePartialEq<(expr::GenericMethodArgument, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(generics::GenericParam, token::Comma)] as core::slice::cmp::SlicePartialEq<(generics::GenericParam, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(generics::LifetimeDef, token::Comma)] as core::slice::cmp::SlicePartialEq<(generics::LifetimeDef, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(generics::TypeParamBound, token::Add)] as core::slice::cmp::SlicePartialEq<(generics::TypeParamBound, token::Add)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(generics::WherePredicate, token::Comma)] as core::slice::cmp::SlicePartialEq<(generics::WherePredicate, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(item::FnArg, token::Comma)] as core::slice::cmp::SlicePartialEq<(item::FnArg, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(item::UseTree, token::Comma)] as core::slice::cmp::SlicePartialEq<(item::UseTree, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(lifetime::Lifetime, token::Add)] as core::slice::cmp::SlicePartialEq<(lifetime::Lifetime, token::Add)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(pat::FieldPat, token::Comma)] as core::slice::cmp::SlicePartialEq<(pat::FieldPat, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(pat::Pat, token::Comma)] as core::slice::cmp::SlicePartialEq<(pat::Pat, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(pat::Pat, token::Or)] as core::slice::cmp::SlicePartialEq<(pat::Pat, token::Or)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(path::GenericArgument, token::Comma)] as core::slice::cmp::SlicePartialEq<(path::GenericArgument, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(path::PathSegment, token::Colon2)] as core::slice::cmp::SlicePartialEq<(path::PathSegment, token::Colon2)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(ty::BareFnArg, token::Comma)] as core::slice::cmp::SlicePartialEq<(ty::BareFnArg, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[(ty::Type, token::Comma)] as core::slice::cmp::SlicePartialEq<(ty::Type, token::Comma)>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[attr::Attribute] as core::slice::cmp::SlicePartialEq<attr::Attribute>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[expr::Arm] as core::slice::cmp::SlicePartialEq<expr::Arm>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[item::ForeignItem] as core::slice::cmp::SlicePartialEq<item::ForeignItem>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[item::ImplItem] as core::slice::cmp::SlicePartialEq<item::ImplItem>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[item::Item] as core::slice::cmp::SlicePartialEq<item::Item>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[item::TraitItem] as core::slice::cmp::SlicePartialEq<item::TraitItem>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<[stmt::Stmt] as core::slice::cmp::SlicePartialEq<stmt::Stmt>>::equal::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<proc_macro2::imp::TokenStream as std::iter::FromIterator<proc_macro2::imp::TokenStream>>::from_iter<std::iter::Map<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>, [closure@<proc_macro2::TokenStream as std::iter::FromIterator<proc_macro2::TokenStream>>::from_iter<std::iter::Map<std::slice::Iter<'_, error::ErrorMessage>, for<'a> fn(&'a error::ErrorMessage) -> proc_macro2::TokenStream {error::ErrorMessage::to_compile_error}>>::{closure#0}]>>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@core::str::<impl str>::rfind<'_, char>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(attr::NestedMeta, token::Comma), &(attr::NestedMeta, token::Comma)), [closure@<[(attr::NestedMeta, token::Comma)] as core::slice::cmp::SlicePartialEq<(attr::NestedMeta, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(data::Field, token::Comma), &(data::Field, token::Comma)), [closure@<[(data::Field, token::Comma)] as core::slice::cmp::SlicePartialEq<(data::Field, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(data::Variant, token::Comma), &(data::Variant, token::Comma)), [closure@<[(data::Variant, token::Comma)] as core::slice::cmp::SlicePartialEq<(data::Variant, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(expr::Expr, token::Comma), &(expr::Expr, token::Comma)), [closure@<[(expr::Expr, token::Comma)] as core::slice::cmp::SlicePartialEq<(expr::Expr, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(expr::FieldValue, token::Comma), &(expr::FieldValue, token::Comma)), [closure@<[(expr::FieldValue, token::Comma)] as core::slice::cmp::SlicePartialEq<(expr::FieldValue, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(expr::GenericMethodArgument, token::Comma), &(expr::GenericMethodArgument, token::Comma)), [closure@<[(expr::GenericMethodArgument, token::Comma)] as core::slice::cmp::SlicePartialEq<(expr::GenericMethodArgument, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(generics::GenericParam, token::Comma), &(generics::GenericParam, token::Comma)), [closure@<[(generics::GenericParam, token::Comma)] as core::slice::cmp::SlicePartialEq<(generics::GenericParam, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(generics::LifetimeDef, token::Comma), &(generics::LifetimeDef, token::Comma)), [closure@<[(generics::LifetimeDef, token::Comma)] as core::slice::cmp::SlicePartialEq<(generics::LifetimeDef, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(generics::TypeParamBound, token::Add), &(generics::TypeParamBound, token::Add)), [closure@<[(generics::TypeParamBound, token::Add)] as core::slice::cmp::SlicePartialEq<(generics::TypeParamBound, token::Add)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(generics::WherePredicate, token::Comma), &(generics::WherePredicate, token::Comma)), [closure@<[(generics::WherePredicate, token::Comma)] as core::slice::cmp::SlicePartialEq<(generics::WherePredicate, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(item::FnArg, token::Comma), &(item::FnArg, token::Comma)), [closure@<[(item::FnArg, token::Comma)] as core::slice::cmp::SlicePartialEq<(item::FnArg, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(item::UseTree, token::Comma), &(item::UseTree, token::Comma)), [closure@<[(item::UseTree, token::Comma)] as core::slice::cmp::SlicePartialEq<(item::UseTree, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(lifetime::Lifetime, token::Add), &(lifetime::Lifetime, token::Add)), [closure@<[(lifetime::Lifetime, token::Add)] as core::slice::cmp::SlicePartialEq<(lifetime::Lifetime, token::Add)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(pat::FieldPat, token::Comma), &(pat::FieldPat, token::Comma)), [closure@<[(pat::FieldPat, token::Comma)] as core::slice::cmp::SlicePartialEq<(pat::FieldPat, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(pat::Pat, token::Comma), &(pat::Pat, token::Comma)), [closure@<[(pat::Pat, token::Comma)] as core::slice::cmp::SlicePartialEq<(pat::Pat, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(pat::Pat, token::Or), &(pat::Pat, token::Or)), [closure@<[(pat::Pat, token::Or)] as core::slice::cmp::SlicePartialEq<(pat::Pat, token::Or)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(path::GenericArgument, token::Comma), &(path::GenericArgument, token::Comma)), [closure@<[(path::GenericArgument, token::Comma)] as core::slice::cmp::SlicePartialEq<(path::GenericArgument, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(path::PathSegment, token::Colon2), &(path::PathSegment, token::Colon2)), [closure@<[(path::PathSegment, token::Colon2)] as core::slice::cmp::SlicePartialEq<(path::PathSegment, token::Colon2)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(ty::BareFnArg, token::Comma), &(ty::BareFnArg, token::Comma)), [closure@<[(ty::BareFnArg, token::Comma)] as core::slice::cmp::SlicePartialEq<(ty::BareFnArg, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&(ty::Type, token::Comma), &(ty::Type, token::Comma)), [closure@<[(ty::Type, token::Comma)] as core::slice::cmp::SlicePartialEq<(ty::Type, token::Comma)>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&attr::Attribute, &attr::Attribute), [closure@<[attr::Attribute] as core::slice::cmp::SlicePartialEq<attr::Attribute>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&expr::Arm, &expr::Arm), [closure@<[expr::Arm] as core::slice::cmp::SlicePartialEq<expr::Arm>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&item::ForeignItem, &item::ForeignItem), [closure@<[item::ForeignItem] as core::slice::cmp::SlicePartialEq<item::ForeignItem>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&item::ImplItem, &item::ImplItem), [closure@<[item::ImplItem] as core::slice::cmp::SlicePartialEq<item::ImplItem>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&item::Item, &item::Item), [closure@<[item::Item] as core::slice::cmp::SlicePartialEq<item::Item>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&item::TraitItem, &item::TraitItem), [closure@<[item::TraitItem] as core::slice::cmp::SlicePartialEq<item::TraitItem>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::all::check<(&stmt::Stmt, &stmt::Stmt), [closure@<[stmt::Stmt] as core::slice::cmp::SlicePartialEq<stmt::Stmt>>::equal::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::str::join_generic_copy<str, u8, &str>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::private`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `ext::private::IdentAny`: 0 bytes, alignment: 1 bytes
print-type-size type: `ext::private::PeekFn`: 0 bytes, alignment: 1 bytes
print-type-size type: `lookahead::TokenMarker`: 0 bytes, alignment: 1 bytes
print-type-size type: `parse::Nothing`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `reserved::Reserved`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::char::CharTryFromError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::iter::Empty<&data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::iter::Empty<&mut data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(attr::NestedMeta, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(data::Field, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(data::Variant, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(expr::Expr, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(expr::FieldValue, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(expr::GenericMethodArgument, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::GenericParam, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::LifetimeDef, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::TypeParamBound, token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(generics::WherePredicate, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(item::FnArg, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(item::UseTree, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(lifetime::Lifetime, token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(pat::FieldPat, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(pat::Pat, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(pat::Pat, token::Or)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(path::GenericArgument, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(path::PathSegment, token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(ty::BareFnArg, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(ty::Type, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&attr::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&expr::Arm>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&item::ForeignItem>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&item::ImplItem>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&item::Item>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&item::TraitItem>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (data::Field, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (generics::GenericParam, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (item::FnArg, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (path::PathSegment, token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::vec::Vec<&str>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Delimiter>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&stmt::Stmt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(attr::NestedMeta, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(data::Field, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(data::Field, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(data::Variant, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(expr::Expr, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(expr::FieldValue, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(expr::GenericMethodArgument, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::GenericParam, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::LifetimeDef, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::TypeParamBound, token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(generics::WherePredicate, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(item::FnArg, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(item::UseTree, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(lifetime::Lifetime, token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(pat::FieldPat, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(pat::Pat, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(pat::Pat, token::Or)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(path::GenericArgument, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(path::PathSegment, token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(ty::BareFnArg, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(ty::Type, token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(usize, proc_macro2::Group)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[buffer::Entry]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[error::ErrorMessage; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[error::ErrorMessage]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro2::TokenTree; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro2::TokenTree; 3]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro2::TokenTree]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<buffer::Entry>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[std::mem::MaybeUninit<u8>]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[stmt::Stmt; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[stmt::Stmt]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 0]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::sync::ArcInner<std::thread::Inner>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<attr::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<attr::NestedMeta>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<data::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<'_, data::Field, Item = &mut data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<'_, generics::GenericParam, Item = &mut generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<'_, item::FnArg, Item = &mut item::FnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterMutTrait<'_, path::PathSegment, Item = &mut path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<'_, data::Field, Item = &data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<'_, generics::GenericParam, Item = &generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<'_, generics::TypeParamBound, Item = &generics::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<'_, item::FnArg, Item = &item::FnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn punctuated::IterTrait<'_, path::PathSegment, Item = &path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<expr::Arm>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<expr::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<expr::FieldValue>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<expr::GenericMethodArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn() -> &data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn() -> &mut data::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(buffer::Cursor<'_>) -> buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::LifetimeDef>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<generics::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<item::FnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<item::ForeignItem>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<item::ImplItem>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<item::Item>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<item::TraitItem>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<item::UseTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lifetime::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<pat::FieldPat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<pat::Pat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<path::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<path::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<path::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::client::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIter<'_, data::Field, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIter<'_, generics::GenericParam, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIter<'_, generics::TypeParamBound, token::Add>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIter<'_, item::FnArg, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIter<'_, path::PathSegment, token::Colon2>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIterMut<'_, data::Field, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIterMut<'_, generics::GenericParam, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIterMut<'_, item::FnArg, token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<punctuated::PrivateIterMut<'_, path::PathSegment, token::Colon2>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::iter::Empty<&data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::iter::Empty<&mut data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<attr::NestedMeta>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<data::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<data::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<expr::Expr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<expr::FieldValue>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<expr::GenericMethodArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::LifetimeDef>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<generics::WherePredicate>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<item::FnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<item::UseTree>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lifetime::Lifetime>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lit::LitFloatRepr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lit::LitIntRepr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<lit::LitRepr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<pat::FieldPat>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<pat::Pat>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<path::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<path::Path>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<path::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<stmt::Block>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<ty::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<ty::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::cell::Cell<parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<stmt::Block>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<stmt::Stmt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ty::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ty::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::GenericParam`: 640 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Const`: 632 bytes
print-type-size         field `.0`: 632 bytes
print-type-size     variant `Type`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `Lifetime`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `syn::ConstParam`: 632 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.default`: 272 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size type: `syn::TypeParam`: 392 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.default`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size type: `std::option::Option<syn::Type>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Type`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `BareFn`: 184 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 72 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Never`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::TypeArray`: 288 bytes, alignment: 8 bytes
print-type-size     field `.len`: 272 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::option::Option<syn::Expr>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Expr`: 272 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ForLoop`: 264 bytes
print-type-size         field `.0`: 264 bytes
print-type-size     variant `Let`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `MethodCall`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `While`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Closure`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Loop`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Block`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `If`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Async`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Call`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Continue`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Field`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Array`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Match`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `TryBlock`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Unsafe`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `AssignOp`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Binary`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Lit`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Assign`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Cast`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Index`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Repeat`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Await`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Group`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Paren`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Return`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Try`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unary`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Yield`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::ExprForLoop`: 264 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.in_token`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::DeriveInput>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::DeriveInput, syn::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::DeriveInput`: 232 bytes, alignment: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size type: `syn::ExprLet`: 184 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.let_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size type: `syn::TypeBareFn`: 176 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.variadic`: 40 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::ExprMethodCall`: 152 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `.turbofish`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.receiver`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::Pat`: 144 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TupleStruct`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Ident`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Or`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Slice`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Lit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Rest`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Wild`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::PatTupleStruct`: 136 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 64 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::ExprStruct`: 128 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.rest`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `syn::PatMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::ExprWhile`: 120 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.while_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatStruct`: 120 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `syn::ExprClosure`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.body`: 8 bytes
print-type-size     field `.movability`: 8 bytes
print-type-size     field `.asyncness`: 8 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.or1_token`: 4 bytes
print-type-size     field `.or2_token`: 4 bytes
print-type-size type: `syn::ExprLoop`: 112 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.loop_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `syn::Attribute`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size type: `syn::ExprBlock`: 104 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::LifetimeDef`: 104 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `syn::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.delimiter`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `std::thread::__LocalKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<'_, proc_macro::bridge::client::BridgeStateL>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size     field `.cell`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::common::thread_local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `syn::ExprIf`: 88 bytes, alignment: 8 bytes
print-type-size     field `.then_branch`: 32 bytes
print-type-size     field `.else_branch`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.if_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `syn::PatIdent`: 88 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.subpat`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.by_ref`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size type: `proc_macro::bridge::client::BridgeState<'_>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Connected`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `InUse`: 0 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::cell::Cell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 80 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 80 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::ExprBreak`: 80 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.break_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size type: `proc_macro::bridge::client::Bridge<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAsync`: 72 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.async_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCall`: 72 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprContinue`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.continue_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprField`: 72 bytes, alignment: 8 bytes
print-type-size     field `.member`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `syn::Data`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Union`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Enum`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size type: `syn::DataStruct`: 64 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprArray`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprMatch`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.arms`: 24 bytes
print-type-size     field `.match_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `syn::ExprTryBlock`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.try_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnsafe`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.unsafe_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatOr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.cases`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.leading_vert`: 8 bytes
print-type-size type: `syn::PatSlice`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeReference`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `syn::ExprAssignOp`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprLit`: 56 bytes, alignment: 8 bytes
print-type-size     field `.lit`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.from`: 8 bytes
print-type-size     field `.to`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::PatRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lo`: 8 bytes
print-type-size     field `.hi`: 8 bytes
print-type-size type: `syn::buffer::Entry`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `End`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::error::ErrorMessage`: 56 bytes, alignment: 8 bytes
print-type-size     field `.start_span`: 16 bytes
print-type-size     field `.end_span`: 16 bytes
print-type-size     field `.message`: 24 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<syn::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Label>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::MethodTurbofish>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataUnion`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 40 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAssign`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprIndex`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 0 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprRepeat`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `syn::ExprType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Fields`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unnamed`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `syn::Label`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 40 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::MethodTurbofish`: 48 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::PatReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `proc_macro2::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::TokenTree`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Variadic>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::AccessError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::DataEnum`: 40 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `syn::ExprAwait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.await_token`: 4 bytes
print-type-size type: `syn::ExprBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprParen`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReturn`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.return_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTry`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.question_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `syn::ExprYield`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.yield_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsNamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsUnnamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Lifetime`: 40 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `syn::TypeTuple`: 40 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Variadic`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::fallback::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 24 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::Group`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `proc_macro2::imp::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `StaticStr`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 32 bytes, alignment: 8 bytes
print-type-size     field `.FreeFunctions`: 8 bytes
print-type-size     field `.TokenStream`: 8 bytes
print-type-size     field `.SourceFile`: 8 bytes
print-type-size     field `.Span`: 8 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::option::Option<syn::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `syn::Block`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stmts`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Lit`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `syn::Member`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::PatLit`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size type: `syn::PatRest`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dot2_token`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::PatWild`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::parse::ParseBuffer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::BareFnArg, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Field, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldPat, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldValue, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericMethodArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::LifetimeDef, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Pat, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Pat, syn::token::Or>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::PathSegment, syn::token::Colon2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Type, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::TypeParamBound, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Variant, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<syn::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<(), syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(syn::BareFnArg, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Expr, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Field, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldPat, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldValue, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericMethodArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericParam, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Lifetime, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::LifetimeDef, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Pat, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Pat, syn::token::Or)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::PathSegment, syn::token::Colon2)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Type, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::TypeParamBound, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Variant, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Arm>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Stmt>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `syn::VisRestricted`: 24 bytes, alignment: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::Visibility`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Restricted`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Public`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Crate`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Field, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldPat, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldValue, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericMethodArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::LifetimeDef, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Pat, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Pat, syn::token::Or)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::TypeParamBound, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Arm>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Stmt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<'_, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::cell::Cell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::Write::write_fmt::Adapter<'_, std::sys::unix::stdio::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::token::At, std::boxed::Box<syn::Pat>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::token::Else, std::boxed::Box<syn::Expr>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::RangeLimits`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Closed`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `HalfOpen`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `syn::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeParen`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeSlice`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::buffer::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size type: `syn::buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Chain`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::thread::ThreadBound<proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread_id`: 8 bytes
print-type-size     field `.value`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<syn::token::Colon2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dot2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::token::Dot3`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::DotDotEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::TokenStream>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BRIDGE_STATE::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::TokenStream>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::RefMutL<'_, '_, proc_macro::bridge::client::BridgeStateL>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut proc_macro::bridge::client::BridgeState<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldPat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericMethodArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Pat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Async>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Move>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Or>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Ref>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Static>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::FieldPat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericMethodArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Pat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Pat, syn::token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::FieldPat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericMethodArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Pat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Pat, syn::token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `syn::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `syn::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::MacroDelimiter`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Brace`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Bracket`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::token::AddEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Colon2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::DivEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Dot2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::MulEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RemEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::SubEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `syn::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `syn::VisCrate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.crate_token`: 4 bytes
print-type-size type: `syn::VisPublic`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size type: `syn::token::Add`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Async`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::At`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Await`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bang`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Box`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Brace`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bracket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Break`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Continue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Crate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Div`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Else`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::If`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Let`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Loop`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Match`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Move`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Paren`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Ref`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Rem`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Return`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Static`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Sub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Try`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::While`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Yield`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::cell::Cell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::stdio::Stderr>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::thread::AccessError>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::common::thread_local::fast_local::fast::DtorState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unregistered`: 0 bytes
print-type-size     variant `Registered`: 0 bytes
print-type-size     variant `RunningOrHasRun`: 0 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::bridge::closure::Env`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Field, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldPat, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldValue, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericMethodArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Lifetime, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::LifetimeDef, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Pat, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Pat, syn::token::Or)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::PathSegment, syn::token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::TypeParamBound, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Arm>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldPat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldValue>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericMethodArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::LifetimeDef>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Pat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Stmt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {num_traits_num}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::__private::private`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::reserved::Reserved`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::GenericParam`: 640 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Const`: 632 bytes
print-type-size         field `.0`: 632 bytes
print-type-size     variant `Type`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `Lifetime`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `syn::ConstParam`: 632 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.default`: 272 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size type: `syn::PredicateEq`: 584 bytes, alignment: 8 bytes
print-type-size     field `.lhs_ty`: 288 bytes
print-type-size     field `.rhs_ty`: 288 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::WherePredicate`: 584 bytes, alignment: 8 bytes
print-type-size     variant `Eq`: 584 bytes
print-type-size         field `.0`: 584 bytes
print-type-size     variant `Type`: 384 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 376 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<(syn::Variant, syn::token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     field `.value`: 392 bytes
print-type-size type: `std::mem::MaybeUninit<(syn::Variant, syn::token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 392 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 392 bytes
print-type-size type: `std::option::Option<(syn::Variant, syn::token::Comma)>`: 392 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeParam`: 392 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.default`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::Variant>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.value`: 384 bytes
print-type-size type: `std::mem::MaybeUninit<syn::Variant>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 384 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 384 bytes
print-type-size type: `std::option::IntoIter<syn::Variant>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 384 bytes
print-type-size type: `std::option::Item<syn::Variant>`: 384 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 384 bytes
print-type-size type: `std::option::Option<(usize, syn::Field)>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Variant>`: 384 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 384 bytes
print-type-size         field `.0`: 384 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Variant`: 384 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.discriminant`: 280 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.value`: 376 bytes
print-type-size type: `std::mem::MaybeUninit<syn::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 376 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 376 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, syn::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<syn::Field>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 376 bytes
print-type-size         field `.0`: 376 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Field`: 376 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `syn::PredicateType`: 376 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.bounded_ty`: 288 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::BareFnArg`: 352 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.name`: 40 bytes
print-type-size type: `syn::Binding`: 328 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::GenericArgument`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 328 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Binding`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Const`: 312 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Constraint`: 112 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 80 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<syn::Type>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Type`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `BareFn`: 184 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 72 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Never`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::TypeArray`: 288 bytes, alignment: 8 bytes
print-type-size     field `.len`: 272 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::option::Option<(syn::token::Eq, syn::Expr)>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Expr>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Expr`: 272 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ForLoop`: 264 bytes
print-type-size         field `.0`: 264 bytes
print-type-size     variant `Let`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `MethodCall`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `While`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Closure`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Loop`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Block`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `If`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Async`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Call`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Continue`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Field`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Array`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Match`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `TryBlock`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Unsafe`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `AssignOp`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Binary`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Lit`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Assign`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Cast`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Index`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Repeat`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Await`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Group`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Paren`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Return`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Try`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unary`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Yield`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::ExprForLoop`: 264 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.in_token`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::DeriveInput>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::DeriveInput, syn::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::DeriveInput`: 232 bytes, alignment: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size type: `syn::ExprLet`: 184 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.let_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size type: `syn::TypeBareFn`: 176 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.variadic`: 40 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::ExprMethodCall`: 152 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `.turbofish`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.receiver`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::Pat`: 144 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TupleStruct`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Ident`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Or`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Slice`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Lit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Rest`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Wild`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::PatTupleStruct`: 136 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 64 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::ExprStruct`: 128 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.rest`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `syn::PatMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::ExprWhile`: 120 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.while_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatStruct`: 120 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `syn::ExprClosure`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.body`: 8 bytes
print-type-size     field `.movability`: 8 bytes
print-type-size     field `.asyncness`: 8 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.or1_token`: 4 bytes
print-type-size     field `.or2_token`: 4 bytes
print-type-size type: `syn::ExprLoop`: 112 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.loop_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TraitBound`: 112 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.paren_token`: 8 bytes
print-type-size     field `.modifier`: 8 bytes
print-type-size type: `syn::TypeParamBound`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Trait`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Lifetime`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `syn::Attribute`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size type: `syn::ExprBlock`: 104 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::LifetimeDef`: 104 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `syn::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.delimiter`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `std::thread::__LocalKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `syn::PathSegment`: 96 bytes, alignment: 8 bytes
print-type-size     field `.arguments`: 64 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<'_, proc_macro::bridge::client::BridgeStateL>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size     field `.cell`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::common::thread_local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `syn::ExprIf`: 88 bytes, alignment: 8 bytes
print-type-size     field `.then_branch`: 32 bytes
print-type-size     field `.else_branch`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.if_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `syn::PatIdent`: 88 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.subpat`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.by_ref`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size type: `proc_macro::bridge::client::BridgeState<'_>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Connected`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `InUse`: 0 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::cell::Cell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 80 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 80 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::ExprBreak`: 80 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.break_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PredicateLifetime`: 80 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size type: `proc_macro::bridge::client::Bridge<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size type: `syn::Constraint`: 72 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAsync`: 72 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.async_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCall`: 72 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprContinue`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.continue_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprField`: 72 bytes, alignment: 8 bytes
print-type-size     field `.member`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `syn::Data`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Union`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Enum`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size type: `syn::DataStruct`: 64 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprArray`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprMatch`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.arms`: 24 bytes
print-type-size     field `.match_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `syn::ExprTryBlock`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.try_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnsafe`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.unsafe_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatOr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.cases`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.leading_vert`: 8 bytes
print-type-size type: `syn::PatSlice`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PathArguments`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `AngleBracketed`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Parenthesized`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeReference`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `DataSizeAttributes`: 56 bytes, alignment: 8 bytes
print-type-size     field `.with`: 48 bytes
print-type-size     field `.skip`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `syn::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAssignOp`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprLit`: 56 bytes, alignment: 8 bytes
print-type-size     field `.lit`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.from`: 8 bytes
print-type-size     field `.to`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ParenthesizedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lo`: 8 bytes
print-type-size     field `.hi`: 8 bytes
print-type-size type: `syn::buffer::Entry`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `End`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::error::ErrorMessage`: 56 bytes, alignment: 8 bytes
print-type-size     field `.start_span`: 16 bytes
print-type-size     field `.end_span`: 16 bytes
print-type-size     field `.message`: 24 bytes
print-type-size type: `DataAttribute`: 48 bytes, alignment: 8 bytes
print-type-size     variant `With`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Skip`: 0 bytes
print-type-size type: `hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size type: `hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.map`: 48 bytes
print-type-size type: `std::collections::HashSet<proc_macro2::Ident>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::collections::hash_set::Intersection<'_, proc_macro2::Ident, std::collections::hash_map::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size     field `.other`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, DataAttribute>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Label>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::MethodTurbofish>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<DataAttribute, syn::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<syn::Path, syn::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataUnion`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 40 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAssign`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprIndex`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 0 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprRepeat`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `syn::ExprType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Fields`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unnamed`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `syn::Label`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 40 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::MethodTurbofish`: 48 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::PatReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `hashbrown::map::Iter<'_, proc_macro2::Ident, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `hashbrown::map::Keys<'_, proc_macro2::Ident, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `hashbrown::raw::RawIter<(proc_macro2::Ident, ())>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `hashbrown::set::Iter<'_, proc_macro2::Ident>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `proc_macro2::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::TokenTree`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `std::collections::hash_set::Iter<'_, proc_macro2::Ident>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::iter::Enumerate<syn::punctuated::IntoIter<syn::Field>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::parse::ParseBuffer<'_>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, syn::token::Colon)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Variadic>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::AccessError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<syn::parse::ParseBuffer<'_>, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::DataEnum`: 40 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `syn::ExprAwait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.await_token`: 4 bytes
print-type-size type: `syn::ExprBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprParen`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReturn`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.return_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTry`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.question_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `syn::ExprYield`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.yield_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsNamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsUnnamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Lifetime`: 40 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `syn::TypeTuple`: 40 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Variadic`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(proc_macro2::Ident, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(proc_macro2::Ident, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `hashbrown::raw::RawTableInner<std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size type: `proc_macro2::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::fallback::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 24 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::Group`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `proc_macro2::imp::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `StaticStr`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 32 bytes, alignment: 8 bytes
print-type-size     field `.FreeFunctions`: 8 bytes
print-type-size     field `.TokenStream`: 8 bytes
print-type-size     field `.SourceFile`: 8 bytes
print-type-size     field `.Span`: 8 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::Variant, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::Variant, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.step`: 8 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner<std::alloc::Global>, hashbrown::TryReserveError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<proc_macro2::Ident, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::Punct, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Err`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `std::thread::__LocalKeyInner<std::cell::Cell<(u64, u64)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::vec::IntoIter<(syn::Variant, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::Field>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::Variant>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `syn::Block`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stmts`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Lit`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `syn::Member`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::PatLit`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size type: `syn::PatRest`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dot2_token`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::PatWild`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::parse::ParseBuffer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::Field>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::Variant>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::BareFnArg, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Field, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldPat, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldValue, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericMethodArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::LifetimeDef, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Pat, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Pat, syn::token::Or>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::PathSegment, syn::token::Colon2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Type, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::TypeParamBound, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Variant, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Variant, [closure@std::vec::Vec<syn::Variant>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::Variant, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::Variant, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Variant, [closure@std::vec::Vec<syn::Variant>::extend_trusted<std::option::IntoIter<syn::Variant>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(syn::Variant, syn::token::Comma), syn::Variant, (), [closure@<syn::punctuated::Punctuated<syn::Variant, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}], [closure@std::iter::Iterator::for_each::call<syn::Variant, [closure@std::vec::Vec<syn::Variant>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::Variant, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::Variant, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::Variant>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::Variant, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::Variant, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::Variant>::extend_trusted<std::option::IntoIter<syn::Variant>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::rehash_in_place::{closure#0}]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::Variant, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::Variant>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<(), syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::collections::hash_map::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::common::thread_local::lazy::LazyKeyInner<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(syn::BareFnArg, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Expr, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Field, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldPat, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldValue, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericMethodArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericParam, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Lifetime, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::LifetimeDef, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Pat, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Pat, syn::token::Or)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::PathSegment, syn::token::Colon2)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Type, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::TypeParamBound, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Variant, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Arm>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Stmt>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Variant>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `syn::VisRestricted`: 24 bytes, alignment: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::Visibility`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Restricted`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Public`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Crate`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::find<[closure@hashbrown::map::equivalent_key<proc_macro2::Ident, proc_macro2::Ident, ()>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::is_in_same_group::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::rehash_in_place::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Field, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldPat, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldValue, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericMethodArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::LifetimeDef, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Pat, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Pat, syn::token::Or)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::TypeParamBound, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Arm>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Stmt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::core_arch::simd::i64x2`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size     field `.4`: 1 bytes
print-type-size     field `.5`: 1 bytes
print-type-size     field `.6`: 1 bytes
print-type-size     field `.7`: 1 bytes
print-type-size     field `.8`: 1 bytes
print-type-size     field `.9`: 1 bytes
print-type-size     field `.10`: 1 bytes
print-type-size     field `.11`: 1 bytes
print-type-size     field `.12`: 1 bytes
print-type-size     field `.13`: 1 bytes
print-type-size     field `.14`: 1 bytes
print-type-size     field `.15`: 1 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `hashbrown::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.ctrl_align`: 8 bytes
print-type-size type: `hashbrown::raw::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `hashbrown::raw::sse2::Group::static_empty::AlignedBytes`: 16 bytes, alignment: 16 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<'_, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::Write::write_fmt::Adapter<'_, std::sys::unix::stdio::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>>::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&proc_macro2::Ident, &())>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::token::At, std::boxed::Box<syn::Pat>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::token::Else, std::boxed::Box<syn::Expr>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &syn::Field)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::Variant, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::Field]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::Variant]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::Variant, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::Field]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::Variant]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&syn::BareFnArg, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::GenericArgument, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::Type, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::RangeLimits`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Closed`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `HalfOpen`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `syn::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeParen`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeSlice`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::buffer::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size type: `syn::buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Chain`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::thread::ThreadBound<proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread_id`: 8 bytes
print-type-size     field `.value`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<syn::token::Colon2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dot2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::token::Dot3`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::DotDotEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (syn::Variant, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::Field, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::Variant, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:133:38: 133:42]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:64:18: 64:21]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:75:18: 75:21]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:77:30: 77:34]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>>::{closure#0}]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::TokenStream>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::map::equivalent_key<proc_macro2::Ident, proc_macro2::Ident, ()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::map::make_hasher<proc_macro2::Ident, proc_macro2::Ident, (), std::collections::hash_map::RandomState>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::reserve_rehash<[closure@hashbrown::map::make_hasher<proc_macro2::Ident, proc_macro2::Ident, (), std::collections::hash_map::RandomState>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::fallible_with_capacity::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BRIDGE_STATE::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::collections::hash_map::RandomState::new::KEYS::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&syn::Type, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:133:38: 133:42]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&syn::Type, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:77:30: 77:34]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&syn::TypeParamBound, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:64:18: 64:21]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&syn::TypeParamBound, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:75:18: 75:21]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), [closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::TokenStream>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::filter_map::filter_map_fold<&syn::GenericParam, proc_macro2::Ident, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26], [closure@std::iter::adapters::map::map_fold<proc_macro2::Ident, (proc_macro2::Ident, ()), (), [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), [closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::Ident, (proc_macro2::Ident, ()), (), [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), [closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@syn::Attribute::parse_args_with<for<'a> fn(&'a syn::parse::ParseBuffer<'a>) -> std::result::Result<DataAttribute, syn::Error> {<DataAttribute as syn::parse::Parse>::parse}>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::RefMutL<'_, '_, proc_macro::bridge::client::BridgeStateL>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Option<&(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut proc_macro::bridge::client::BridgeState<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fn(*mut u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(proc_macro2::Ident, ())>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldPat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericMethodArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Pat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Async>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Move>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Or>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Paren>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Ref>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Static>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner<std::alloc::Global>, usize) -> u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut(usize) -> bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::FieldPat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericMethodArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Pat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Pat, syn::token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::FieldPat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericMethodArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Pat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Pat, syn::token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `syn::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `syn::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::MacroDelimiter`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Brace`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Bracket`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::TraitBoundModifier`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Maybe`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::token::AddEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Colon2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::DivEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Dot2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::MulEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RemEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::SubEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `syn::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `syn::VisCrate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.crate_token`: 4 bytes
print-type-size type: `syn::VisPublic`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size type: `syn::token::Add`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Async`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::At`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Await`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bang`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Box`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Brace`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bracket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Break`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Continue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Crate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Div`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Else`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::If`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Let`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Loop`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Match`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Move`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Paren`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Ref`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Rem`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Return`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Static`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Sub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Try`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::While`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Yield`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMaskIter`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::cell::Cell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::stdio::Stderr>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::thread::AccessError>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::common::thread_local::fast_local::fast::DtorState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unregistered`: 0 bytes
print-type-size     variant `Registered`: 0 bytes
print-type-size     variant `RunningOrHasRun`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::FilterMap<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datasize_derive-0.2.14/src/lib.rs:152:21: 152:26]>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::Variant, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::Variant, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::collections::hash_map::RandomState::new::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::bridge::closure::Env`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&proc_macro2::Ident, &())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(proc_macro2::Ident, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Field, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldPat, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldValue, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericMethodArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Lifetime, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::LifetimeDef, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Pat, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Pat, syn::token::Or)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::PathSegment, syn::token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::TypeParamBound, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner<std::alloc::Global>, usize) -> u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut(usize) -> bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Arm>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldPat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldValue>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericMethodArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::LifetimeDef>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Pat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Stmt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_data_size}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::__private::private`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::reserved::Reserved`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::GenericParam`: 640 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Const`: 632 bytes
print-type-size         field `.0`: 632 bytes
print-type-size     variant `Type`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `Lifetime`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `syn::ConstParam`: 632 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.default`: 272 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size type: `syn::TypeParam`: 392 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.default`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size type: `syn::Field`: 376 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `std::option::Option<syn::Type>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Type`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `BareFn`: 184 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 72 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Never`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::TypeArray`: 288 bytes, alignment: 8 bytes
print-type-size     field `.len`: 272 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `std::option::Option<syn::Expr>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Expr`: 272 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ForLoop`: 264 bytes
print-type-size         field `.0`: 264 bytes
print-type-size     variant `Let`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `MethodCall`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `While`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Closure`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Loop`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Block`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `If`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Async`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Call`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Continue`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Field`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Array`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Match`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `TryBlock`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Unsafe`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `AssignOp`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Binary`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Lit`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Assign`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Cast`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Index`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Repeat`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Await`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Group`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Paren`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Return`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Try`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unary`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Yield`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::ExprForLoop`: 264 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.in_token`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::DeriveInput>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::DeriveInput, syn::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::DeriveInput`: 232 bytes, alignment: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size type: `syn::ExprLet`: 184 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.let_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size type: `syn::TypeBareFn`: 176 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.variadic`: 40 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::ExprMethodCall`: 152 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `.turbofish`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.receiver`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::Pat`: 144 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TupleStruct`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Ident`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Or`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Slice`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Lit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Rest`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Wild`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::PatTupleStruct`: 136 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 64 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::ExprStruct`: 128 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.rest`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `syn::PatMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::ExprWhile`: 120 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.while_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatStruct`: 120 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `syn::ExprClosure`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.body`: 8 bytes
print-type-size     field `.movability`: 8 bytes
print-type-size     field `.asyncness`: 8 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.or1_token`: 4 bytes
print-type-size     field `.or2_token`: 4 bytes
print-type-size type: `syn::ExprLoop`: 112 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.loop_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `syn::Attribute`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size type: `syn::ExprBlock`: 104 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::LifetimeDef`: 104 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `syn::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.delimiter`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `std::result::Result<syn::Meta, syn::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::thread::__LocalKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `syn::Meta`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `List`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `NameValue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Path`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `syn::PathSegment`: 96 bytes, alignment: 8 bytes
print-type-size     field `.arguments`: 64 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<'_, proc_macro::bridge::client::BridgeStateL>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size     field `.cell`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::common::thread_local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `syn::ExprIf`: 88 bytes, alignment: 8 bytes
print-type-size     field `.then_branch`: 32 bytes
print-type-size     field `.else_branch`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.if_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `syn::MetaList`: 88 bytes, alignment: 8 bytes
print-type-size     field `.nested`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::MetaNameValue`: 88 bytes, alignment: 8 bytes
print-type-size     field `.lit`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatIdent`: 88 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.subpat`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.by_ref`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size type: `proc_macro::bridge::client::BridgeState<'_>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Connected`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `InUse`: 0 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::cell::Cell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 80 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 80 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::ExprBreak`: 80 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.break_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size type: `proc_macro::bridge::client::Bridge<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAsync`: 72 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.async_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCall`: 72 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprContinue`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.continue_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprField`: 72 bytes, alignment: 8 bytes
print-type-size     field `.member`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::FlatMap<std::vec::IntoIter<u8>, std::iter::Map<std::iter::Rev<std::ops::Range<i32>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:40: 436:48]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:19: 436:22]>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::vec::IntoIter<u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:19: 436:22]>, std::iter::Map<std::iter::Rev<std::ops::Range<i32>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:40: 436:48]>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.frontiter`: 16 bytes
print-type-size     field `.backiter`: 16 bytes
print-type-size type: `syn::Data`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Union`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Enum`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size type: `syn::DataStruct`: 64 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprArray`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprMatch`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.arms`: 24 bytes
print-type-size     field `.match_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `syn::ExprTryBlock`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.try_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnsafe`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.unsafe_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatOr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.cases`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.leading_vert`: 8 bytes
print-type-size type: `syn::PatSlice`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PathArguments`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `AngleBracketed`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Parenthesized`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeReference`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::lit::LitIntRepr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.digits`: 16 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Chain<std::iter::Take<std::iter::Repeat<u8>>, std::vec::IntoIter<u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.b`: 32 bytes
print-type-size     field `.a`: 24 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Chain<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:884:22: 884:25]>, std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:885:39: 885:42]>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `syn::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAssignOp`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprLit`: 56 bytes, alignment: 8 bytes
print-type-size     field `.lit`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.from`: 8 bytes
print-type-size     field `.to`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ParenthesizedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lo`: 8 bytes
print-type-size     field `.hi`: 8 bytes
print-type-size type: `syn::buffer::Entry`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `End`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::error::ErrorMessage`: 56 bytes, alignment: 8 bytes
print-type-size     field `.start_span`: 16 bytes
print-type-size     field `.end_span`: 16 bytes
print-type-size     field `.message`: 24 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Chain<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:884:22: 884:25]>, std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:885:39: 885:42]>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.a`: 24 bytes
print-type-size     field `.b`: 24 bytes
print-type-size type: `std::option::Option<(usize, proc_macro2::TokenStream)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Label>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::MethodTurbofish>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataUnion`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 40 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAssign`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprIndex`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 0 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprRepeat`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `syn::ExprType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Fields`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unnamed`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `syn::Label`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 40 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::MethodTurbofish`: 48 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::PatReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::lit::LitRepr`: 48 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `proc_macro2::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::TokenTree`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::vec::IntoIter<addchain::Step>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(usize, proc_macro2::Ident)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Variadic>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::AccessError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::DataEnum`: 40 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `syn::ExprAwait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.await_token`: 4 bytes
print-type-size type: `syn::ExprBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprParen`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReturn`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.return_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTry`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.question_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `syn::ExprYield`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.yield_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsNamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsUnnamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Lifetime`: 40 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `syn::TypeTuple`: 40 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Variadic`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::fallback::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 24 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::Group`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `proc_macro2::imp::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `StaticStr`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 32 bytes, alignment: 8 bytes
print-type-size     field `.FreeFunctions`: 8 bytes
print-type-size     field `.TokenStream`: 8 bytes
print-type-size     field `.SourceFile`: 8 bytes
print-type-size     field `.Span`: 8 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::vec::IntoIter<u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:19: 436:22]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:19: 436:22]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(usize, addchain::Step)>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::vec::IntoIter<u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:19: 436:22]>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::IntoIter<u8>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::vec::IntoIter<addchain::Step>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<u8>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `syn::Block`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stmts`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Lit`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `syn::Member`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::PatLit`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size type: `syn::PatRest`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dot2_token`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::PatWild`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::parse::ParseBuffer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::BareFnArg, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Field, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldPat, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldValue, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericMethodArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::LifetimeDef, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Pat, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Pat, syn::token::Or>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::PathSegment, syn::token::Colon2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Type, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::TypeParamBound, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Variant, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@<std::iter::Take<I> as std::iter::Iterator>::for_each::check<'_, u8, [closure@std::vec::Vec<u8>::extend_trusted<std::iter::Take<std::iter::Repeat<u8>>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<u8, [closure@std::vec::Vec<u8>::extend_trusted<std::iter::Chain<std::iter::Take<std::iter::Repeat<u8>>, std::vec::IntoIter<u8>>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u8>::extend_trusted<std::iter::Chain<std::iter::Take<std::iter::Repeat<u8>>, std::vec::IntoIter<u8>>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<u8>::extend_trusted<std::iter::Take<std::iter::Repeat<u8>>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `addchain::Step`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Add`: 16 bytes
print-type-size         field `.left`: 8 bytes
print-type-size         field `.right`: 8 bytes
print-type-size     variant `Double`: 8 bytes
print-type-size         field `.index`: 8 bytes
print-type-size type: `num_bigint::BigUint`: 24 bytes, alignment: 8 bytes
print-type-size     field `.data`: 24 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::borrow::Cow<'_, num_bigint::BigUint>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Borrowed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Map<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:653:30: 653:33]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:653:56: 653:64]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:875:24: 875:27]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::iter::Map<std::ops::Range<usize>, fn(usize) -> proc_macro2::Ident {prime_field_impl::get_temp}>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:884:22: 884:25]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<addchain::Step>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<addchain::Step>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<addchain::Step>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, addchain::Step>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<addchain::Step>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:884:22: 884:25]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:885:39: 885:42]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Take<std::iter::Repeat<u8>>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<(), syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<num_bigint::BigUint, num_bigint::ParseBigIntError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<(syn::BareFnArg, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Expr, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Field, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldPat, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldValue, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericMethodArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericParam, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Lifetime, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::LifetimeDef, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::NestedMeta, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Pat, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Pat, syn::token::Or)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::PathSegment, syn::token::Colon2)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Type, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::TypeParamBound, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Variant, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<addchain::Step>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Arm>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Stmt>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u64>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `syn::VisRestricted`: 24 bytes, alignment: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::Visibility`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Restricted`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Public`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Crate`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `[closure@<std::iter::Take<I> as std::iter::Iterator>::try_fold::check<'_, u8, (), std::ops::try_trait::NeverShortCircuit<()>, [closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), u8, &mut [closure@std::iter::Iterator::for_each::call<u8, [closure@std::vec::Vec<u8>::extend_trusted<std::iter::Chain<std::iter::Take<std::iter::Repeat<u8>>, std::vec::IntoIter<u8>>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Field, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldPat, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldValue, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericMethodArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::LifetimeDef, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::NestedMeta, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Pat, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Pat, syn::token::Or)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::TypeParamBound, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<addchain::Step>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Arm>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Stmt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<'_, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[syn::error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::cell::Cell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::Write::write_fmt::Adapter<'_, std::sys::unix::stdio::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Map<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:653:30: 653:33]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:653:56: 653:64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:653:30: 653:33]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:875:24: 875:27]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:885:39: 885:42]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, fn(usize) -> proc_macro2::Ident {prime_field_impl::get_temp}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<'_, u64>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Take<std::iter::Repeat<u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[proc_macro2::Ident]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::token::At, std::boxed::Box<syn::Pat>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::token::Else, std::boxed::Box<syn::Expr>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Rev<std::ops::Range<i32>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:40: 436:48]>>`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[addchain::Step]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[addchain::Step]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::RangeLimits`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Closed`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `HalfOpen`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `syn::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeParen`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeSlice`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::buffer::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size type: `syn::buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Chain`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::thread::ThreadBound<proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread_id`: 8 bytes
print-type-size     field `.value`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::iter::Map<std::iter::Rev<std::ops::Range<i32>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:40: 436:48]>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size     field `.f`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<syn::token::Colon2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dot2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::token::Dot3`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::DotDotEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, addchain::Step, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, u8, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:884:22: 884:25]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::TokenStream>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Chain<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:884:22: 884:25]>, std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:885:39: 885:42]>> as std::iter::Iterator>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BRIDGE_STATE::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<proc_macro2::TokenStream>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::ops::try_trait::NeverShortCircuit<()>::wrap_mut_2<(), u8, &mut [closure@std::iter::Iterator::for_each::call<u8, [closure@std::vec::Vec<u8>::extend_trusted<std::iter::Chain<std::iter::Take<std::iter::Repeat<u8>>, std::vec::IntoIter<u8>>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::RefMutL<'_, '_, proc_macro::bridge::client::BridgeStateL>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[proc_macro2::Ident; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[u64; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[u8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<i32>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Rev<std::ops::Range<i32>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:40: 436:48]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:884:22: 884:25]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:885:39: 885:42]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::vec::IntoIter<u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:19: 436:22]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut proc_macro::bridge::client::BridgeState<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Rev<std::ops::Range<i32>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:40: 436:48]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:884:22: 884:25]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:885:39: 885:42]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::vec::IntoIter<u8>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:19: 436:22]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Lit>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::LitInt>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldPat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericMethodArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Pat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Async>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Move>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Or>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Ref>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Static>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::FieldPat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericMethodArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Pat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Pat, syn::token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[proc_macro2::Ident; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u64; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[u8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<addchain::Step>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::FieldPat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericMethodArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Pat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Pat, syn::token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[proc_macro2::Ident; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[u64; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[u8; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<addchain::Step>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<addchain::Step>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<addchain::Step>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `syn::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `syn::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::MacroDelimiter`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Brace`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Bracket`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::token::AddEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Colon2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::DivEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Dot2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::MulEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RemEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::SubEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `syn::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `syn::VisCrate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.crate_token`: 4 bytes
print-type-size type: `syn::VisPublic`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size type: `syn::token::Add`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Async`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::At`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Await`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bang`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Box`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Brace`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bracket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Break`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Continue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Crate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Div`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Else`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::If`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Let`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Loop`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Match`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Move`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Paren`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Ref`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Rem`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Return`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Static`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Sub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Try`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::While`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Yield`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ReprEndianness`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Big`: 0 bytes
print-type-size     variant `Little`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:40: 436:48]`: 1 bytes, alignment: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `num_bigint::BigIntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size type: `num_bigint::ParseBigIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::cell::Cell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::iter::Repeat<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.element`: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuit<()>, std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuit<()>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::stdio::Stderr>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::thread::AccessError>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<ReprEndianness, ()>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::common::thread_local::fast_local::fast::DtorState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unregistered`: 0 bytes
print-type-size     variant `Registered`: 0 bytes
print-type-size     variant `RunningOrHasRun`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:238:18: 238:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:308:48: 308:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:436:19: 436:22]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:653:30: 653:33]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:653:56: 653:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:875:24: 875:27]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ff_derive-0.12.1/src/lib.rs:885:39: 885:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&&proc_macro2::Ident, &str>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&&proc_macro2::Ident, &str>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&proc_macro2::Ident, std::string::String>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&proc_macro2::Ident, std::string::String>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::DeriveInput, &str>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::DeriveInput, &str>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::Field, std::string::String>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::Field, std::string::String>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::LitInt, std::string::String>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::LitInt, std::string::String>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::TypeArray, std::string::String>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::TypeArray, std::string::String>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::Visibility, &str>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<&syn::Visibility, &str>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::bridge::closure::Env`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Field, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldPat, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldValue, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericMethodArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Lifetime, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::LifetimeDef, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::NestedMeta, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Pat, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Pat, syn::token::Or)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::PathSegment, syn::token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::TypeParamBound, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro2::Ident; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[proc_macro2::Ident]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::error::ErrorMessage; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::error::ErrorMessage]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u64; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u64]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<addchain::Step>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Arm>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldPat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldValue>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericMethodArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::LifetimeDef>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::NestedMeta>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Pat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Stmt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {prime_field}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuit<()>, std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::try_trait::NeverShortCircuitResidual>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuit<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::try_trait::NeverShortCircuitResidual`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::__private::private`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::reserved::Reserved`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::iter::Rev<core::ops::Range<i32>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `core::ops::Range<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `core::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `core::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `core::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `subtle::Choice`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `alloc::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `batch::BatchInverter`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::mem::ManuallyDrop<alloc::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `core::option::Option<core::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `internals::ast::Container<'_>`: 1360 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 1280 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.data`: 32 bytes
print-type-size     field `.generics`: 8 bytes
print-type-size     field `.original`: 8 bytes
print-type-size type: `std::option::Option<internals::ast::Container<'_>>`: 1360 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 1360 bytes
print-type-size         field `.0`: 1360 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `internals::attr::Container`: 1280 bytes, alignment: 8 bytes
print-type-size     field `.type_from`: 288 bytes
print-type-size     field `.type_try_from`: 288 bytes
print-type-size     field `.type_into`: 288 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.remote`: 48 bytes
print-type-size     field `.serde_path`: 48 bytes
print-type-size     field `.ser_bound`: 24 bytes
print-type-size     field `.de_bound`: 24 bytes
print-type-size     field `.expecting`: 24 bytes
print-type-size     field `.default`: 104 bytes
print-type-size     field `.tag`: 56 bytes
print-type-size     field `.rename_all_rules`: 2 bytes
print-type-size     field `.identifier`: 1 bytes
print-type-size     field `.transparent`: 1 bytes
print-type-size     field `.deny_unknown_fields`: 1 bytes
print-type-size     field `.has_flatten`: 1 bytes
print-type-size     field `.is_packed`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `internals::ast::Field<'_>`: 728 bytes, alignment: 8 bytes
print-type-size     field `.member`: 32 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.original`: 8 bytes
print-type-size     field `.attrs`: 680 bytes
print-type-size type: `std::option::Option<internals::ast::Field<'_>>`: 728 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 728 bytes
print-type-size         field `.0`: 728 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `internals::attr::Field`: 680 bytes, alignment: 8 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.ser_bound`: 24 bytes
print-type-size     field `.de_bound`: 24 bytes
print-type-size     field `.borrowed_lifetimes`: 24 bytes
print-type-size     field `.default`: 104 bytes
print-type-size     field `.skip_serializing_if`: 104 bytes
print-type-size     field `.serialize_with`: 104 bytes
print-type-size     field `.deserialize_with`: 104 bytes
print-type-size     field `.getter`: 104 bytes
print-type-size     field `.skip_serializing`: 1 bytes
print-type-size     field `.skip_deserializing`: 1 bytes
print-type-size     field `.flatten`: 1 bytes
print-type-size     field `.transparent`: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::iter::Chain<std::option::IntoIter<syn::GenericParam>, syn::punctuated::IntoIter<syn::GenericParam>>`: 672 bytes, alignment: 8 bytes
print-type-size     field `.a`: 640 bytes
print-type-size     field `.b`: 32 bytes
print-type-size type: `std::iter::Chain<std::option::IntoIter<syn::GenericParam>, std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<'_, syn::GenericParam>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:348:52: 348:63]>>`: 664 bytes, alignment: 8 bytes
print-type-size     field `.a`: 640 bytes
print-type-size     field `.b`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<(syn::GenericParam, syn::token::Comma)>`: 648 bytes, alignment: 8 bytes
print-type-size     field `.value`: 648 bytes
print-type-size type: `std::mem::MaybeUninit<(syn::GenericParam, syn::token::Comma)>`: 648 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 648 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 648 bytes
print-type-size type: `std::option::Option<(syn::GenericParam, syn::token::Comma)>`: 648 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 648 bytes
print-type-size         field `.0`: 648 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::GenericParam>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.value`: 640 bytes
print-type-size type: `std::mem::MaybeUninit<syn::GenericParam>`: 640 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 640 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 640 bytes
print-type-size type: `std::option::IntoIter<syn::GenericParam>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 640 bytes
print-type-size type: `std::option::Item<syn::GenericParam>`: 640 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 640 bytes
print-type-size type: `std::option::Option<std::option::IntoIter<syn::GenericParam>>`: 640 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 640 bytes
print-type-size         field `.0`: 640 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::GenericParam>`: 640 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 640 bytes
print-type-size         field `.0`: 640 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::GenericParam`: 640 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Const`: 632 bytes
print-type-size         field `.0`: 632 bytes
print-type-size     variant `Type`: 392 bytes
print-type-size         field `.0`: 392 bytes
print-type-size     variant `Lifetime`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size type: `syn::ConstParam`: 632 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.default`: 272 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size     field `.const_token`: 4 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<(syn::WherePredicate, syn::token::Comma)>`: 592 bytes, alignment: 8 bytes
print-type-size     field `.value`: 592 bytes
print-type-size type: `std::mem::MaybeUninit<(syn::WherePredicate, syn::token::Comma)>`: 592 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 592 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 592 bytes
print-type-size type: `std::option::Option<(syn::WherePredicate, syn::token::Comma)>`: 592 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 592 bytes
print-type-size         field `.0`: 592 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::WherePredicate>`: 584 bytes, alignment: 8 bytes
print-type-size     field `.value`: 584 bytes
print-type-size type: `std::mem::MaybeUninit<syn::WherePredicate>`: 584 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 584 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 584 bytes
print-type-size type: `std::option::IntoIter<syn::WherePredicate>`: 584 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 584 bytes
print-type-size type: `std::option::Item<syn::WherePredicate>`: 584 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 584 bytes
print-type-size type: `std::option::Option<syn::WherePredicate>`: 584 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 584 bytes
print-type-size         field `.0`: 584 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::PredicateEq`: 584 bytes, alignment: 8 bytes
print-type-size     field `.lhs_ty`: 288 bytes
print-type-size     field `.rhs_ty`: 288 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::WherePredicate`: 584 bytes, alignment: 8 bytes
print-type-size     variant `Eq`: 584 bytes
print-type-size         field `.0`: 584 bytes
print-type-size     variant `Type`: 384 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 376 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 552 bytes, alignment: 8 bytes
print-type-size     field `.data`: 456 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 552 bytes, alignment: 8 bytes
print-type-size     field `.value`: 552 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 552 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 552 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 552 bytes
print-type-size type: `internals::ast::Variant<'_>`: 512 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.fields`: 24 bytes
print-type-size     field `.original`: 8 bytes
print-type-size     field `.attrs`: 440 bytes
print-type-size     field `.style`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<internals::ast::Variant<'_>>`: 512 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 512 bytes
print-type-size         field `.0`: 512 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 456 bytes, alignment: 8 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 440 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 456 bytes, alignment: 8 bytes
print-type-size     field `.value`: 456 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 456 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 456 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 456 bytes
print-type-size type: `internals::attr::Variant`: 440 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 96 bytes
print-type-size     field `.name`: 80 bytes
print-type-size     field `.ser_bound`: 24 bytes
print-type-size     field `.de_bound`: 24 bytes
print-type-size     field `.serialize_with`: 104 bytes
print-type-size     field `.deserialize_with`: 104 bytes
print-type-size     field `.rename_all_rules`: 2 bytes
print-type-size     field `.skip_deserializing`: 1 bytes
print-type-size     field `.skip_serializing`: 1 bytes
print-type-size     field `.other`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `syn::TypeParam`: 392 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.default`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size     field `.eq_token`: 8 bytes
print-type-size type: `syn::Variant`: 384 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.discriminant`: 280 bytes
print-type-size type: `alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.data`: 280 bytes
print-type-size     field `.edges`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 376 bytes, alignment: 8 bytes
print-type-size     field `.value`: 376 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 376 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 376 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 376 bytes
print-type-size type: `syn::Field`: 376 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `syn::PredicateType`: 376 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.bounded_ty`: 288 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `internals::attr::Attr<'_, syn::Type>`: 352 bytes, alignment: 8 bytes
print-type-size     field `.value`: 288 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size type: `syn::BareFnArg`: 352 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.name`: 40 bytes
print-type-size type: `std::option::Option<syn::GenericArgument>`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Binding`: 328 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.ty`: 288 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::GenericArgument`: 328 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 328 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Binding`: 328 bytes
print-type-size         field `.0`: 328 bytes
print-type-size     variant `Const`: 312 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Constraint`: 112 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Lifetime`: 80 bytes
print-type-size         padding: 40 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Type>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<syn::Type>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::Type, ()>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<syn::Type, syn::Error>`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::Type`: 288 bytes, alignment: 8 bytes
print-type-size     variant `Array`: 288 bytes
print-type-size         field `.0`: 288 bytes
print-type-size     variant `BareFn`: 184 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Macro`: 112 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 88 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Reference`: 72 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 64 bytes, alignment: 8 bytes
print-type-size     variant `ImplTrait`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `TraitObject`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ptr`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Group`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Paren`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Slice`: 24 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Infer`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Never`: 12 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::TypeArray`: 288 bytes, alignment: 8 bytes
print-type-size     field `.len`: 272 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.vals`: 0 bytes
print-type-size     field `.parent`: 8 bytes
print-type-size     field `.keys`: 264 bytes
print-type-size     field `.parent_idx`: 2 bytes
print-type-size     field `.len`: 2 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 280 bytes, alignment: 8 bytes
print-type-size     field `.value`: 280 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 280 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 280 bytes
print-type-size type: `std::option::Option<(syn::token::Eq, syn::Expr)>`: 280 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 280 bytes
print-type-size         field `.0`: 280 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Expr>`: 272 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 272 bytes
print-type-size         field `.0`: 272 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Expr`: 272 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `ForLoop`: 264 bytes
print-type-size         field `.0`: 264 bytes
print-type-size     variant `Let`: 184 bytes
print-type-size         field `.0`: 184 bytes
print-type-size     variant `MethodCall`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `While`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Closure`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Loop`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Block`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `If`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Break`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Async`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Call`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Continue`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Field`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Array`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Match`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `TryBlock`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Unsafe`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `AssignOp`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Binary`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Lit`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Assign`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Cast`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Index`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Repeat`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Await`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Group`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Paren`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Return`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Try`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unary`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Yield`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::ExprForLoop`: 264 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.in_token`: 4 bytes
print-type-size type: `std::iter::Chain<std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>, std::option::IntoIter<syn::NestedMeta>>`: 248 bytes, alignment: 8 bytes
print-type-size     field `.b`: 96 bytes
print-type-size     field `.a`: 152 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::DeriveInput>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::DeriveInput, syn::Error>`: 232 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 232 bytes
print-type-size         field `.0`: 232 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `syn::DeriveInput`: 232 bytes, alignment: 8 bytes
print-type-size     field `.data`: 64 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.vis`: 24 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size type: `de::Parameters`: 208 bytes, alignment: 8 bytes
print-type-size     field `.local`: 32 bytes
print-type-size     field `.borrowed`: 32 bytes
print-type-size     field `.this`: 48 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.has_getter`: 1 bytes
print-type-size     field `.is_packed`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `syn::ExprLet`: 184 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 144 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.let_token`: 4 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size type: `ser::Parameters`: 176 bytes, alignment: 8 bytes
print-type-size     field `.self_var`: 32 bytes
print-type-size     field `.this`: 48 bytes
print-type-size     field `.generics`: 88 bytes
print-type-size     field `.is_remote`: 1 bytes
print-type-size     field `.is_packed`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, (internals::attr::VecAttr<'_, &syn::LitStr>, internals::attr::VecAttr<'_, &syn::LitStr>)>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, (internals::attr::VecAttr<'_, std::vec::Vec<syn::WherePredicate>>, internals::attr::VecAttr<'_, std::vec::Vec<syn::WherePredicate>>)>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(internals::attr::VecAttr<'_, &syn::LitStr>, internals::attr::VecAttr<'_, &syn::LitStr>), ()>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(internals::attr::VecAttr<'_, std::vec::Vec<syn::WherePredicate>>, internals::attr::VecAttr<'_, std::vec::Vec<syn::WherePredicate>>), ()>`: 176 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 176 bytes
print-type-size         field `.0`: 176 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::TypeBareFn`: 176 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.variadic`: 40 bytes
print-type-size     field `.unsafety`: 8 bytes
print-type-size     field `.abi`: 24 bytes
print-type-size     field `.fn_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `internals::attr::Attr<'_, internals::attr::Default>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size type: `internals::attr::Attr<'_, syn::ExprPath>`: 168 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size type: `internals::attr::Attr<'_, syn::Meta>`: 160 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size type: `std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 152 bytes
print-type-size type: `std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 152 bytes
print-type-size type: `std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 152 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>, std::vec::IntoIter<syn::NestedMeta>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>, std::vec::IntoIter<syn::NestedMeta>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>, std::vec::IntoIter<syn::NestedMeta>>`: 152 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size type: `std::option::Option<std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>>`: 152 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 152 bytes
print-type-size         field `.0`: 152 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::ExprMethodCall`: 152 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.method`: 32 bytes
print-type-size     field `.turbofish`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.receiver`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::Pat`: 144 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TupleStruct`: 136 bytes
print-type-size         field `.0`: 136 bytes
print-type-size     variant `Macro`: 128 bytes
print-type-size         field `.0`: 128 bytes
print-type-size     variant `Struct`: 120 bytes
print-type-size         field `.0`: 120 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Ident`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Or`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Slice`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Tuple`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Range`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Reference`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Type`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Box`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Verbatim`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Lit`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Rest`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Wild`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `__TestExhaustive`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::iter::Skip<syn::punctuated::IntoPairs<syn::PathSegment, syn::token::Colon2>>`: 136 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 128 bytes
print-type-size     field `.n`: 8 bytes
print-type-size type: `syn::PatTupleStruct`: 136 bytes, alignment: 8 bytes
print-type-size     field `.pat`: 64 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::ExprStruct`: 128 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.rest`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `syn::PatMacro`: 128 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::punctuated::IntoPairs<syn::PathSegment, syn::token::Colon2>`: 128 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `.last`: 96 bytes
print-type-size type: `bound::with_bound::FindTyParams<'_>`: 120 bytes, alignment: 8 bytes
print-type-size     field `.all_type_params`: 48 bytes
print-type-size     field `.relevant_type_params`: 48 bytes
print-type-size     field `.associated_type_usage`: 24 bytes
print-type-size type: `syn::ExprWhile`: 120 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.while_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatStruct`: 120 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     field `.dot2_token`: 12 bytes
print-type-size type: `internals::attr::Attr<'_, syn::Path>`: 112 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.value`: 48 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size type: `std::option::Option<syn::TypeParamBound>`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::ExprClosure`: 112 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.body`: 8 bytes
print-type-size     field `.movability`: 8 bytes
print-type-size     field `.asyncness`: 8 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.or1_token`: 4 bytes
print-type-size     field `.or2_token`: 4 bytes
print-type-size type: `syn::ExprLoop`: 112 bytes, alignment: 8 bytes
print-type-size     field `.body`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.loop_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TraitBound`: 112 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 48 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.paren_token`: 8 bytes
print-type-size     field `.modifier`: 8 bytes
print-type-size type: `syn::TypeParamBound`: 112 bytes, alignment: 8 bytes
print-type-size     variant `Trait`: 112 bytes
print-type-size         field `.0`: 112 bytes
print-type-size     variant `Lifetime`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}]`: 104 bytes, alignment: 8 bytes
print-type-size     end padding: 104 bytes
print-type-size type: `internals::attr::Default`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Path`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<(syn::NestedMeta, syn::token::Comma)>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.value`: 104 bytes
print-type-size type: `std::mem::MaybeUninit<(syn::NestedMeta, syn::token::Comma)>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 104 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 104 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::ExprPath>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, syn::punctuated::Pair<syn::PathSegment, syn::token::Colon2>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<(syn::NestedMeta, syn::token::Comma)>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<internals::attr::Default>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::ExprPath>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LifetimeDef>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<syn::PathSegment, syn::token::Colon2>>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::ExprPath, ()>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<syn::ExprPath, syn::Error>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::punctuated::Pair<syn::PathSegment, syn::token::Colon2>, usize>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 104 bytes
print-type-size         field `.0`: 104 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::str::pattern::StrSearcher<'_, '_>`: 104 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.needle`: 16 bytes
print-type-size     field `.searcher`: 72 bytes
print-type-size type: `syn::Attribute`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.style`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.pound_token`: 4 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size type: `syn::ExprBlock`: 104 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.label`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::LifetimeDef`: 104 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.colon_token`: 8 bytes
print-type-size type: `syn::Macro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.delimiter`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatPath`: 104 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::TypeMacro`: 104 bytes, alignment: 8 bytes
print-type-size     field `.mac`: 104 bytes
print-type-size type: `syn::punctuated::Pair<syn::PathSegment, syn::token::Colon2>`: 104 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 104 bytes
print-type-size         field `.0`: 96 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 104 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 96 bytes, alignment: 8 bytes
print-type-size type: `internals::attr::Attr<'_, std::collections::BTreeSet<syn::Lifetime>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::iter::Map<std::ops::Range<usize>, fn(usize) -> proc_macro2::Ident>, std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:651:51: 651:65]>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 64 bytes
print-type-size     field `.f`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::NestedMeta>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.value`: 96 bytes
print-type-size type: `std::mem::MaybeUninit<syn::NestedMeta>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 96 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 96 bytes
print-type-size type: `std::mem::MaybeUninit<syn::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 96 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 96 bytes
print-type-size type: `std::option::IntoIter<syn::NestedMeta>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::option::IntoIter<syn::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 96 bytes
print-type-size type: `std::option::Item<syn::NestedMeta>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 96 bytes
print-type-size type: `std::option::Item<syn::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 96 bytes
print-type-size type: `std::option::Option<std::option::IntoIter<syn::NestedMeta>>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Meta>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::NestedMeta>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::PathSegment>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::Meta, syn::Error>`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::thread::__LocalKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `syn::Meta`: 96 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `List`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `NameValue`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `Path`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size type: `syn::NestedMeta`: 96 bytes, alignment: 8 bytes
print-type-size     variant `Meta`: 96 bytes
print-type-size         field `.0`: 96 bytes
print-type-size     variant `Lit`: 40 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size type: `syn::PathSegment`: 96 bytes, alignment: 8 bytes
print-type-size     field `.arguments`: 64 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size type: `internals::attr::Attr<'_, std::string::String>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.value`: 24 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size type: `internals::attr::Attr<'_, std::vec::Vec<syn::WherePredicate>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.value`: 24 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size type: `internals::attr::VecAttr<'_, &syn::LitStr>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.values`: 24 bytes
print-type-size     field `.first_dup_tokens`: 40 bytes
print-type-size type: `internals::attr::VecAttr<'_, std::string::String>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.values`: 24 bytes
print-type-size     field `.first_dup_tokens`: 40 bytes
print-type-size type: `internals::attr::VecAttr<'_, std::vec::Vec<syn::WherePredicate>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.values`: 24 bytes
print-type-size     field `.first_dup_tokens`: 40 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<T>::replace::PutBackOnDrop<'_, proc_macro::bridge::client::BridgeStateL>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size     field `.cell`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.value`: 88 bytes
print-type-size type: `std::iter::FlatMap<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]>, std::vec::Vec<syn::WherePredicate>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::FlatMap<std::iter::FilterMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:74:21: 74:30]>, std::vec::Vec<syn::WherePredicate>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `std::iter::Fuse<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size type: `std::iter::Fuse<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size type: `std::iter::Fuse<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 88 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>, std::vec::IntoIter<syn::WherePredicate>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::iter::FilterMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:74:21: 74:30]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>, std::vec::IntoIter<syn::WherePredicate>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>, std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>, std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>, std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.frontiter`: 32 bytes
print-type-size     field `.backiter`: 32 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::option::Option<internals::attr::VecAttr<'_, std::string::String>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>>`: 88 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 88 bytes
print-type-size         field `.0`: 88 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sys::common::thread_local::lazy::LazyKeyInner<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 88 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 88 bytes
print-type-size type: `syn::ExprIf`: 88 bytes, alignment: 8 bytes
print-type-size     field `.then_branch`: 32 bytes
print-type-size     field `.else_branch`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.cond`: 8 bytes
print-type-size     field `.if_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Generics`: 88 bytes, alignment: 8 bytes
print-type-size     field `.params`: 32 bytes
print-type-size     field `.where_clause`: 40 bytes
print-type-size     field `.lt_token`: 8 bytes
print-type-size     field `.gt_token`: 8 bytes
print-type-size type: `syn::MetaList`: 88 bytes, alignment: 8 bytes
print-type-size     field `.nested`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::MetaNameValue`: 88 bytes, alignment: 8 bytes
print-type-size     field `.lit`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatIdent`: 88 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.subpat`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.by_ref`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size type: `internals::attr::Name`: 80 bytes, alignment: 8 bytes
print-type-size     field `.serialize`: 24 bytes
print-type-size     field `.deserialize`: 24 bytes
print-type-size     field `.deserialize_aliases`: 24 bytes
print-type-size     field `.serialize_renamed`: 1 bytes
print-type-size     field `.deserialize_renamed`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `proc_macro::bridge::client::BridgeState<'_>`: 80 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Connected`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `InUse`: 0 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.0`: 80 bytes
print-type-size type: `std::cell::Cell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::cell::UnsafeCell<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::ManuallyDrop<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     field `.value`: 80 bytes
print-type-size type: `std::mem::MaybeUninit<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 80 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 80 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::TypePath>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::BridgeState<'_>>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::TypePath>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<syn::TypePath, syn::Error>`: 80 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 80 bytes
print-type-size         field `.0`: 80 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::ExprBreak`: 80 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.break_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PredicateLifetime`: 80 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypePath`: 80 bytes, alignment: 8 bytes
print-type-size     field `.qself`: 32 bytes
print-type-size     field `.path`: 48 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 40 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 40 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 40 bytes
print-type-size type: `internals::attr::Attr<'_, ()>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `internals::attr::Attr<'_, internals::case::RenameRule>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.name`: 16 bytes
print-type-size     field `.cx`: 8 bytes
print-type-size     field `.tokens`: 40 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `internals::attr::BoolAttr<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `proc_macro::bridge::client::Bridge<'_>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.cached_buffer`: 40 bytes
print-type-size     field `.globals`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::collections::btree_map::Entry<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::btree_map::IntoIter<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::IntoIter<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Iter<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.range`: 64 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::btree_map::Keys<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 72 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size     field `.key`: 40 bytes
print-type-size type: `std::collections::btree_set::IntoIter<std::string::String>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::collections::btree_set::Iter<'_, syn::Lifetime>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size type: `std::iter::Cloned<std::collections::btree_set::Iter<'_, syn::Lifetime>>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.it`: 72 bytes
print-type-size type: `std::iter::Map<std::collections::btree_set::Iter<'_, syn::Lifetime>, for<'a> fn(&'a syn::Lifetime) -> syn::Lifetime {<syn::Lifetime as std::clone::Clone>::clone}>`: 72 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 72 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>>`: 72 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 72 bytes
print-type-size         field `.0`: 72 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::StrSearcherImpl`: 72 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `TwoWay`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Empty`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::Constraint`: 72 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAsync`: 72 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.capture`: 8 bytes
print-type-size     field `.async_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCall`: 72 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.func`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprContinue`: 72 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.label`: 40 bytes
print-type-size     field `.continue_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprField`: 72 bytes, alignment: 8 bytes
print-type-size     field `.member`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.front`: 32 bytes
print-type-size     field `.back`: 32 bytes
print-type-size type: `proc_macro::bridge::BridgeConfig<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.input`: 40 bytes
print-type-size     field `.dispatch`: 16 bytes
print-type-size     field `.force_show_panics`: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Map<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:279:14: 279:18]>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:284:14: 284:26]>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Zip<std::iter::Map<std::ops::Range<usize>, fn(usize) -> proc_macro2::Ident>, std::slice::Iter<'_, internals::ast::Field<'_>>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size     field `.a`: 24 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenStream, std::string::String)>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::str::pattern::TwoWaySearcher`: 64 bytes, alignment: 8 bytes
print-type-size     field `.crit_pos`: 8 bytes
print-type-size     field `.crit_pos_back`: 8 bytes
print-type-size     field `.period`: 8 bytes
print-type-size     field `.byteset`: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.memory`: 8 bytes
print-type-size     field `.memory_back`: 8 bytes
print-type-size type: `syn::Data`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `Union`: 56 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Enum`: 48 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 40 bytes, alignment: 8 bytes
print-type-size type: `syn::DataStruct`: 64 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 48 bytes
print-type-size     field `.semi_token`: 8 bytes
print-type-size     field `.struct_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprArray`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprMatch`: 64 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.arms`: 24 bytes
print-type-size     field `.match_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `syn::ExprTryBlock`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.try_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnsafe`: 64 bytes, alignment: 8 bytes
print-type-size     field `.block`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.unsafe_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatOr`: 64 bytes, alignment: 8 bytes
print-type-size     field `.cases`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.leading_vert`: 8 bytes
print-type-size type: `syn::PatSlice`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatTuple`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PathArguments`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `AngleBracketed`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Parenthesized`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeReference`: 64 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.lifetime`: 40 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size type: `alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.left`: 16 bytes
print-type-size     field `.right`: 16 bytes
print-type-size     field `.kv`: 24 bytes
print-type-size type: `internals::attr::TagType`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Adjacent`: 48 bytes
print-type-size         field `.tag`: 24 bytes
print-type-size         field `.content`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.tag`: 24 bytes
print-type-size     variant `External`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro::bridge::client::ProcMacro`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `CustomDerive`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.trait_name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.attributes`: 16 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Attr`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size     variant `Bang`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.name`: 16 bytes, alignment: 8 bytes
print-type-size         field `.client`: 16 bytes
print-type-size type: `ser::TupleVariant`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ExternallyTagged`: 52 bytes
print-type-size         field `.variant_index`: 4 bytes
print-type-size         field `.type_name`: 24 bytes
print-type-size         field `.variant_name`: 24 bytes
print-type-size     variant `Untagged`: 0 bytes
print-type-size type: `std::collections::btree_map::Entry<'_, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Vacant`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `Occupied`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::collections::btree_map::VacantEntry<'_, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.key`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:279:14: 279:18]>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.b`: 32 bytes
print-type-size     field `.a`: 24 bytes
print-type-size type: `std::iter::FilterMap<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1411:17: 1411:32]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1412:21: 1412:35]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.f`: 32 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:270:17: 270:29]>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:276:14: 276:26]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::SplitResult<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>>`: 56 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 56 bytes
print-type-size         field `.0`: 56 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<std::vec::Vec<syn::WherePredicate>>, std::option::Option<std::vec::Vec<syn::WherePredicate>>), ()>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `syn::AngleBracketedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     field `.colon2_token`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAssignOp`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprBinary`: 56 bytes, alignment: 8 bytes
print-type-size     field `.op`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size type: `syn::ExprLit`: 56 bytes, alignment: 8 bytes
print-type-size     field `.lit`: 32 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ExprRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.from`: 8 bytes
print-type-size     field `.to`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::ParenthesizedGenericArguments`: 56 bytes, alignment: 8 bytes
print-type-size     field `.inputs`: 32 bytes
print-type-size     field `.output`: 16 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatRange`: 56 bytes, alignment: 8 bytes
print-type-size     field `.limits`: 16 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.lo`: 8 bytes
print-type-size     field `.hi`: 8 bytes
print-type-size type: `syn::buffer::Entry`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 52 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 16 bytes, alignment: 8 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `End`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `syn::error::ErrorMessage`: 56 bytes, alignment: 8 bytes
print-type-size     field `.start_span`: 16 bytes
print-type-size     field `.end_span`: 16 bytes
print-type-size     field `.message`: 24 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::fold::enumerate<&internals::ast::Variant<'_>, (), [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Variant<'_>), proc_macro2::TokenStream, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:412:14: 412:40], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:412:14: 412:40]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 48 bytes, alignment: 8 bytes
print-type-size     end padding: 48 bytes
print-type-size type: `core::str::iter::MatchIndicesInternal<'_, char>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `fragment::Expr`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `fragment::Fragment`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Expr`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Block`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `fragment::Match`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `fragment::Stmts`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size type: `hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.map`: 48 bytes
print-type-size type: `quote::__private::RepInterp<fragment::Expr>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `ser::StructVariant<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `InternallyTagged`: 44 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.variant_name`: 24 bytes, alignment: 8 bytes
print-type-size         field `.tag`: 16 bytes
print-type-size     variant `ExternallyTagged`: 28 bytes
print-type-size         field `.variant_index`: 4 bytes
print-type-size         field `.variant_name`: 24 bytes
print-type-size     variant `Untagged`: 0 bytes
print-type-size type: `std::borrow::Cow<'_, syn::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Owned`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Borrowed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::collections::HashSet<proc_macro2::Ident>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::FlatMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 48 bytes
print-type-size type: `std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 8 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:192:14: 192:26]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1048:17: 1048:29]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1049:14: 1049:26]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:813:17: 813:29]>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:819:14: 819:26]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 48 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:270:17: 270:29]>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.peeked`: 24 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:813:17: 813:29]>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size     field `.peeked`: 24 bytes
print-type-size type: `std::iter::adapters::flatten::FlattenCompat<std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>, std::slice::Iter<'_, internals::ast::Field<'_>>>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.frontiter`: 16 bytes
print-type-size     field `.backiter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<(syn::Lifetime, syn::token::Add)>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 48 bytes
print-type-size type: `std::mem::MaybeUninit<(syn::Lifetime, syn::token::Add)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 48 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 48 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::WhereClause>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::Lifetime, syn::token::Add)>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fragment::Expr>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fragment::Fragment>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fragment::Stmts>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::BoundLifetimes>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Label>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::MethodTurbofish>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Path>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<syn::Path, ()>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<syn::Path, syn::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::WhereClause, syn::Error>`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::str::MatchIndices<'_, char>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.0`: 48 bytes
print-type-size type: `std::str::pattern::CharSearcher<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.haystack`: 16 bytes
print-type-size     field `.finger`: 8 bytes
print-type-size     field `.finger_back`: 8 bytes
print-type-size     field `.utf8_size`: 8 bytes
print-type-size     field `.utf8_encoded`: 4 bytes
print-type-size     field `.needle`: 4 bytes
print-type-size type: `syn::BoundLifetimes`: 48 bytes, alignment: 8 bytes
print-type-size     field `.lifetimes`: 32 bytes
print-type-size     field `.for_token`: 4 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::DataUnion`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 40 bytes
print-type-size     field `.union_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprAssign`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.left`: 8 bytes
print-type-size     field `.right`: 8 bytes
print-type-size     field `.eq_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprCast`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprIndex`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.raw`: 0 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprRepeat`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     field `.semi_token`: 4 bytes
print-type-size type: `syn::ExprType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Fields`: 48 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Named`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unnamed`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `syn::Label`: 48 bytes, alignment: 8 bytes
print-type-size     field `.name`: 40 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::MethodTurbofish`: 48 bytes, alignment: 8 bytes
print-type-size     field `.args`: 32 bytes
print-type-size     field `.colon2_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::PatReference`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.and_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatType`: 48 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.colon_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Path`: 48 bytes, alignment: 8 bytes
print-type-size     field `.segments`: 32 bytes
print-type-size     field `.leading_colon`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::lit::LitRepr`: 48 bytes, alignment: 8 bytes
print-type-size     field `.token`: 32 bytes
print-type-size     field `.suffix`: 16 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Variant<'_>), proc_macro2::TokenStream, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:412:14: 412:40], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:412:14: 412:40]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 40 bytes, alignment: 8 bytes
print-type-size     end padding: 40 bytes
print-type-size type: `hashbrown::raw::RawIter<(proc_macro2::Ident, ())>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `proc_macro2::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro2::TokenTree`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Group`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ident`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Literal`: 36 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Punct`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::TokenStream`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `proc_macro2::imp::TokenTreeIter`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Compiler`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `proc_macro2::token_stream::IntoIter`: 40 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `proc_macro::bridge::buffer::Buffer`: 40 bytes, alignment: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.capacity`: 8 bytes
print-type-size     field `.reserve`: 8 bytes
print-type-size     field `.drop`: 8 bytes
print-type-size type: `quote::__private::RepInterp<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:412:14: 412:40]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1230:17: 1230:32]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1231:14: 1231:28]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1314:17: 1314:32]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1315:14: 1315:28]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1367:17: 1367:32]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1368:14: 1368:28]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 16 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1095:17: 1095:25]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1096:14: 1096:21]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:334:17: 334:25]>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:340:14: 340:21]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:373:17: 373:25]>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:382:18: 382:25]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}]>>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::ManuallyDrop<syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 40 bytes
print-type-size type: `std::mem::MaybeUninit<syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 40 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 40 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::TokenStream, std::convert::Infallible>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<proc_macro2::TokenStream, std::convert::Infallible>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, proc_macro2::LexError>, proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, internals::attr::parse_lit_into_lifetimes::BorrowedLifetimes>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, std::option::Option<proc_macro2::TokenTree>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::parse::ParseBuffer<'_>>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::option::IntoIter<syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::option::Item<syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 40 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, &internals::ast::Field<'_>)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::Ident, syn::token::Colon)>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(proc_macro2::TokenStream, ())>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenStream>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::TokenTree>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Lifetime>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Variadic>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::WhereClause>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}]>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.0`: 40 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}]>, ()>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 40 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.p`: 16 bytes
print-type-size         field `.f`: 40 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<internals::attr::parse_lit_into_lifetimes::BorrowedLifetimes, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, proc_macro2::LexError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, std::vec::Vec<syn::Error>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenStream, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro2::TokenTree, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<proc_macro::bridge::buffer::Buffer, std::thread::AccessError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro2::TokenTree>, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<syn::Lifetime, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::parse::ParseBuffer<'_>, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add>, syn::Error>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `syn::DataEnum`: 40 bytes, alignment: 8 bytes
print-type-size     field `.variants`: 32 bytes
print-type-size     field `.enum_token`: 4 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size type: `syn::ExprAwait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.base`: 8 bytes
print-type-size     field `.dot_token`: 4 bytes
print-type-size     field `.await_token`: 4 bytes
print-type-size type: `syn::ExprBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprGroup`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprParen`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprReturn`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.return_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprTry`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.question_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::ExprUnary`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `syn::ExprYield`: 40 bytes, alignment: 8 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.yield_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsNamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.named`: 32 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::FieldsUnnamed`: 40 bytes, alignment: 8 bytes
print-type-size     field `.unnamed`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Lifetime`: 40 bytes, alignment: 8 bytes
print-type-size     field `.ident`: 32 bytes
print-type-size     field `.apostrophe`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::PatBox`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.pat`: 8 bytes
print-type-size     field `.box_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeImplTrait`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.impl_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeTraitObject`: 40 bytes, alignment: 8 bytes
print-type-size     field `.bounds`: 32 bytes
print-type-size     field `.dyn_token`: 8 bytes
print-type-size type: `syn::TypeTuple`: 40 bytes, alignment: 8 bytes
print-type-size     field `.elems`: 32 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Variadic`: 40 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.dots`: 12 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::WhereClause`: 40 bytes, alignment: 8 bytes
print-type-size     field `.predicates`: 32 bytes
print-type-size     field `.where_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1412:21: 1412:35]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:651:51: 651:65]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1648:35: 1648:38]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::fold::enumerate<&internals::ast::Field<'_>, (), [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field<'_>), (&internals::ast::Field<'_>, proc_macro2::Ident), (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2443:14: 2443:26], [closure@std::iter::Iterator::for_each::call<(&internals::ast::Field<'_>, proc_macro2::Ident), [closure@std::vec::Vec<(&internals::ast::Field<'_>, proc_macro2::Ident)>::extend_trusted<std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2443:14: 2443:26]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(&std::string::String, &proc_macro2::Ident), proc_macro2::TokenStream, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2106:14: 2106:26], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2106:14: 2106:26]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), proc_macro2::TokenStream, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2110:14: 2110:29], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2110:14: 2110:29]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&std::string::String, (&std::string::String, &proc_macro2::Ident), (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2095:47: 2095:54], [closure@std::iter::Iterator::for_each::call<(&std::string::String, &proc_macro2::Ident), [closure@std::vec::Vec<(&std::string::String, &proc_macro2::Ident)>::extend_trusted<std::iter::Map<std::slice::Iter<'_, std::string::String>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2095:47: 2095:54]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 32 bytes, alignment: 8 bytes
print-type-size     end padding: 32 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Edge`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Root`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Internal`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::Leaf>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `alloc::collections::btree::search::SearchResult<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal, alloc::collections::btree::node::marker::LeafOrInternal>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Found`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `GoDown`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `de::BorrowedLifetimes`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Borrowed`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Static`: 0 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(proc_macro2::Ident, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(proc_macro2::Ident, ())>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `hashbrown::raw::RawTableInner<std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size type: `internals::ast::Data<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Enum`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Struct`: 31 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 24 bytes, alignment: 8 bytes
print-type-size type: `internals::attr::parse_lit_into_lifetimes::BorrowedLifetimes`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `internals::ctxt::Ctxt`: 32 bytes, alignment: 8 bytes
print-type-size     field `.errors`: 32 bytes
print-type-size type: `proc_macro2::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `proc_macro2::fallback::Group`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.stream`: 24 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::fallback::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.sym`: 24 bytes
print-type-size     field `.raw`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `proc_macro2::imp::DeferredTokenStream`: 32 bytes, alignment: 8 bytes
print-type-size     field `.extra`: 24 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::imp::Group`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size type: `proc_macro2::imp::Ident`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Fallback`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Compiler`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size type: `proc_macro2::imp::Literal`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Fallback`: 28 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Compiler`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::PanicMessage`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `String`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `StaticStr`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `proc_macro::bridge::client::HandleCounters`: 32 bytes, alignment: 8 bytes
print-type-size     field `.FreeFunctions`: 8 bytes
print-type-size     field `.TokenStream`: 8 bytes
print-type-size     field `.SourceFile`: 8 bytes
print-type-size     field `.Span`: 8 bytes
print-type-size type: `proc_macro::token_stream::IntoIter`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `quote::__private::RepInterp<proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `quote::__private::RepInterp<syn::Member>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `std::cell::RefCell<std::option::Option<std::vec::Vec<syn::Error>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<'_, std::string::String, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size type: `std::collections::btree_map::OccupiedEntry<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 24 bytes
print-type-size     field `.dormant_map`: 8 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.it`: 32 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:260:29: 260:36]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1655:17: 1655:26]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1656:14: 1656:23]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:890:17: 890:25]>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:896:14: 896:21]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:175:37: 175:46]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>, [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size type: `std::iter::Map<syn::punctuated::Iter<'_, syn::Variant>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:145:14: 145:23]>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 16 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:334:17: 334:25]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:373:17: 373:25]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:890:17: 890:25]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:964:17: 964:25]>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.peeked`: 16 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.step`: 8 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, std::string::String>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Take<std::iter::Enumerate<std::slice::Iter<'_, syn::WherePredicate>>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.n`: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::Ident, std::convert::Infallible>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::ops::ControlFlow<proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<proc_macro2::Ident, std::convert::Infallible>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, std::option::Option<std::vec::Vec<syn::WherePredicate>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Ident>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::collections::BTreeSet<syn::Lifetime>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::IntoIter<syn::NestedMeta>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::IntoIter<syn::WherePredicate>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Member>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::QSelf>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::IntoIter<syn::GenericParam>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::result::Result<(), proc_macro::bridge::PanicMessage>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<&syn::LitStr>, std::vec::Vec<&syn::LitStr>), ()>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner<std::alloc::Global>, hashbrown::TryReserveError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::collections::BTreeSet<syn::Lifetime>, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::option::Option<std::vec::Vec<syn::WherePredicate>>, ()>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::vec::Vec<syn::WherePredicate>, syn::Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::thread::__LocalKeyInner<std::cell::Cell<(u64, u64)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::vec::IntoIter<&syn::LitStr>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<&syn::TypePath>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::PathSegment, syn::token::Colon2)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro2::TokenTree>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<std::string::String>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::GenericParam>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::NestedMeta>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::PathSegment>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::TypeParamBound>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `std::vec::IntoIter<syn::WherePredicate>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.buf`: 8 bytes
print-type-size type: `syn::Block`: 32 bytes, alignment: 8 bytes
print-type-size     field `.stmts`: 24 bytes
print-type-size     field `.brace_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::Lit`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Verbatim`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Str`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `ByteStr`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Byte`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Int`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Bool`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 4 bytes
print-type-size type: `syn::Member`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Named`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Unnamed`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::PatLit`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.expr`: 8 bytes
print-type-size type: `syn::PatRest`: 32 bytes, alignment: 8 bytes
print-type-size     field `.dot2_token`: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size type: `syn::PatWild`: 32 bytes, alignment: 8 bytes
print-type-size     field `.attrs`: 24 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::QSelf`: 32 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.ty`: 8 bytes
print-type-size     field `.as_token`: 8 bytes
print-type-size     field `.lt_token`: 4 bytes
print-type-size     field `.gt_token`: 4 bytes
print-type-size type: `syn::TypePtr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.const_token`: 8 bytes
print-type-size     field `.mutability`: 8 bytes
print-type-size     field `.star_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::parse::ParseBuffer<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.cell`: 16 bytes
print-type-size     field `.unexpected`: 8 bytes
print-type-size     field `.scope`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::GenericParam>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::Lifetime>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::NestedMeta>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::IntoIter<syn::WherePredicate>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::BareFnArg, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Expr, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Field, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldPat, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::FieldValue, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericMethodArgument, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::LifetimeDef, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Pat, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Pat, syn::token::Or>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::PathSegment, syn::token::Colon2>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Type, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::TypeParamBound, syn::token::Add>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::Variant, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.last`: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:192:14: 192:26]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1611:35: 1611:38]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1622:35: 1622:38]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/check.rs:259:29: 259:31]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1049:14: 1049:26]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1096:14: 1096:21]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Variant<'_>, (), std::ops::ControlFlow<proc_macro2::TokenStream>, [closure@std::iter::adapters::filter::filter_try_fold<'_, (usize, &internals::ast::Variant<'_>), (), std::ops::ControlFlow<proc_macro2::TokenStream>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1411:17: 1411:32], [closure@std::iter::Iterator::find_map::check<(usize, &internals::ast::Variant<'_>), proc_macro2::TokenStream, &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1412:21: 1412:35]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>::set<(), [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&&std::string::String, [closure@std::vec::Vec<&&std::string::String>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2098:55: 2098:66]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&proc_macro2::Ident, [closure@std::vec::Vec<&proc_macro2::Ident>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1911:52: 1911:67]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&syn::Member, [closure@std::vec::Vec<&syn::Member>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:98:37: 98:44]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&syn::Member, [closure@std::vec::Vec<&syn::Member>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:976:46: 976:49]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<&syn::Type, [closure@std::vec::Vec<&syn::Type>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1167:55: 1167:62]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<(&internals::ast::Field<'_>, proc_macro2::Ident), [closure@std::vec::Vec<(&internals::ast::Field<'_>, proc_macro2::Ident)>::extend_trusted<std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2443:14: 2443:26]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<(&std::string::String, &proc_macro2::Ident), [closure@std::vec::Vec<(&std::string::String, &proc_macro2::Ident)>::extend_trusted<std::iter::Map<std::slice::Iter<'_, std::string::String>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2095:47: 2095:54]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), [closure@std::vec::Vec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2024:14: 2024:23]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::Ident, [closure@std::vec::Vec<proc_macro2::Ident>::extend_trusted<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:178:18: 178:21]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::Literal, [closure@std::vec::Vec<proc_macro2::Literal>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2101:14: 2101:25]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:412:14: 412:40]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2106:14: 2106:26]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2110:14: 2110:29]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1171:14: 1171:21]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::GenericParam, [closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::GenericParam, [closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::option::IntoIter<syn::GenericParam>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@std::vec::Vec<syn::Lifetime>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>, [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@std::vec::Vec<syn::Lifetime>::extend_trusted<std::option::IntoIter<syn::Lifetime>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Member, [closure@std::vec::Vec<syn::Member>::extend_trusted<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:705:18: 705:21]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Member, [closure@std::vec::Vec<syn::Member>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:707:52: 707:55]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::NestedMeta, [closure@std::vec::Vec<syn::NestedMeta>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::NestedMeta, [closure@std::vec::Vec<syn::NestedMeta>::extend_trusted<std::option::IntoIter<syn::NestedMeta>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::WherePredicate, [closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::WherePredicate, [closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::option::IntoIter<syn::WherePredicate>>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(&std::string::String, &proc_macro2::Ident), &&std::string::String, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2098:55: 2098:66], [closure@std::iter::Iterator::for_each::call<&&std::string::String, [closure@std::vec::Vec<&&std::string::String>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2098:55: 2098:66]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(&std::string::String, &proc_macro2::Ident), proc_macro2::Literal, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2101:14: 2101:25], [closure@std::iter::Iterator::for_each::call<proc_macro2::Literal, [closure@std::vec::Vec<proc_macro2::Literal>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2101:14: 2101:25]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), &proc_macro2::Ident, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1911:52: 1911:67], [closure@std::iter::Iterator::for_each::call<&proc_macro2::Ident, [closure@std::vec::Vec<&proc_macro2::Ident>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1911:52: 1911:67]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, &syn::Member, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:98:37: 98:44], [closure@std::iter::Iterator::for_each::call<&syn::Member, [closure@std::vec::Vec<&syn::Member>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:98:37: 98:44]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, &syn::Member, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:976:46: 976:49], [closure@std::iter::Iterator::for_each::call<&syn::Member, [closure@std::vec::Vec<&syn::Member>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:976:46: 976:49]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, &syn::Type, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1167:55: 1167:62], [closure@std::iter::Iterator::for_each::call<&syn::Type, [closure@std::vec::Vec<&syn::Type>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1167:55: 1167:62]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1171:14: 1171:21], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenStream, [closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1171:14: 1171:21]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, syn::Member, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:707:52: 707:55], [closure@std::iter::Iterator::for_each::call<syn::Member, [closure@std::vec::Vec<syn::Member>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:707:52: 707:55]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Variant<'_>, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2024:14: 2024:23], [closure@std::iter::Iterator::for_each::call<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>), [closure@std::vec::Vec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2024:14: 2024:23]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(syn::GenericParam, syn::token::Comma), syn::GenericParam, (), [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}], [closure@std::iter::Iterator::for_each::call<syn::GenericParam, [closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(syn::Lifetime, syn::token::Add), syn::Lifetime, (), [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}], [closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@std::vec::Vec<syn::Lifetime>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>, [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(syn::NestedMeta, syn::token::Comma), syn::NestedMeta, (), [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}], [closure@std::iter::Iterator::for_each::call<syn::NestedMeta, [closure@std::vec::Vec<syn::NestedMeta>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(syn::WherePredicate, syn::token::Comma), syn::WherePredicate, (), [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}], [closure@std::iter::Iterator::for_each::call<syn::WherePredicate, [closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field<'_>), (&internals::ast::Field<'_>, proc_macro2::Ident), (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2443:14: 2443:26], [closure@std::iter::Iterator::for_each::call<(&internals::ast::Field<'_>, proc_macro2::Ident), [closure@std::vec::Vec<(&internals::ast::Field<'_>, proc_macro2::Ident)>::extend_trusted<std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2443:14: 2443:26]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<usize, proc_macro2::Ident, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:178:18: 178:21], [closure@std::iter::Iterator::for_each::call<proc_macro2::Ident, [closure@std::vec::Vec<proc_macro2::Ident>::extend_trusted<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:178:18: 178:21]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<usize, syn::Member, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:705:18: 705:21], [closure@std::iter::Iterator::for_each::call<syn::Member, [closure@std::vec::Vec<syn::Member>::extend_trusted<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:705:18: 705:21]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_try_fold<'_, &internals::ast::Variant<'_>, std::slice::Iter<'_, internals::ast::Field<'_>>, usize, std::ops::ControlFlow<(), usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60], [closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_try_fold::flatten<std::slice::Iter<'_, internals::ast::Field<'_>>, usize, std::ops::ControlFlow<(), usize>, for<'a> fn(usize, &'a mut std::slice::Iter<'_, internals::ast::Field<'_>>) -> std::ops::ControlFlow<(), usize> {<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::advance_by::advance::<std::slice::Iter<'_, internals::ast::Field<'_>>>}>::{closure#0}]>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<&&std::string::String>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2098:55: 2098:66]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<&proc_macro2::Ident>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1911:52: 1911:67]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<&syn::Member>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:98:37: 98:44]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<&syn::Member>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:976:46: 976:49]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<&syn::Type>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1167:55: 1167:62]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<(&internals::ast::Field<'_>, proc_macro2::Ident)>::extend_trusted<std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2443:14: 2443:26]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<(&std::string::String, &proc_macro2::Ident)>::extend_trusted<std::iter::Map<std::slice::Iter<'_, std::string::String>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2095:47: 2095:54]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2024:14: 2024:23]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<proc_macro2::Ident>::extend_trusted<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:178:18: 178:21]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<proc_macro2::Literal>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2101:14: 2101:25]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:412:14: 412:40]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2106:14: 2106:26]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2110:14: 2110:29]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<proc_macro2::TokenStream>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1171:14: 1171:21]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::GenericParam, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::GenericParam>::extend_trusted<std::option::IntoIter<syn::GenericParam>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::Lifetime>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::Lifetime, syn::token::Add)>, [closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::Lifetime>::extend_trusted<std::option::IntoIter<syn::Lifetime>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::Member>::extend_trusted<std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:705:18: 705:21]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::Member>::extend_trusted<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:707:52: 707:55]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::NestedMeta>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::NestedMeta, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::NestedMeta>::extend_trusted<std::option::IntoIter<syn::NestedMeta>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::iter::Map<std::vec::IntoIter<(syn::WherePredicate, syn::token::Comma)>, [closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `[closure@std::vec::Vec<syn::WherePredicate>::extend_trusted<std::option::IntoIter<syn::WherePredicate>>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Leaf`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Internal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.node`: 16 bytes
print-type-size     field `.idx`: 8 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::rehash_in_place::{closure#0}]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `proc_macro2::fallback::Literal`: 24 bytes, alignment: 8 bytes
print-type-size     field `.span`: 0 bytes
print-type-size     field `.repr`: 24 bytes
print-type-size type: `proc_macro2::fallback::TokenStream`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `proc_macro::ConcatTreesHelper`: 24 bytes, alignment: 8 bytes
print-type-size     field `.trees`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::vec::Vec<syn::Error>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.root`: 16 bytes
print-type-size     field `.length`: 8 bytes
print-type-size type: `std::collections::BTreeSet<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::collections::BTreeSet<syn::Lifetime>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.map`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, (&str, internals::case::RenameRule)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, syn::Lifetime>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Enumerate<syn::punctuated::Iter<'_, syn::Field>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2383:17: 2383:30]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2416:17: 2416:30]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1048:17: 1048:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:270:17: 270:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:813:17: 813:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1178:17: 1178:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1230:17: 1230:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1314:17: 1314:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1367:17: 1367:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1411:17: 1411:32]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:267:47: 267:54]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.predicate`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:74:21: 74:30]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::FilterMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:133:21: 133:30]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::iter::FilterMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:74:21: 74:30]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<'_, syn::GenericParam>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:348:52: 348:63]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2443:14: 2443:26]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2383:17: 2383:30]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2384:14: 2384:26]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2416:17: 2416:30]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2417:14: 2417:26]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Variant<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1178:17: 1178:32]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1182:14: 1182:28]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:279:14: 279:18]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2472:17: 2472:31]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2473:14: 2473:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2548:17: 2548:31]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2549:14: 2549:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::iter::FilterMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:74:21: 74:30]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, fn(usize) -> proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2598:42: 2598:57]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2106:14: 2106:26]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2110:14: 2110:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:372:36: 372:43]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, std::string::String>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2095:47: 2095:54]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.f`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<&syn::LitStr>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<&syn::TypePath>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::GenericParam, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::Lifetime, syn::token::Add)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::NestedMeta, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<std::string::String>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::GenericParam>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::Lifetime>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::NestedMeta>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::PathSegment>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<std::vec::Vec<syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::vec::Vec<syn::Error>>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>, syn::token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::string::String, alloc::collections::btree::set_val::SetValZST)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &str)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<'_, syn::GenericParam>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:348:52: 348:63]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:279:14: 279:18]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::iter::FilterMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:74:21: 74:30]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<(usize, &internals::ast::Field<'_>)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<syn::NestedMeta>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::vec::Vec<syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::Abi>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::punctuated::Pair<&syn::PathSegment, &syn::token::Colon2>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<(), std::vec::Vec<syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(std::option::Option<&syn::LitStr>, std::option::Option<&syn::LitStr>), ()>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::collections::hash_map::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::vec::Vec<syn::Error>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::vec::Vec<syn::WherePredicate>, ()>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<syn::token::Add, syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::str::CharIndices<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.front_offset`: 8 bytes
print-type-size type: `std::str::pattern::EmptyNeedle`: 24 bytes, alignment: 8 bytes
print-type-size     field `.position`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.is_match_fw`: 1 bytes
print-type-size     field `.is_match_bw`: 1 bytes
print-type-size     field `.is_finished`: 1 bytes
print-type-size     end padding: 5 bytes
print-type-size type: `std::str::pattern::SearchStep`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Match`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Reject`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Done`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::common::thread_local::lazy::LazyKeyInner<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<&&std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&syn::LitStr>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&syn::Member>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&syn::Type>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<&syn::TypePath>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(&internals::ast::Field<'_>, proc_macro2::Ident)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(&std::string::String, &proc_macro2::Ident)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::BareFnArg, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Expr, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Field, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldPat, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::FieldValue, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericMethodArgument, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::GenericParam, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Lifetime, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::LifetimeDef, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::NestedMeta, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Pat, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Pat, syn::token::Or)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::PathSegment, syn::token::Colon2)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Type, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::TypeParamBound, syn::token::Add)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::Variant, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(syn::WherePredicate, syn::token::Comma)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<internals::ast::Field<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<internals::ast::Variant<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::Ident>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::Literal>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenStream>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro2::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::TokenTree>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<std::vec::Vec<syn::WherePredicate>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Arm>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Attribute>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Error>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::GenericParam>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Lifetime>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Member>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::NestedMeta>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::PathSegment>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::Stmt>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::TypeParamBound>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::WherePredicate>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<syn::error::ErrorMessage>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Error`: 24 bytes, alignment: 8 bytes
print-type-size     field `.messages`: 24 bytes
print-type-size type: `syn::VisRestricted`: 24 bytes, alignment: 8 bytes
print-type-size     field `.path`: 8 bytes
print-type-size     field `.in_token`: 8 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size type: `syn::Visibility`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Restricted`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Public`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Crate`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Inherited`: 0 bytes
print-type-size type: `syn::punctuated::Pairs<'_, syn::PathSegment, syn::token::Colon2>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::NestedMeta, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<'_, syn::BareFnArg, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<'_, syn::Expr, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<'_, syn::GenericArgument, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<'_, syn::Type, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<'_, syn::TypeParamBound, syn::token::Add>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<'_, syn::Variant, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `syn::punctuated::PrivateIterMut<'_, syn::WherePredicate, syn::token::Comma>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.last`: 8 bytes
print-type-size type: `proc_macro::Group`: 20 bytes, alignment: 4 bytes
print-type-size     field `.0`: 20 bytes
print-type-size type: `proc_macro::TokenTree`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Group<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span>`: 20 bytes, alignment: 4 bytes
print-type-size     field `.stream`: 4 bytes
print-type-size     field `.span`: 12 bytes
print-type-size     field `.delimiter`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 20 bytes, alignment: 4 bytes
print-type-size     variant `Group`: 20 bytes
print-type-size         field `.0`: 20 bytes
print-type-size     variant `Literal`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ident`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `Punct`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, std::string::String, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `<T as std::slice::hack::ConvertVec>::to_vec::DropGuard<'_, syn::WherePredicate, std::alloc::Global>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.num_init`: 8 bytes
print-type-size     field `.vec`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:260:29: 260:36]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1231:14: 1231:28]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1315:14: 1315:28]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1368:14: 1368:28]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1656:14: 1656:23]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1999:31: 1999:38]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:145:14: 145:23]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1642:18: 1642:23]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:175:37: 175:46]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:412:14: 412:40]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::fold::enumerate<&internals::ast::Field<'_>, proc_macro2::TokenStream, [closure@std::iter::adapters::filter::filter_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:270:17: 270:29], [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:276:14: 276:26], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:287:26: 287:37]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Field<'_>, (), std::ops::ControlFlow<(usize, &internals::ast::Field<'_>)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2383:17: 2383:30]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Field<'_>, (), std::ops::ControlFlow<(usize, &internals::ast::Field<'_>)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2416:17: 2416:30]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Field<'_>, (), std::ops::ControlFlow<(usize, &internals::ast::Field<'_>)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1048:17: 1048:29]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Field<'_>, (), std::ops::ControlFlow<(usize, &internals::ast::Field<'_>)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:270:17: 270:29]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Field<'_>, (), std::ops::ControlFlow<(usize, &internals::ast::Field<'_>)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:813:17: 813:29]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Variant<'_>, (), std::ops::ControlFlow<(usize, &internals::ast::Variant<'_>)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1178:17: 1178:32]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Variant<'_>, (), std::ops::ControlFlow<(usize, &internals::ast::Variant<'_>)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1230:17: 1230:32]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Variant<'_>, (), std::ops::ControlFlow<(usize, &internals::ast::Variant<'_>)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1314:17: 1314:32]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Variant<'_>, (), std::ops::ControlFlow<(usize, &internals::ast::Variant<'_>)>, [closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1367:17: 1367:32]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::try_fold::enumerate<'_, &internals::ast::Variant<'_>, usize, std::ops::ControlFlow<usize, usize>, [closure@std::iter::adapters::filter::filter_try_fold<'_, (usize, &internals::ast::Variant<'_>), usize, std::ops::ControlFlow<usize, usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1178:17: 1178:32], [closure@std::iter::Iterator::position::check<(usize, &internals::ast::Variant<'_>), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1191:52: 1191:66]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::ascend::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::find<[closure@hashbrown::map::equivalent_key<proc_macro2::Ident, proc_macro2::Ident, ()>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::is_in_same_group::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::rehash_in_place::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_try_fold<'_, (usize, &internals::ast::Variant<'_>), (), std::ops::ControlFlow<proc_macro2::TokenStream>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1411:17: 1411:32], [closure@std::iter::Iterator::find_map::check<(usize, &internals::ast::Variant<'_>), proc_macro2::TokenStream, &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1412:21: 1412:35]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::flatten::FlattenCompat<I, U>::iter_try_fold::flatten<std::slice::Iter<'_, internals::ast::Field<'_>>, usize, std::ops::ControlFlow<(), usize>, for<'a> fn(usize, &'a mut std::slice::Iter<'_, internals::ast::Field<'_>>) -> std::ops::ControlFlow<(), usize> {<std::iter::adapters::flatten::FlattenCompat<I, U> as std::iter::Iterator>::advance_by::advance::<std::slice::Iter<'_, internals::ast::Field<'_>>>}>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21], [closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro2::TokenTree, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21], [closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_try_fold<'_, &syn::TypeParam, proc_macro2::Ident, (), std::ops::ControlFlow<proc_macro2::Ident>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21], [closure@std::iter::Iterator::find::check<proc_macro2::Ident, &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@syn::Attribute::parse_args_with<[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:591:46: 591:66]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::collections::btree::node::LeftOrRight<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Left`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Right`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::DormantMut, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Internal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.height`: 8 bytes
print-type-size     field `.node`: 8 bytes
print-type-size type: `alloc::collections::btree::search::IndexResult`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `KV`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Edge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&&std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&syn::LitStr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&syn::Member>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<&syn::TypePath>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&internals::ast::Field<'_>, proc_macro2::Ident)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&std::string::String, &proc_macro2::Ident)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Field, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldPat, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::FieldValue, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericMethodArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::GenericParam, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Lifetime, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::LifetimeDef, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::NestedMeta, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Pat, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Pat, syn::token::Or)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::PathSegment, syn::token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::TypeParamBound, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<internals::ast::Field<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<internals::ast::Variant<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::Literal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro2::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::TokenTree>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<std::vec::Vec<syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Arm>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Lifetime>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Member>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::NestedMeta>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::Stmt>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::WherePredicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<syn::error::ErrorMessage>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::core_arch::simd::i64x2`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size     field `.4`: 1 bytes
print-type-size     field `.5`: 1 bytes
print-type-size     field `.6`: 1 bytes
print-type-size     field `.7`: 1 bytes
print-type-size     field `.8`: 1 bytes
print-type-size     field `.9`: 1 bytes
print-type-size     field `.10`: 1 bytes
print-type-size     field `.11`: 1 bytes
print-type-size     field `.12`: 1 bytes
print-type-size     field `.13`: 1 bytes
print-type-size     field `.14`: 1 bytes
print-type-size     field `.15`: 1 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `hashbrown::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.ctrl_align`: 8 bytes
print-type-size type: `hashbrown::raw::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `hashbrown::raw::sse2::Group::static_empty::AlignedBytes`: 16 bytes, alignment: 16 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size type: `internals::case::ParseError<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.unknown`: 16 bytes
print-type-size type: `internals::symbol::Symbol`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::Literal`: 16 bytes, alignment: 4 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `proc_macro::bridge::Literal<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 16 bytes, alignment: 4 bytes
print-type-size     field `.suffix`: 4 bytes
print-type-size     field `.symbol`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::client::Client<(proc_macro::TokenStream, proc_macro::TokenStream), proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.get_handle_counters`: 8 bytes
print-type-size     field `.run`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `proc_macro::bridge::closure::Closure<'_, proc_macro::bridge::buffer::Buffer, proc_macro::bridge::buffer::Buffer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.call`: 8 bytes
print-type-size     field `.env`: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<[syn::error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::BareFnArg, Item = &mut syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::Expr, Item = &mut syn::Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::Field, Item = &mut syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::GenericArgument, Item = &mut syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::PathSegment, Item = &mut syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::Type, Item = &mut syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::TypeParamBound, Item = &mut syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::Variant, Item = &mut syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterMutTrait<'_, syn::WherePredicate, Item = &mut syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::NestedMeta, Item = &syn::NestedMeta>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn syn::punctuated::IterTrait<'_, syn::Variant, Item = &syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Ref<'_, std::option::Option<std::vec::Vec<syn::Error>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::RefMut<'_, std::option::Option<std::vec::Vec<syn::Error>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::buffer::Cursor<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<syn::parse::Unexpected>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::Write::write_fmt::Adapter<'_, std::sys::unix::stdio::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Cloned<std::slice::Iter<'_, syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Cloned<syn::punctuated::Iter<'_, syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.it`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2449:17: 2449:31]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2472:17: 2472:31]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2548:17: 2548:31]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2562:17: 2562:31]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:641:17: 641:24]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1095:17: 1095:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:334:17: 334:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:373:17: 373:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:890:17: 890:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:964:17: 964:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Filter<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1655:17: 1655:26]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.predicate`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Fuse<std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2449:17: 2449:31]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2450:14: 2450:29]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Filter<std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2562:17: 2562:31]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2563:14: 2563:29]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>>::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2916:54: 2916:57]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:178:18: 178:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1205:51: 1205:54]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:465:26: 465:29]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::ops::Range<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:705:18: 705:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2098:55: 2098:66]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2101:14: 2101:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1194:61: 1194:75]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1911:52: 1911:67]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2033:41: 2033:55]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2394:57: 2394:71]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2891:47: 2891:54]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2912:51: 2912:58]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2931:53: 2931:60]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:697:39: 697:42]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:136:57: 136:64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:183:57: 183:64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:83:37: 83:44]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:98:37: 98:44]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1167:55: 1167:62]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1171:14: 1171:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:471:57: 471:60]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:694:47: 694:50]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:707:52: 707:55]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:975:47: 975:50]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:976:46: 976:49]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:641:17: 641:24]>::{closure#0}]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2024:14: 2024:23]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, syn::Error>, for<'a> fn(&'a syn::Error) -> proc_macro2::TokenStream {syn::Error::to_compile_error}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:19:18: 19:25]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Map<syn::punctuated::Iter<'_, syn::GenericParam>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:385:34: 385:41]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[syn::Member]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[syn::PathSegment]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[syn::TypeParamBound]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<&[syn::WherePredicate], std::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<&[syn::WherePredicate]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &internals::ast::Field<'_>), std::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &internals::ast::Field<'_>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &internals::ast::Variant<'_>), std::convert::Infallible>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<(usize, &internals::ast::Variant<'_>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<&[syn::WherePredicate], std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(usize, &internals::ast::Field<'_>), std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(usize, &internals::ast::Variant<'_>), std::convert::Infallible>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<usize, std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, std::option::Option<&syn::LitStr>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &mut syn::WherePredicate>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::NestedMeta>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, usize>, &syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<usize, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[syn::WherePredicate]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&syn::Lifetime, &alloc::collections::btree::set_val::SetValZST)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::token::At, std::boxed::Box<syn::Pat>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(syn::token::Else, std::boxed::Box<syn::Expr>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &(&str, internals::case::RenameRule))>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &internals::ast::Field<'_>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &internals::ast::Variant<'_>)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &std::string::String)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &syn::Field)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &syn::Lifetime)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &syn::WherePredicate)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, char)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::option::Option<&internals::ast::Field<'_>>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::slice::Iter<'_, internals::ast::Field<'_>>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::panicking::try::Data<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[syn::error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::BareFnArg, Item = &mut syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::Expr, Item = &mut syn::Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::Field, Item = &mut syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::GenericArgument, Item = &mut syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::PathSegment, Item = &mut syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::Type, Item = &mut syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::TypeParamBound, Item = &mut syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::Variant, Item = &mut syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterMutTrait<'_, syn::WherePredicate, Item = &mut syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::NestedMeta, Item = &syn::NestedMeta>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn syn::punctuated::IterTrait<'_, syn::Variant, Item = &syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[syn::error::ErrorMessage]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::BareFnArg, Item = &mut syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::Expr, Item = &mut syn::Expr>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::Field, Item = &mut syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::GenericArgument, Item = &mut syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::PathSegment, Item = &mut syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::Type, Item = &mut syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::TypeParamBound, Item = &mut syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::Variant, Item = &mut syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterMutTrait<'_, syn::WherePredicate, Item = &mut syn::WherePredicate>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::NestedMeta, Item = &syn::NestedMeta>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn syn::punctuated::IterTrait<'_, syn::Variant, Item = &syn::Variant>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&&std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&syn::LitStr]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&syn::TypePath]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[&syn::Type]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(&internals::ast::Field<'_>, proc_macro2::Ident)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(&std::string::String, &proc_macro2::Ident)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::BareFnArg, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::Expr, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::GenericArgument, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::GenericParam, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::Lifetime, syn::token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::NestedMeta, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::Type, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::Variant, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(syn::WherePredicate, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[internals::ast::Field<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[internals::ast::Variant<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro2::Literal]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[proc_macro2::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<std::string::String>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<syn::Lifetime>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::mem::MaybeUninit<syn::WherePredicate>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[std::vec::Vec<syn::WherePredicate>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::Error]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::GenericParam]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::Lifetime]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::NestedMeta]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[syn::WherePredicate]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&&std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&syn::LitStr]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&syn::TypePath]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[&syn::Type]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(&internals::ast::Field<'_>, proc_macro2::Ident)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(&std::string::String, &proc_macro2::Ident)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::BareFnArg, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::Expr, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::GenericArgument, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::GenericParam, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::Lifetime, syn::token::Add)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::NestedMeta, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::Type, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::Variant, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(syn::WherePredicate, syn::token::Comma)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[internals::ast::Field<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[internals::ast::Variant<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro2::Ident]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro2::Literal]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[proc_macro2::TokenStream]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<std::string::String>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<syn::Lifetime>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::mem::MaybeUninit<syn::WherePredicate>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::string::String]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[std::vec::Vec<syn::WherePredicate>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::Error]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::GenericParam]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::Lifetime]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::Member]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::NestedMeta]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::PathSegment]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::TypeParamBound]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[syn::WherePredicate]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&mut syn::BareFnArg, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::Expr, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::GenericArgument, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::Type, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::TypeParamBound, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::Variant, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&mut syn::WherePredicate, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::BareFnArg, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::GenericArgument, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::NestedMeta, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::Type, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<&syn::Variant, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<internals::case::RenameRule, internals::case::ParseError<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 9 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::Ref<'_, std::option::Option<std::vec::Vec<syn::Error>>>, std::cell::BorrowError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::cell::RefMut<'_, std::option::Option<std::vec::Vec<syn::Error>>>, std::cell::BorrowMutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::option::Option<&syn::LitStr>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u64, std::num::TryFromIntError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &&std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &syn::Member>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, &syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (&internals::ast::Field<'_>, proc_macro2::Ident)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (&std::string::String, &proc_macro2::Ident)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (&str, internals::case::RenameRule)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::NestedMeta, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::PathSegment, syn::token::Colon2)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, internals::ast::Field<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, internals::ast::Variant<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro2::Ident>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro2::Literal>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, proc_macro2::TokenStream>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, std::string::String>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, syn::Attribute>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, syn::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, syn::Lifetime>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, syn::Member>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, syn::WherePredicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::BareFnArg, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::Expr, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::GenericArgument, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::Type, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::TypeParamBound, syn::token::Add)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::Variant, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, (syn::WherePredicate, syn::token::Comma)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, internals::ast::Field<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, internals::ast::Variant<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::vec::set_len_on_drop::SetLenOnDrop<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.local_len`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::Abi`: 16 bytes, alignment: 8 bytes
print-type-size     field `.name`: 8 bytes
print-type-size     field `.extern_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::BinOp`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `ShlEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `ShrEq`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `And`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Or`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shl`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Shr`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Eq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Le`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ne`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ge`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `AddEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `SubEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `MulEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `DivEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `RemEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitXorEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitAndEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `BitOrEq`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Add`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Sub`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Mul`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Div`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Rem`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitXor`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitAnd`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `BitOr`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Lt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Gt`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::RangeLimits`: 16 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Closed`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `HalfOpen`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::ReturnType`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Type`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Default`: 0 bytes
print-type-size type: `syn::TypeGroup`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.group_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeParen`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.paren_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::TypeSlice`: 16 bytes, alignment: 8 bytes
print-type-size     field `.elem`: 8 bytes
print-type-size     field `.bracket_token`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `syn::buffer::Cursor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.scope`: 8 bytes
print-type-size type: `syn::buffer::TokenBuffer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `syn::generics::Lifetimes<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `syn::generics::TypeParams<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `syn::parse::Unexpected`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Chain`: 12 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::NestedMeta>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Iter<'_, syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::BareFnArg>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::Expr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::Field>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::GenericArgument>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::GenericParam>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::PathSegment>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::Type>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::TypeParamBound>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::Variant>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::IterMut<'_, syn::WherePredicate>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `syn::punctuated::Pair<&syn::PathSegment, &syn::token::Colon2>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Punctuated`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `End`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `syn::thread::ThreadBound<proc_macro2::Span>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.thread_id`: 8 bytes
print-type-size     field `.value`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `proc_macro2::Punct`: 12 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 4 bytes
print-type-size     field `.spacing`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `proc_macro::Ident`: 12 bytes, alignment: 4 bytes
print-type-size     field `.0`: 12 bytes
print-type-size type: `proc_macro::bridge::DelimSpan<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.open`: 4 bytes
print-type-size     field `.close`: 4 bytes
print-type-size     field `.entire`: 4 bytes
print-type-size type: `proc_macro::bridge::ExpnGlobals<proc_macro::bridge::client::Span>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.def_site`: 4 bytes
print-type-size     field `.call_site`: 4 bytes
print-type-size     field `.mixed_site`: 4 bytes
print-type-size type: `proc_macro::bridge::Ident<proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.sym`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.is_raw`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<syn::token::Colon2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dot2>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::token::Dot3`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::DotDotEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShlEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `syn::token::ShrEq`: 12 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 12 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, std::string::String, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::collections::btree_map::IntoIter<K, V, A> as std::ops::Drop>::drop::DropGuard<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, &syn::LitStr, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, &syn::TypePath, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (syn::GenericParam, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (syn::Lifetime, syn::token::Add), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (syn::NestedMeta, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, (syn::WherePredicate, syn::token::Comma), std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, std::string::String, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::GenericParam, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::Lifetime, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::NestedMeta, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::PathSegment, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `<std::vec::IntoIter<T, A> as std::ops::Drop>::drop::DropGuard<'_, syn::WherePredicate, std::alloc::Global>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:267:47: 267:54]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:284:14: 284:26]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:348:52: 348:63]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:74:21: 74:30]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1755:53: 1755:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1802:53: 1802:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2095:47: 2095:54]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2106:14: 2106:26]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2110:14: 2110:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2473:14: 2473:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2549:14: 2549:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2598:42: 2598:57]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:372:36: 372:43]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/fragment.rs:33:55: 33:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/fragment.rs:61:55: 61:60]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:175:48: 175:50]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:591:46: 591:66]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:133:21: 133:30]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1067:22: 1067:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1110:22: 1110:28]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:276:14: 276:26]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:340:14: 340:21]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:382:18: 382:25]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>>::{closure#0}]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::collections::btree_set::Iter<'_, syn::Lifetime>>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::option::Iter<'_, syn::Lifetime>>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Chain<std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>, std::option::IntoIter<syn::NestedMeta>> as std::iter::Iterator>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Chain<std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:279:14: 279:18]>, std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>> as std::iter::Iterator>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Chain<std::option::IntoIter<syn::GenericParam>, std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<'_, syn::GenericParam>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:348:52: 348:63]>> as std::iter::Iterator>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Chain<std::option::IntoIter<syn::GenericParam>, syn::punctuated::IntoIter<syn::GenericParam>> as std::iter::Iterator>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::iter::Enumerate<I> as std::iter::Iterator>::fold::enumerate<&internals::ast::Field<'_>, proc_macro2::TokenStream, [closure@std::iter::adapters::filter::filter_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:813:17: 813:29], [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:819:14: 819:26], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:826:26: 826:37]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<std::string::String as core::slice::cmp::SliceContains>::slice_contains::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::NestedMeta, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::NestedMeta, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Expr, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Expr, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::TypeParamBound, syn::token::Add> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::TypeParamBound, syn::token::Add> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::WherePredicate, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::WherePredicate, syn::token::Comma> as std::iter::Iterator>::next::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@core::str::iter::MatchIndicesInternal<'_, char>::next::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::map::equivalent_key<proc_macro2::Ident, proc_macro2::Ident, ()>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::map::make_hasher<proc_macro2::Ident, proc_macro2::Ident, (), std::collections::hash_map::RandomState>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::raw::RawTable<(proc_macro2::Ident, ())>::reserve_rehash<[closure@hashbrown::map::make_hasher<proc_macro2::Ident, proc_macro2::Ident, (), std::collections::hash_map::RandomState>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::fallible_with_capacity::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BRIDGE_STATE::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::collections::btree_map::VacantEntry<'_, std::string::String, alloc::collections::btree::set_val::SetValZST>::insert::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::collections::btree_map::VacantEntry<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST>::insert::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::collections::hash_map::RandomState::new::KEYS::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2383:17: 2383:30]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2416:17: 2416:30]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1048:17: 1048:29]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:270:17: 270:29]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Field<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:813:17: 813:29]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1178:17: 1178:32]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1230:17: 1230:32]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1314:17: 1314:32]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<(usize, &internals::ast::Variant<'_>), &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1367:17: 1367:32]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find::check<proc_macro2::Ident, &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find_map::check<&internals::ast::Field<'_>, &[syn::WherePredicate], &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::find_map::check<(usize, &internals::ast::Variant<'_>), proc_macro2::TokenStream, &mut [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1412:21: 1412:35]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), [closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro2::TokenTree, [closure@<proc_macro2::fallback::TokenStream as std::iter::Extend<proc_macro2::TokenTree>>::extend<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::collections::btree_set::Iter<'_, syn::Lifetime>>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::option::Iter<'_, syn::Lifetime>>>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:270:17: 270:29]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::iter::Enumerate<std::slice::Iter<'_, internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:813:17: 813:29]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:334:17: 334:25]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:373:17: 373:25]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:890:17: 890:25]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::Peekable<std::iter::Filter<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:964:17: 964:25]>>::peek::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:334:17: 334:25], [closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:340:14: 340:21], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:349:13: 349:24]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:373:17: 373:25], [closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:382:18: 382:25], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:391:17: 391:28]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:270:17: 270:29], [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:276:14: 276:26], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:287:26: 287:37]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_try_fold<'_, (usize, &internals::ast::Variant<'_>), usize, std::ops::ControlFlow<usize, usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1178:17: 1178:32], [closure@std::iter::Iterator::position::check<(usize, &internals::ast::Variant<'_>), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1191:52: 1191:66]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:340:14: 340:21], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:349:13: 349:24]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:382:18: 382:25], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:391:17: 391:28]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&syn::Lifetime, syn::Lifetime, (), for<'a> fn(&'a syn::Lifetime) -> syn::Lifetime {<syn::Lifetime as std::clone::Clone>::clone}, [closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::collections::btree_set::Iter<'_, syn::Lifetime>>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&syn::Lifetime, syn::Lifetime, (), for<'a> fn(&'a syn::Lifetime) -> syn::Lifetime {<syn::Lifetime as std::clone::Clone>::clone}, [closure@std::iter::Iterator::for_each::call<syn::Lifetime, [closure@<std::collections::BTreeSet<syn::Lifetime> as std::iter::Extend<syn::Lifetime>>::extend<std::iter::Cloned<std::option::Iter<'_, syn::Lifetime>>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&syn::TypeParam, proc_macro2::Ident, (), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21], [closure@std::iter::adapters::map::map_fold<proc_macro2::Ident, (proc_macro2::Ident, ()), (), [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), [closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:276:14: 276:26], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:287:26: 287:37]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::Ident, (proc_macro2::Ident, ()), (), [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>>::{closure#0}], [closure@std::iter::Iterator::for_each::call<(proc_macro2::Ident, ()), [closure@<hashbrown::map::HashMap<proc_macro2::Ident, (), std::collections::hash_map::RandomState> as std::iter::Extend<(proc_macro2::Ident, ())>>::extend<std::iter::Map<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>, [closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>>::{closure#0}]>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<proc_macro2::TokenTree, proc_macro::TokenTree, (), fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}, [closure@std::iter::Iterator::for_each::call<proc_macro::TokenTree, [closure@<proc_macro::TokenStream as std::iter::FromIterator<proc_macro::TokenTree>>::from_iter<std::iter::Map<std::iter::Map<proc_macro2::token_stream::IntoIter, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/respan.rs:6:14: 6:21]>, fn(proc_macro2::TokenTree) -> proc_macro::TokenTree {proc_macro2::imp::into_compiler_token}>>::{closure#0}]>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<'_, std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::collections::btree::borrow::DormantMutRef<'_, std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `de::DeImplGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::DeTypeGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `internals::receiver::ReplaceReceiver<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::Punct`: 8 bytes, alignment: 4 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `proc_macro::bridge::Punct<proc_macro::bridge::client::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.ch`: 1 bytes
print-type-size     field `.joint`: 1 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `proc_macro::bridge::scoped_cell::RefMutL<'_, '_, proc_macro::bridge::client::BridgeStateL>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::IdentFragmentAdapter<&usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `quote::__private::RepInterp<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::Member; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::PathSegment; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::TypeParamBound; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<[syn::error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::iter::FlatMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::slice::Iter<'_, internals::ast::Field<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<'_, syn::NestedMeta, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<'_, syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<'_, syn::Expr, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<'_, syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<'_, syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<'_, syn::TypeParamBound, syn::token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<'_, syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<syn::punctuated::PrivateIterMut<'_, syn::WherePredicate, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::BorrowRef<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::BorrowRefMut<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.borrow`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::Cell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::iter::Cloned<std::option::Iter<'_, syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.it`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::RangeFrom<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:137:51: 137:54]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::iter::Map<std::ops::RangeFrom<usize>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:84:39: 84:42]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::iter::Map<std::option::Iter<'_, syn::Lifetime>, for<'a> fn(&'a syn::Lifetime) -> syn::Lifetime {<syn::Lifetime as std::clone::Clone>::clone}>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &(&str, internals::case::RenameRule)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &internals::ast::Variant<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<'_, syn::GenericParam>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:348:52: 348:63]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:279:14: 279:18]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::iter::FilterMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:74:21: 74:30]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::option::IntoIter<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::option::IntoIter<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::slice::Iter<'_, internals::ast::Field<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::vec::IntoIter<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut std::vec::IntoIter<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &mut syn::punctuated::IntoIter<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, ()>, &syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::RangeFrom<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&mut syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::IntoIter<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&mut syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Item<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.opt`: 8 bytes
print-type-size type: `std::option::Iter<'_, syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::option::Option<&&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&internals::ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&&syn::token::Colon2>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&internals::ast::Field<'_>, proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&std::string::String, &proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(&str, internals::case::RenameRule)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(usize, &internals::ast::Field<'_>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&alloc::collections::btree::set_val::SetValZST>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&internals::ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&internals::ast::Variant<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&internals::attr::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut (syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut internals::ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut internals::ast::Variant<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut proc_macro::bridge::client::BridgeState<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Cloned<std::vec::IntoIter<&syn::TypePath>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Flatten<std::iter::FlatMap<std::slice::Iter<'_, syn::Attribute>, std::result::Result<std::vec::Vec<syn::NestedMeta>, ()>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Cloned<syn::punctuated::Iter<'_, syn::GenericParam>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:348:52: 348:63]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::Filter<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:278:17: 278:21]>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:279:14: 279:18]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::FilterMap<std::boxed::Box<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:52:21: 52:28]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::iter::FilterMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:74:21: 74:30]>, for<'a> fn(&'a [syn::WherePredicate]) -> std::vec::Vec<syn::WherePredicate> {std::slice::<impl [syn::WherePredicate]>::to_vec}>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<'_, internals::ast::Variant<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1178:23: 1178:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:315:23: 315:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::iter::Map<std::slice::Iter<'_, syn::Attribute>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:877:23: 877:29]>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::IntoIter<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::IntoIter<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<&internals::ast::Field<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<(usize, &internals::ast::Field<'_>)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::result::IntoIter<std::vec::Vec<syn::NestedMeta>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::slice::Iter<'_, internals::ast::Field<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::IntoIter<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::IntoIter<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::vec::Vec<syn::Error>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut syn::punctuated::IntoIter<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::ptr::NonNull<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::slice::Iter<'_, internals::ast::Field<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::vec::Vec<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::ExprPath>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Meta>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypeParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::WhereClause>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fn(*mut u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(proc_macro2::Ident, ())>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro2::Span>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldPat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::FieldValue>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericMethodArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Lifetime>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::LifetimeDef>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Pat>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRef<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::BorrowRefMut<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::As>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Async>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Colon>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Const>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Dyn>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Eq>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Gt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::In>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Lt>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Move>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Mut>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Or>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Paren>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Ref>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Semi>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Static>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<syn::token::Unsafe>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner<std::alloc::Global>, usize) -> u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut(usize) -> bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::BareFnArg, Item = &mut syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::Expr, Item = &mut syn::Expr>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::Field, Item = &mut syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::GenericArgument, Item = &mut syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::PathSegment, Item = &mut syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::Type, Item = &mut syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::TypeParamBound, Item = &mut syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::Variant, Item = &mut syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterMutTrait<'_, syn::WherePredicate, Item = &mut syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::NestedMeta, Item = &syn::NestedMeta>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn syn::punctuated::IterTrait<'_, syn::Variant, Item = &syn::Variant>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&internals::ast::Field<'_>, proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&std::string::String, &proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&str, internals::case::RenameRule)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(proc_macro2::Ident, ())>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::FieldPat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericMethodArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Pat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Pat, syn::token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::Member; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::PathSegment; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::TypeParamBound; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<[syn::error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<internals::ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<internals::ast::Variant<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::iter::FlatMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::option::Option<std::vec::Vec<syn::Error>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::slice::Iter<'_, internals::ast::Field<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::vec::Vec<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<'_, syn::NestedMeta, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<'_, syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<'_, syn::Expr, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<'_, syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<'_, syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<'_, syn::TypeParamBound, syn::token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<'_, syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<syn::punctuated::PrivateIterMut<'_, syn::WherePredicate, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(&internals::ast::Field<'_>, proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(&std::string::String, &proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Field, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::FieldPat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::FieldValue, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericMethodArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::LifetimeDef, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Pat, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Pat, syn::token::Or)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::PathSegment, syn::token::Colon2)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::Member; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::PathSegment; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::TypeParamBound; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<[syn::error::ErrorMessage; 1]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<internals::ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<internals::ast::Variant<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro2::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::TokenTree>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::iter::FlatMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::slice::Iter<'_, internals::ast::Field<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::vec::Vec<syn::WherePredicate>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Arm>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Attribute>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::BareFnArg>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Expr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Field>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::FieldPat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::FieldValue>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericMethodArgument>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::LifetimeDef>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Pat>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Path>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Stmt>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::TypeParamBound>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::Variant>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::error::ErrorMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitFloatRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitIntRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::lit::LitRepr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<'_, syn::NestedMeta, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<'_, syn::BareFnArg, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<'_, syn::Expr, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<'_, syn::GenericArgument, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<'_, syn::Type, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<'_, syn::TypeParamBound, syn::token::Add>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<'_, syn::Variant, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<syn::punctuated::PrivateIterMut<'_, syn::WherePredicate, syn::token::Comma>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(&internals::ast::Field<'_>, proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(&std::string::String, &proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(&str, internals::case::RenameRule)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<internals::ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<internals::ast::Variant<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<syn::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&&std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&syn::LitStr>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&syn::Type>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&syn::TypePath>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(&internals::ast::Field<'_>, proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(&std::string::String, &proc_macro2::Ident)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(&str, internals::case::RenameRule)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::BareFnArg, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::Expr, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::GenericArgument, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::GenericParam, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::Lifetime, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::NestedMeta, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::Type, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::TypeParamBound, syn::token::Add)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::Variant, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(syn::WherePredicate, syn::token::Comma)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<internals::ast::Field<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<internals::ast::Variant<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<proc_macro2::Ident>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<proc_macro2::Literal>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<proc_macro2::TokenStream>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<std::string::String>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<syn::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<syn::GenericParam>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<syn::Lifetime>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<syn::Member>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<syn::NestedMeta>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<syn::PathSegment>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<syn::WherePredicate>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::rc::Rc<std::cell::Cell<syn::parse::Unexpected>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::result::Result<&proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<&syn::LitStr, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::boxed::Box<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<std::option::Option<proc_macro::bridge::client::TokenStream>, ()>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::thread::LocalKey<proc_macro::bridge::scoped_cell::ScopedCell<proc_macro::bridge::client::BridgeStateL>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::thread::ThreadId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::AttrStyle`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Inner`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Outer`: 0 bytes
print-type-size type: `syn::ImplGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::Index`: 8 bytes, alignment: 4 bytes
print-type-size     field `.index`: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::LitBool`: 8 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size     field `.value`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `syn::LitByte`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitByteStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitChar`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitFloat`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitInt`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::LitStr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `syn::MacroDelimiter`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Paren`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Brace`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Bracket`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::TraitBoundModifier`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Maybe`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::Turbofish<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::TypeGenerics<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `syn::UnOp`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Deref`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Not`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Neg`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `syn::token::AddEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndAnd`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::AndEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::CaretEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Colon2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::DivEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Dot2`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::EqEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ge`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Le`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::MulEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Ne`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::OrOr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RArrow`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::RemEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shl`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::Shr`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `syn::token::SubEq`: 8 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 8 bytes
print-type-size type: `proc_macro2::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `proc_macro2::imp::Span`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Compiler`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `proc_macro::bridge::client::Span`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::client::TokenStream`: 4 bytes, alignment: 4 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.handle`: 4 bytes
print-type-size type: `proc_macro::bridge::symbol::Symbol`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::client::TokenStream>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<proc_macro::bridge::symbol::Symbol>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `syn::TypeInfer`: 4 bytes, alignment: 4 bytes
print-type-size     field `.underscore_token`: 4 bytes
print-type-size type: `syn::TypeNever`: 4 bytes, alignment: 4 bytes
print-type-size     field `.bang_token`: 4 bytes
print-type-size type: `syn::VisCrate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.crate_token`: 4 bytes
print-type-size type: `syn::VisPublic`: 4 bytes, alignment: 4 bytes
print-type-size     field `.pub_token`: 4 bytes
print-type-size type: `syn::token::Add`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::And`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::As`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Async`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::At`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Await`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bang`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Box`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Brace`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Bracket`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Break`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Caret`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Colon`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Comma`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Const`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Continue`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Crate`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Div`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dot`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Dyn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Else`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Enum`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Eq`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Extern`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Fn`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::For`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Group`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Gt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::If`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Impl`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::In`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Let`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Loop`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Lt`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Match`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Move`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Mut`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Or`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Paren`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Pound`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Pub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Question`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Ref`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Rem`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Return`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Semi`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Star`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Static`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Struct`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Sub`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Try`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Underscore`: 4 bytes, alignment: 4 bytes
print-type-size     field `.spans`: 4 bytes
print-type-size type: `syn::token::Union`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Unsafe`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Where`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::While`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `syn::token::Yield`: 4 bytes, alignment: 4 bytes
print-type-size     field `.span`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMaskIter`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `internals::attr::RenameAllRules`: 2 bytes, alignment: 1 bytes
print-type-size     field `.serialize`: 1 bytes
print-type-size     field `.deserialize`: 1 bytes
print-type-size type: `proc_macro::bridge::LitKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `StrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `ByteStrRaw`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Byte`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Str`: 0 bytes
print-type-size     variant `ByteStr`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::mem::MaybeUninit<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `MaybeUninit`: 2 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 2 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `de::Untagged`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Yes`: 0 bytes
print-type-size     variant `No`: 0 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `internals::Derive`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Serialize`: 0 bytes
print-type-size     variant `Deserialize`: 0 bytes
print-type-size type: `internals::ast::Style`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Struct`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size     variant `Newtype`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `internals::attr::Identifier`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `No`: 0 bytes
print-type-size     variant `Field`: 0 bytes
print-type-size     variant `Variant`: 0 bytes
print-type-size type: `internals::case::RenameRule`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `LowerCase`: 0 bytes
print-type-size     variant `UpperCase`: 0 bytes
print-type-size     variant `PascalCase`: 0 bytes
print-type-size     variant `CamelCase`: 0 bytes
print-type-size     variant `SnakeCase`: 0 bytes
print-type-size     variant `ScreamingSnakeCase`: 0 bytes
print-type-size     variant `KebabCase`: 0 bytes
print-type-size     variant `ScreamingKebabCase`: 0 bytes
print-type-size type: `proc_macro2::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `proc_macro2::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.inner`: 1 bytes
print-type-size type: `proc_macro2::Spacing`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Alone`: 0 bytes
print-type-size     variant `Joint`: 0 bytes
print-type-size type: `proc_macro2::imp::LexError`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Compiler`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Fallback`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `proc_macro::Delimiter`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Parenthesis`: 0 bytes
print-type-size     variant `Brace`: 0 bytes
print-type-size     variant `Bracket`: 0 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `ser::StructTrait`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SerializeMap`: 0 bytes
print-type-size     variant `SerializeStruct`: 0 bytes
print-type-size     variant `SerializeStructVariant`: 0 bytes
print-type-size type: `ser::TupleTrait`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SerializeTuple`: 0 bytes
print-type-size     variant `SerializeTupleStruct`: 0 bytes
print-type-size     variant `SerializeTupleVariant`: 0 bytes
print-type-size type: `std::cell::Cell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::ops::ControlFlow<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::ops::ControlFlow<(), std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<alloc::collections::btree::set_val::SetValZST>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<internals::case::RenameRule>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::stdio::Stderr>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::thread::AccessError>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, proc_macro2::LexError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::sys::common::thread_local::fast_local::fast::DtorState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unregistered`: 0 bytes
print-type-size     variant `Registered`: 0 bytes
print-type-size     variant `RunningOrHasRun`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:19:18: 19:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:277:14: 277:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:279:14: 279:18]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:385:34: 385:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1178:17: 1178:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1182:14: 1182:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1191:52: 1191:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1194:61: 1194:75]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1230:17: 1230:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1245:14: 1245:23]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1314:17: 1314:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1367:17: 1367:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1411:17: 1411:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1655:17: 1655:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1911:52: 1911:67]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2024:14: 2024:23]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2033:41: 2033:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2098:55: 2098:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2101:14: 2101:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:213:33: 213:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2383:17: 2383:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2384:14: 2384:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2394:57: 2394:71]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2416:17: 2416:30]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2417:14: 2417:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2443:14: 2443:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2449:17: 2449:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2450:14: 2450:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2472:17: 2472:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2526:41: 2526:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2548:17: 2548:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2562:17: 2562:31]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2563:14: 2563:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:272:29: 272:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2891:47: 2891:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2912:51: 2912:58]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2916:54: 2916:57]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:2931:53: 2931:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:362:48: 362:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:504:41: 504:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:641:17: 641:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:697:39: 697:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:971:41: 971:48]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:134:31: 134:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1078:37: 1078:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1082:36: 1082:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1172:23: 1172:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1173:18: 1173:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1470:37: 1470:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1474:36: 1474:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:1641:14: 1641:18]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:647:37: 647:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:651:36: 651:41]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/attr.rs:696:26: 696:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:136:57: 136:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:137:51: 137:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:178:18: 178:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:183:57: 183:64]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:83:37: 83:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:84:39: 84:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/pretend.rs:98:37: 98:44]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1048:17: 1048:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1095:17: 1095:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1167:55: 1167:62]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1171:14: 1171:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:1205:51: 1205:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:164:33: 164:42]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:198:48: 198:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:270:17: 270:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:287:26: 287:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:334:17: 334:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:349:13: 349:24]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:373:17: 373:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:391:17: 391:28]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:465:26: 465:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:471:57: 471:60]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:694:47: 694:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:705:18: 705:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:707:52: 707:55]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:813:17: 813:29]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:819:14: 819:26]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:826:26: 826:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:875:26: 875:33]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:890:17: 890:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:896:14: 896:21]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:904:26: 904:37]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:964:17: 964:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:975:47: 975:50]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:976:46: 976:49]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<hashbrown::set::HashSet<proc_macro2::Ident, std::collections::hash_map::RandomState> as std::iter::Extend<proc_macro2::Ident>>::extend<std::iter::Map<syn::generics::TypeParams<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/bound.rs:246:14: 246:21]>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::collections::btree_map::IntoIter<std::string::String, alloc::collections::btree::set_val::SetValZST> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::collections::btree_map::Keys<'_, syn::Lifetime, alloc::collections::btree::set_val::SetValZST> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::collections::btree_set::IntoIter<std::string::String> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:641:17: 641:24]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::NestedMeta, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::NestedMeta, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::BareFnArg, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::BareFnArg, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Expr, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Expr, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::GenericArgument, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::GenericArgument, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Type, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Type, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::TypeParamBound, syn::token::Add> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::TypeParamBound, syn::token::Add> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Variant, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::Variant, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::WherePredicate, syn::token::Comma> as std::iter::DoubleEndedIterator>::next_back::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::PrivateIterMut<'_, syn::WherePredicate, syn::token::Comma> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::GenericParam, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::Lifetime, syn::token::Add> as std::iter::IntoIterator>::into_iter::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::NestedMeta, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<syn::punctuated::Punctuated<syn::WherePredicate, syn::token::Comma> as std::iter::IntoIterator>::into_iter::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:641:17: 641:24]>::{closure#0}]>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, [closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::mem::take_mut<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>, [closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Immut<'_>, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>::next_unchecked::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::string::String, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, syn::Lifetime, alloc::collections::btree::set_val::SetValZST, alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::BridgeState<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::Bridge<'_>::with<proc_macro::bridge::buffer::Buffer, [closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@proc_macro::bridge::client::run_client<proc_macro::bridge::client::TokenStream, std::option::Option<proc_macro::bridge::client::TokenStream>, [closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}::{closure#0}]>::{closure#0}::{closure#0}::{closure#0}::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::collections::hash_map::RandomState::new::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&internals::ast::Field<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:134:31: 134:34]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::any::check<&syn::Lifetime, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:272:29: 272:32]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::Iterator::position::check<(usize, &internals::ast::Variant<'_>), [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:1191:52: 1191:66]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:890:17: 890:25], [closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:896:14: 896:21], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:904:26: 904:37]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::filter::filter_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:813:17: 813:29], [closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:819:14: 819:26], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:826:26: 826:37]>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:896:14: 896:21], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:904:26: 904:37]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&internals::ast::Field<'_>, usize, usize, [closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:641:17: 641:24]>::{closure#0}], [closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@<std::iter::Filter<I, P> as std::iter::Iterator>::count::to_usize<&internals::ast::Field<'_>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/de.rs:641:17: 641:24]>::{closure#0}]>>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(usize, &internals::ast::Field<'_>), proc_macro2::TokenStream, proc_macro2::TokenStream, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:819:14: 819:26], [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/ser.rs:826:26: 826:37]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, &str>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, &str>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, internals::case::ParseError<'_>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, internals::case::ParseError<'_>>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, std::string::String>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, std::string::String>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, syn::Error>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@syn::Error::new_spanned<proc_macro2::TokenStream, syn::Error>::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::mem::replace::PanicGuard`: 0 bytes, alignment: 1 bytes
print-type-size type: `alloc::collections::btree::set_val::SetValZST`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `proc_macro2::fallback::LexError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.span`: 0 bytes
print-type-size type: `proc_macro2::fallback::Span`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::LexError`: 0 bytes, alignment: 1 bytes
print-type-size type: `proc_macro::bridge::closure::Env`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::HasIterator`: 0 bytes, alignment: 1 bytes
print-type-size type: `quote::__private::ThereIsNoIteratorInRepetition`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowMutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&syn::Member>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&internals::ast::Field<'_>, proc_macro2::Ident)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&std::string::String, &proc_macro2::Ident)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(&str, internals::case::RenameRule)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::NestedMeta, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::PathSegment, syn::token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&internals::ast::Field<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&internals::ast::Variant<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (std::string::String, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Lifetime, alloc::collections::btree::set_val::SetValZST)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::TypeParamBound, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut (syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut internals::ast::Field<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut internals::ast::Variant<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::collections::BTreeMap<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::collections::BTreeMap<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut std::option::Option<std::vec::Vec<syn::Error>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::Literal>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&proc_macro2::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::LitStr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Member>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::TypePath>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&syn::buffer::Entry>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&internals::ast::Field<'_>, proc_macro2::Ident)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&std::string::String, &proc_macro2::Ident)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::DormantMut, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Immut<'_>, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Mut<'_>, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Internal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(proc_macro2::Ident, ())>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::string::String, proc_macro2::Ident, std::vec::Vec<std::string::String>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::BareFnArg, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Expr, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Field, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldPat, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::FieldValue, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericMethodArgument, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::GenericParam, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Lifetime, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::LifetimeDef, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::NestedMeta, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Pat, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Pat, syn::token::Or)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::PathSegment, syn::token::Colon2)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Type, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::TypeParamBound, syn::token::Add)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::Variant, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(syn::WherePredicate, syn::token::Comma)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut &mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*mut ()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::Member; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::Member]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::PathSegment; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::PathSegment]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::TypeParamBound; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::TypeParamBound]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::error::ErrorMessage; 1]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[syn::error::ErrorMessage]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::KV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner<std::alloc::Global>, usize) -> u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::iter::Iterator<Item = &internals::ast::Field<'_>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut(usize) -> bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::BareFnArg, Item = &mut syn::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::Expr, Item = &mut syn::Expr>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::Field, Item = &mut syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::GenericArgument, Item = &mut syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::GenericParam, Item = &mut syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::PathSegment, Item = &mut syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::Type, Item = &mut syn::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::TypeParamBound, Item = &mut syn::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::Variant, Item = &mut syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterMutTrait<'_, syn::WherePredicate, Item = &mut syn::WherePredicate>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::BareFnArg, Item = &syn::BareFnArg>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Field, Item = &syn::Field>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::GenericArgument, Item = &syn::GenericArgument>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::GenericParam, Item = &syn::GenericParam>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::NestedMeta, Item = &syn::NestedMeta>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::PathSegment, Item = &syn::PathSegment>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Type, Item = &syn::Type>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::TypeParamBound, Item = &syn::TypeParamBound>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn syn::punctuated::IterTrait<'_, syn::Variant, Item = &syn::Variant>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn((proc_macro::TokenStream, proc_macro::TokenStream)) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<fn(proc_macro::TokenStream) -> proc_macro::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<internals::ast::Field<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<internals::ast::Variant<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Ident>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Literal>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::Span>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenStream>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro2::marker::ProcMacroAutoTraits>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::TokenTree>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<proc_macro::bridge::TokenTree<proc_macro::bridge::client::TokenStream, proc_macro::bridge::client::Span, proc_macro::bridge::symbol::Symbol>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(std::string::String, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<(syn::Lifetime, alloc::collections::btree::set_val::SetValZST)>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::iter::FlatMap<std::slice::Iter<'_, internals::ast::Variant<'_>>, std::slice::Iter<'_, internals::ast::Field<'_>>, [closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.136/src/internals/ast.rs:127:51: 127:60]>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::InternalNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<std::string::String, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<alloc::collections::btree::node::LeafNode<syn::Lifetime, alloc::collections::btree::set_val::SetValZST>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::rc::RcBox<std::cell::Cell<syn::parse::Unexpected>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::slice::Iter<'_, internals::ast::Field<'_>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::string::String>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::vec::Vec<syn::WherePredicate>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Arm>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Attribute>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::BareFnArg>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Expr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Field>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldPat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::FieldValue>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericMethodArgument>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::GenericParam>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Lifetime>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::LifetimeDef>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Member>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::NestedMeta>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Pat>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::PathSegment>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Stmt>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Type>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::TypeParamBound>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::Variant>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::WherePredicate>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::buffer::Cursor<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::error::ErrorMessage>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitFloatRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitIntRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::lit::LitRepr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<'_, syn::BareFnArg, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<'_, syn::GenericArgument, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<'_, syn::NestedMeta, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<'_, syn::Type, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIter<'_, syn::Variant, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<'_, syn::BareFnArg, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<'_, syn::Expr, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<'_, syn::GenericArgument, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<'_, syn::Type, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<'_, syn::TypeParamBound, syn::token::Add>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<'_, syn::Variant, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<syn::punctuated::PrivateIterMut<'_, syn::WherePredicate, syn::token::Comma>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_deserialize}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<[closure@proc_macro::bridge::client::Client<proc_macro::TokenStream, proc_macro::TokenStream>::expand1<fn(proc_macro::TokenStream) -> proc_macro::TokenStream {derive_serialize}>::{closure#0}]>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::mem::MaybeUninit<alloc::collections::btree::set_val::SetValZST>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 0 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 0 bytes
print-type-size type: `std::num::TryFromIntError`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<(), std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, ()>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `syn::__private::private`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `syn::reserved::Reserved`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::ser::content::Content`: 64 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `TupleVariant`: 63 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.3`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size     variant `StructVariant`: 63 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.3`: 24 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size     variant `NewtypeVariant`: 47 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.3`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size     variant `TupleStruct`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.1`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Struct`: 47 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.1`: 24 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `UnitVariant`: 39 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.1`: 4 bytes, alignment: 4 bytes
print-type-size         field `.0`: 16 bytes
print-type-size         field `.2`: 16 bytes
print-type-size     variant `String`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `NewtypeStruct`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Seq`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Tuple`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Map`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `UnitStruct`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `I64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `I32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `F32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `U16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `I16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `U8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `I8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<__private::ser::content::Content>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::result::Result<std::path::PathBuf, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::result::Result<std::string::String, std::string::FromUtf8Error>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size type: `std::string::FromUtf8Error`: 40 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.bytes`: 24 bytes
print-type-size type: `__private::de::content::Content<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `String`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `ByteBuf`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Seq`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Map`: 31 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Str`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `U64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `I64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `F64`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Newtype`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `U32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `I32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `F32`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `U16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `I16`: 3 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `U8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `I8`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size type: `__private::de::content::InternallyTaggedUnitVisitor<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.type_name`: 16 bytes
print-type-size     field `.variant_name`: 16 bytes
print-type-size type: `__private::de::content::TagContentOtherFieldVisitor`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tag`: 16 bytes
print-type-size     field `.content`: 16 bytes
print-type-size type: `__private::de::content::TagOrContent<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Content`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Tag`: 0 bytes
print-type-size type: `__private::de::content::TagOrContentFieldVisitor`: 32 bytes, alignment: 8 bytes
print-type-size     field `.tag`: 16 bytes
print-type-size     field `.content`: 16 bytes
print-type-size type: `__private::de::content::UntaggedUnitVisitor<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.type_name`: 16 bytes
print-type-size     field `.variant_name`: 16 bytes
print-type-size type: `std::borrow::Cow<'_, str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ffi::NulError`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 24 bytes
print-type-size type: `std::net::SocketAddr`: 32 bytes, alignment: 4 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `V6`: 30 bytes
print-type-size         padding: 2 bytes
print-type-size         field `.0`: 28 bytes, alignment: 4 bytes
print-type-size     variant `V4`: 6 bytes
print-type-size         field `.0`: 6 bytes
print-type-size type: `std::result::Result<std::ffi::CString, std::ffi::NulError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::path::PathBuf, std::str::Utf8Error>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `std::net::SocketAddrV6`: 28 bytes, alignment: 4 bytes
print-type-size     field `.ip`: 16 bytes
print-type-size     field `.flowinfo`: 4 bytes
print-type-size     field `.scope_id`: 4 bytes
print-type-size     field `.port`: 2 bytes
print-type-size     end padding: 2 bytes
print-type-size type: `[closure@std::rt::begin_panic<&str>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `de::Unexpected<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Str`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Bytes`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Other`: 23 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Unsigned`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Signed`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Float`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Char`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Bool`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size     variant `Option`: 0 bytes
print-type-size     variant `NewtypeStruct`: 0 bytes
print-type-size     variant `Seq`: 0 bytes
print-type-size     variant `Map`: 0 bytes
print-type-size     variant `Enum`: 0 bytes
print-type-size     variant `UnitVariant`: 0 bytes
print-type-size     variant `NewtypeVariant`: 0 bytes
print-type-size     variant `TupleVariant`: 0 bytes
print-type-size     variant `StructVariant`: 0 bytes
print-type-size type: `de::format::Buf<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size     field `.offset`: 8 bytes
print-type-size type: `std::ffi::OsString`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::fmt::DebugTuple<'_, '_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.fields`: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.empty_name`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, &str>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::path::PathBuf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::result::Result<&str, std::str::Utf8Error>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::time::Duration, std::time::SystemTimeError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::unix::os_str::Buf`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<(&str, __private::ser::content::Content)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<(__private::ser::content::Content, __private::ser::content::Content)>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<__private::de::content::Content<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<__private::ser::content::Content>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::net::IpAddr`: 17 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `V6`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `V4`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `__private::de::content::TagOrContentVisitor<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 0 bytes
print-type-size     field `.name`: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<(&str, __private::ser::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<(__private::ser::content::Content, __private::ser::content::Content)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<__private::de::content::Content<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<__private::ser::content::Content>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `de::OneOf`: 16 bytes, alignment: 8 bytes
print-type-size     field `.names`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::IpAddr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::Ipv4Addr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::Ipv6Addr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::SocketAddr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::SocketAddrV4>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::impls::FromStrVisitor<std::net::SocketAddrV6>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ty`: 0 bytes
print-type-size     field `.expecting`: 16 bytes
print-type-size type: `de::utf8::Encode`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.buf`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `de::value::Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.err`: 16 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<std::ffi::CStr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<std::path::Path>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::net::Ipv6Addr`: 16 bytes, alignment: 1 bytes
print-type-size     field `.octets`: 16 bytes
print-type-size type: `std::num::NonZeroI128`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::num::NonZeroU128`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &&str)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI128>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU128>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::time::SystemTime>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::CStr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<std::path::Path>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<std::ffi::CStr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<std::path::Path>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[(__private::de::content::Content<'_>, __private::de::content::Content<'_>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[__private::de::content::Content<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[(__private::de::content::Content<'_>, __private::de::content::Content<'_>)]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[__private::de::content::Content<'_>]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::rt::begin_panic::PanicPayload<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::slice::Iter<'_, &str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, (__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, __private::de::content::Content<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Utf8Error`: 16 bytes, alignment: 8 bytes
print-type-size     field `.valid_up_to`: 8 bytes
print-type-size     field `.error_len`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `std::sys::unix::time::SystemTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.t`: 16 bytes
print-type-size type: `std::sys::unix::time::Timespec`: 16 bytes, alignment: 8 bytes
print-type-size     field `.tv_sec`: 8 bytes
print-type-size     field `.tv_nsec`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::time::SystemTime`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::time::SystemTimeError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `de::impls::StringInPlaceVisitor<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::value::ExpectedInMap`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `de::value::ExpectedInSeq`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<__private::de::content::Content<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::mem::MaybeUninit<__private::de::content::Content<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::Cell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<isize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZeroI64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZeroIsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZeroU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::num::NonZeroUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&__private::de::content::Content<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::fmt::Arguments<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroIsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroUsize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn core::panic::BoxMeUp>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn de::Expected>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&str, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(__private::ser::content::Content, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<__private::de::content::Content<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::mem::MaybeUninit<__private::de::content::Content<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(&str, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<(__private::ser::content::Content, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<__private::de::content::Content<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::mem::MaybeUninit<__private::de::content::Content<'_>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<(__private::ser::content::Content, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<__private::de::content::Content<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<(__private::ser::content::Content, __private::ser::content::Content)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<__private::de::content::Content<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<__private::ser::content::Content>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::sync::atomic::AtomicI64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicIsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicU64`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys::unix::locks::futex_rwlock::RwLock`: 8 bytes, alignment: 4 bytes
print-type-size     field `.state`: 4 bytes
print-type-size     field `.writer_notify`: 4 bytes
print-type-size type: `std::net::SocketAddrV4`: 6 bytes, alignment: 2 bytes
print-type-size     field `.ip`: 4 bytes
print-type-size     field `.port`: 2 bytes
print-type-size type: `core::time::Nanoseconds`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::net::Ipv4Addr`: 4 bytes, alignment: 1 bytes
print-type-size     field `.octets`: 4 bytes
print-type-size type: `std::num::NonZeroI32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::num::NonZeroU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicI32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sys::unix::locks::futex_mutex::Mutex`: 4 bytes, alignment: 4 bytes
print-type-size     field `.futex`: 4 bytes
print-type-size type: `std::sys::unix::time::Nanoseconds`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::cell::UnsafeCell<i16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::cell::UnsafeCell<u16>`: 2 bytes, alignment: 2 bytes
print-type-size     field `.value`: 2 bytes
print-type-size type: `std::num::NonZeroI16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::num::NonZeroU16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU16>`: 2 bytes, alignment: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicI16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.v`: 2 bytes
print-type-size type: `std::sync::atomic::AtomicU16`: 2 bytes, alignment: 2 bytes
print-type-size     field `.v`: 2 bytes
print-type-size type: `__private::de::content::TagContentOtherField`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Tag`: 0 bytes
print-type-size     variant `Content`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size type: `__private::de::content::TagOrContentField`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Tag`: 0 bytes
print-type-size     variant `Content`: 0 bytes
print-type-size type: `__private::ser::Unsupported`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Boolean`: 0 bytes
print-type-size     variant `Integer`: 0 bytes
print-type-size     variant `Float`: 0 bytes
print-type-size     variant `Char`: 0 bytes
print-type-size     variant `String`: 0 bytes
print-type-size     variant `ByteArray`: 0 bytes
print-type-size     variant `Optional`: 0 bytes
print-type-size     variant `Unit`: 0 bytes
print-type-size     variant `UnitStruct`: 0 bytes
print-type-size     variant `Sequence`: 0 bytes
print-type-size     variant `Tuple`: 0 bytes
print-type-size     variant `TupleStruct`: 0 bytes
print-type-size     variant `Enum`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::collections::Bound<T>>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size     variant `Included`: 0 bytes
print-type-size     variant `Excluded`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::IpAddrKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `V4`: 0 bytes
print-type-size     variant `V6`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::SocketAddr>::deserialize::SocketAddrKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `V4`: 0 bytes
print-type-size     variant `V6`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::result::Result<T, E>>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Secs`: 0 bytes
print-type-size     variant `Nanos`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Secs`: 0 bytes
print-type-size     variant `Nanos`: 0 bytes
print-type-size type: `de::impls::OsStringKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unix`: 0 bytes
print-type-size     variant `Windows`: 0 bytes
print-type-size type: `de::impls::range::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Start`: 0 bytes
print-type-size     variant `End`: 0 bytes
print-type-size type: `std::cell::UnsafeCell<i8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::num::NonZeroI8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::num::NonZeroU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<(de::ignored_any::IgnoredAny, de::ignored_any::IgnoredAny)>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<de::ignored_any::IgnoredAny>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::Field>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::Field>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<de::impls::range::Field>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroI8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::NonZeroU8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sync::atomic::AtomicBool`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicI8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::AtomicU8`: 1 bytes, alignment: 1 bytes
print-type-size     field `.v`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::sync::poison::Flag`: 1 bytes, alignment: 1 bytes
print-type-size     field `.failed`: 1 bytes
print-type-size type: `std::sync::poison::Guard`: 1 bytes, alignment: 1 bytes
print-type-size     field `.panicking`: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::collections::Bound<T>>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::IpAddrKind as de::Deserialize<'de>>::deserialize::KindVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::net::SocketAddr>::deserialize::SocketAddrKind as de::Deserialize<'de>>::deserialize::KindVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::result::Result<T, E>>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::OsStringKind as de::Deserialize<'de>>::deserialize::KindVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `<de::impls::range::Field as de::Deserialize<'de>>::deserialize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::de::borrow_cow_bytes::CowBytesVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::de::borrow_cow_str::CowStrVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `__private::de::content::ContentVisitor<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `__private::doc::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `actually_private::T`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::ignored_any::IgnoredAny`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for (T0, T1)>::deserialize::TupleVisitor<std::net::Ipv4Addr, u16>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for (T0, T1)>::deserialize::TupleVisitor<std::net::Ipv6Addr, u16>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for f32>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for f64>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i128>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i16>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i32>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i64>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for i8>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for isize>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::IpAddr>::deserialize::EnumVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::net::SocketAddr>::deserialize::EnumVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI128>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI16>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI32>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI64>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroI8>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroIsize>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU128>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU16>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU32>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU64>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroU8>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::num::NonZeroUsize>::deserialize::NonZeroVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::Duration>::deserialize::DurationVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for std::time::SystemTime>::deserialize::DurationVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u128>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u16>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u32>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u64>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for u8>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::<impl de::Deserialize<'de> for usize>::deserialize::PrimitiveVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::BoolVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::BytesVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::CStringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::CharVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::OsStringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::PathBufVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::PathVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::StrVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::StringVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `de::impls::UnitVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `ser::impossible::Impossible<(), std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.void`: 0 bytes
print-type-size     field `.ok`: 0 bytes
print-type-size     field `.error`: 0 bytes
print-type-size type: `ser::impossible::Void`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::cell::BorrowError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&__private::de::content::Content<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, __private::ser::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(__private::de::content::Content<'_>, __private::de::content::Content<'_>)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(__private::ser::content::Content, __private::ser::content::Content)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(alloc::collections::btree::node::marker::Owned, alloc::collections::btree::node::marker::LeafOrInternal)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::net::Ipv4Addr, u16)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(std::net::Ipv6Addr, u16)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<__private::de::content::Content<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<__private::de::content::TagOrContent<'_>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<__private::ser::content::Content>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn core::panic::BoxMeUp>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn de::Expected>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::ffi::CStr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::mem::MaybeUninit<__private::de::content::Content<'_>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::IpAddr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::Ipv4Addr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::Ipv6Addr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::SocketAddr>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::SocketAddrV4>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::net::SocketAddrV6>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::path::Path>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<std::alloc::Global>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<ser::impossible::Impossible<(), std::fmt::Error>, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `MemUsageNode`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Detailed`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Size`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `hashbrown::map::HashMap<&str, MemUsageNode, std::collections::hash_map::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `std::collections::HashMap<&str, MemUsageNode>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `hashbrown::map::Iter<'_, &str, MemUsageNode>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `hashbrown::raw::RawIter<(&str, MemUsageNode)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `std::collections::hash_map::Iter<'_, &str, MemUsageNode>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.base`: 40 bytes
print-type-size type: `std::collections::hash_map::Values<'_, &str, MemUsageNode>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 40 bytes
print-type-size type: `std::iter::Map<std::collections::hash_map::Values<'_, &str, MemUsageNode>, for<'a> fn(&'a MemUsageNode) -> usize {MemUsageNode::total}>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 40 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(&str, MemUsageNode)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(&str, MemUsageNode)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `hashbrown::raw::RawTableInner<std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size     field `.4`: 1 bytes
print-type-size     field `.5`: 1 bytes
print-type-size     field `.6`: 1 bytes
print-type-size     field `.7`: 1 bytes
print-type-size     field `.8`: 1 bytes
print-type-size     field `.9`: 1 bytes
print-type-size     field `.10`: 1 bytes
print-type-size     field `.11`: 1 bytes
print-type-size     field `.12`: 1 bytes
print-type-size     field `.13`: 1 bytes
print-type-size     field `.14`: 1 bytes
print-type-size     field `.15`: 1 bytes
print-type-size type: `hashbrown::raw::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `std::boxed::Box<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::DebugMap<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     field `.has_key`: 1 bytes
print-type-size     field `.state`: 1 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::option::Option<(&&str, &MemUsageNode)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `hashbrown::raw::Bucket<(&str, MemUsageNode)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(&str, MemUsageNode)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&str, MemUsageNode)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `core::fmt::builders::PadAdapterState`: 1 bytes, alignment: 1 bytes
print-type-size     field `.on_newline`: 1 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&&str, &MemUsageNode)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, MemUsageNode)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::collections::btree::node::marker::Edge>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `complex::small::SmallComplex`: 96 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size     field `.first_limbs`: 16 bytes
print-type-size     field `.last_limbs`: 16 bytes
print-type-size type: `complex::big::BorrowComplex<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `complex::big::Complex`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `complex::ord::OrdComplex`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 64 bytes
print-type-size type: `complex::small::Mpc`: 64 bytes, alignment: 8 bytes
print-type-size     field `.re`: 32 bytes
print-type-size     field `.im`: 32 bytes
print-type-size type: `gmp_mpfr_sys::mpc::mpc_t`: 64 bytes, alignment: 8 bytes
print-type-size     field `.re`: 32 bytes
print-type-size     field `.im`: 32 bytes
print-type-size type: `rational::small::SmallRational`: 64 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `.first_limbs`: 16 bytes
print-type-size     field `.last_limbs`: 16 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<complex::big::Complex>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.value`: 64 bytes
print-type-size type: `std::mem::MaybeUninit<complex::big::Complex>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 64 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 64 bytes
print-type-size type: `std::option::Option<complex::big::Complex>`: 64 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 64 bytes
print-type-size         field `.0`: 64 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `complex::big::Format`: 48 bytes, alignment: 8 bytes
print-type-size     field `.prefix`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.radix`: 4 bytes
print-type-size     field `.round`: 2 bytes
print-type-size     field `.to_upper`: 1 bytes
print-type-size     field `.sign_plus`: 1 bytes
print-type-size     field `.exp`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::big::ParseIncomplete`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Complex`: 48 bytes
print-type-size         field `.0`: 24 bytes
print-type-size         field `.1`: 24 bytes
print-type-size     variant `Real`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `float::small::SmallFloat`: 48 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size     field `.limbs`: 16 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<complex::big::ParseIncomplete, complex::big::ParseComplexError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size type: `complex::arith::AddOwnedFloatIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::AddOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::DivFromOwnedFloatIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 32 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivOwnedFloatIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::DivOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::MulOwnedFloatIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::MulOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::PowOwnedFloatIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubFromOwnedFloatIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 32 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 32 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubOwnedFloatIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::AddOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::DivFromOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 32 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::MulOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::SubFromOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 32 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubOwnedRationalIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 32 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::big::PowModIncomplete<'_>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.sinverse`: 16 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.exponent`: 8 bytes
print-type-size     field `.modulo`: 8 bytes
print-type-size type: `rational::big::ParseIncomplete`: 40 bytes, alignment: 8 bytes
print-type-size     field `.den_start`: 8 bytes
print-type-size     field `.digits`: 24 bytes
print-type-size     field `.radix`: 4 bytes
print-type-size     field `.is_negative`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `serdeize::Data`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size     field `.radix`: 4 bytes
print-type-size     field `.prec`: 12 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, rational::big::ParseRationalError>, rational::big::ParseIncomplete>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<integer::big::PowModIncomplete<'_>>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<rational::big::ParseIncomplete, rational::big::ParseRationalError>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `float::arith::MulAddMulIncomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size type: `float::arith::MulSubMulIncomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size type: `float::big::BorrowFloat<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `float::big::Float`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `float::ord::OrdFloat`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `float::small::Mpfr`: 32 bytes, alignment: 8 bytes
print-type-size     field `.prec`: 8 bytes
print-type-size     field `.sign`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.exp`: 8 bytes, alignment: 8 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `gmp_mpfr_sys::gmp::mpq_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.num`: 16 bytes
print-type-size     field `.den`: 16 bytes
print-type-size type: `gmp_mpfr_sys::gmp::randfnptr_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.seed`: 8 bytes
print-type-size     field `.get`: 8 bytes
print-type-size     field `.clear`: 8 bytes
print-type-size     field `.iset`: 8 bytes
print-type-size type: `gmp_mpfr_sys::gmp::randstate_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.seed`: 16 bytes
print-type-size     field `.alg`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.algdata`: 8 bytes, alignment: 8 bytes
print-type-size type: `gmp_mpfr_sys::mpfr::mpfr_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.prec`: 8 bytes
print-type-size     field `.sign`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.exp`: 8 bytes, alignment: 8 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `integer::arith::AddMulI128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 24 bytes
print-type-size type: `integer::arith::AddMulU128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 24 bytes
print-type-size type: `integer::arith::SubMulFromI128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 24 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromU128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 24 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulI128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 24 bytes
print-type-size type: `integer::arith::SubMulU128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 24 bytes
print-type-size type: `integer::big::ParseIncomplete`: 32 bytes, alignment: 8 bytes
print-type-size     field `.digits`: 24 bytes
print-type-size     field `.radix`: 4 bytes
print-type-size     field `.is_negative`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `integer::division::DivRoundingFromI128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ceil`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Floor`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Euc`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `integer::division::DivRoundingFromU128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ceil`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Floor`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Euc`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `integer::division::DivRoundingI128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Ceil`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Floor`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Euc`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size type: `integer::division::DivRoundingU128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Ceil`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Floor`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Euc`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size type: `integer::division::RemRoundingFromI128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ceil`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Floor`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Euc`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `integer::division::RemRoundingFromU128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ceil`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Floor`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Euc`: 24 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `integer::division::RemRoundingI128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Ceil`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Floor`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Euc`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size type: `integer::division::RemRoundingU128Incomplete<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Ceil`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Floor`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size     variant `Euc`: 24 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 16 bytes
print-type-size type: `integer::small::SmallInteger`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.limbs`: 16 bytes
print-type-size type: `rand::RandState<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `rand::ThreadRandState<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `rational::big::BorrowRational<'_>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `rational::big::Rational`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 32 bytes
print-type-size type: `rational::small::Mpq`: 32 bytes, alignment: 8 bytes
print-type-size     field `.num`: 16 bytes
print-type-size     field `.den`: 16 bytes
print-type-size type: `std::borrow::Cow<'_, str>`: 32 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Owned`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<float::big::Float>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<gmp_mpfr_sys::gmp::randstate_t>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<gmp_mpfr_sys::mpfr::mpfr_t>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<rand::RandState<'_>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<rand::ThreadRandState<'_>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::ManuallyDrop<rational::big::Rational>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<float::big::Float>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<gmp_mpfr_sys::gmp::randstate_t>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<gmp_mpfr_sys::mpfr::mpfr_t>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<rational::big::Rational>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, integer::big::ParseIntegerError>, integer::big::ParseIncomplete>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::option::Option<(&[u8], &[u8])>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<float::big::Float>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<rand::RandState<'_>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<rand::ThreadRandState<'_>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<rational::big::Rational>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<integer::big::ParseIncomplete, integer::big::ParseIntegerError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<rational::big::Rational, rational::TryFromFloatError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<rational::big::Rational, rational::big::ParseRationalError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::boxed::Box<dyn rand::RandGen>, rand::RandState<'_>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `std::result::Result<std::boxed::Box<dyn rand::ThreadRandGen>, rand::ThreadRandState<'_>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         padding: 16 bytes
print-type-size         field `.0`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@std::rt::begin_panic<&str>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `complex::arith::AddI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::AddMulIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::AddOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::AddU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::DivFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::DivOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::DivU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::MulI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::MulOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::MulU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::PowFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::PowFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::PowI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::PowOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::PowU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubMulFromIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubMulIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::AddI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::AddMulIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::AddOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::AddU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::DivFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivFromOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::DivOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::DivU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::MulI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::MulOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::MulU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::PowFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::PowFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::PowI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::PowOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::PowU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::RemFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::RemFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::RemI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::RemU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::SubFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubFromOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::SubMulFromIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubMulIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::SubOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::SubU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::big::Format`: 24 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.radix`: 4 bytes
print-type-size     field `.round`: 1 bytes
print-type-size     field `.to_upper`: 1 bytes
print-type-size     field `.exp`: 1 bytes
print-type-size     end padding: 1 bytes
print-type-size type: `float::big::ParseIncomplete`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `CString`: 23 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.radix`: 4 bytes, alignment: 4 bytes
print-type-size         field `.c_string`: 16 bytes
print-type-size     variant `Special`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `NegNan`: 0 bytes
print-type-size type: `gmp_mpfr_sys::gmp::mpf_t`: 24 bytes, alignment: 8 bytes
print-type-size     field `.prec`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.exp`: 8 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `integer::arith::AddI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddMulI16Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddMulI32Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddMulI64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddMulI8Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddMulIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddMulU16Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddMulU32Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddMulU64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddMulU8Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitAndI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitAndU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitOrI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitOrU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitXorI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitXorU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::DivFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::DivFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::DivI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::DivU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::MulI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::MulU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::RemFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::RemFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::RemI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::RemU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromI16Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromI32Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromI64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromI8Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromU16Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromU32Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromU64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulFromU8Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubMulI16Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubMulI32Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubMulI64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubMulI8Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubMulIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubMulU16Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubMulU32Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubMulU64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubMulU8Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::big::InvertIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.sinverse`: 16 bytes
print-type-size     field `.modulo`: 8 bytes
print-type-size type: `integer::big::PrivateUnsignedPrimitive`: 24 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size     field `.nails`: 8 bytes
print-type-size type: `integer::big::RandomBelowIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 16 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `integer::big::RandomBitsIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 16 bytes
print-type-size     field `.bits`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::big::SecurePowModIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.exponent`: 8 bytes
print-type-size     field `.modulo`: 8 bytes
print-type-size type: `integer::division::DivRoundingFromI64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::DivRoundingFromU64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::DivRoundingI64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `integer::division::DivRoundingIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::DivRoundingU64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `integer::division::RemRoundingFromI64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::RemRoundingFromU64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::RemRoundingI64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `integer::division::RemRoundingIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.0`: 8 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::RemRoundingU64Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Trunc`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ceil`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Floor`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Euc`: 16 bytes
print-type-size         field `.1`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `rational::arith::AddI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::AddOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::AddU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::DivFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::DivFromOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::DivFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::DivI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::DivOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::DivU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::MulI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::MulOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::MulU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::SubFromI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::SubFromOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::SubFromU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 16 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::SubI128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::SubOwnedIntegerIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::SubU128Incomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 16 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `serdeize::BigVisitor`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Enumerate<std::slice::Iter<'_, u8>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.count`: 8 bytes
print-type-size type: `std::iter::Rev<std::iter::Enumerate<std::slice::Iter<'_, u8>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 24 bytes
print-type-size type: `std::mem::ManuallyDrop<gmp_mpfr_sys::gmp::mpf_t>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::mem::MaybeUninit<gmp_mpfr_sys::gmp::mpf_t>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 24 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 24 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>, std::ptr::NonNull<[u8]>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, std::alloc::Layout>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::RangeInclusive<usize>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(integer::big::Integer, i32)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(integer::big::Integer, std::cmp::Ordering)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<integer::big::InvertIncomplete<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::result::Result<float::big::ParseIncomplete, float::big::ParseFloatError>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::string::String>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u128>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<float::big::ParseIncomplete, float::big::ParseFloatError>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `Err`: 2 bytes
print-type-size         padding: 1 bytes
print-type-size         field `.0`: 1 bytes, alignment: 1 bytes
print-type-size type: `std::result::Result<i128, integer::TryFromIntegerError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<integer::big::Integer, integer::big::Integer>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::collections::TryReserveErrorKind>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::collections::TryReserveError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<u128, integer::TryFromIntegerError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::vec::Vec<*const gmp_mpfr_sys::mpc::mpc_t>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<*const gmp_mpfr_sys::mpfr::mpfr_t>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/src/complex/ord.rs:118:24: 118:26]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/src/float/big.rs:9748:19: 9748:23]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/src/float/big.rs:9749:18: 9749:20]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/src/float/big.rs:9765:19: 9765:23]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/src/float/big.rs:9766:18: 9766:20]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const gmp_mpfr_sys::mpc::mpc_t>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<*const gmp_mpfr_sys::mpfr::mpfr_t>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `complex::arith::AddF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::AddF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::AddFloatIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::AddI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::AddI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::AddI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::AddI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::AddIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::AddIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::AddRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::AddU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::AddU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::AddU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::AddU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::DivF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::DivF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::DivFloatIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivFromF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::DivFromF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivFromFloatIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::DivFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::DivFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::DivFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::DivFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::DivFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::DivI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::DivI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::DivI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::DivI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::DivIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::DivU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::DivU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::DivU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::DivU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::MulF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::MulF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::MulFloatIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::MulI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::MulI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::MulI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::MulI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::MulIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::MulIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::MulRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::MulU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::MulU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::MulU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::MulU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::PowF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::PowF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::PowFloatIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::PowFromF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::PowFromF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::PowFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::PowFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::PowFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::PowFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::PowFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::PowFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::PowFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::PowFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::PowI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::PowI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::PowI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::PowI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::PowIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::PowIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::PowU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::PowU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::PowU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::PowU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::ShlI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::ShlIsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::ShlU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::ShlUsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::ShrI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::ShrIsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::ShrU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::ShrUsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::SubF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubFloatIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::SubFromF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromFloatIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::SubFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::SubFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::SubFromIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::SubFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::SubFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::SubI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::SubI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::SubI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::arith::SubIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `complex::arith::SubU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `complex::arith::SubU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `complex::arith::SubU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `complex::arith::SubU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::big::MulIIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.negative`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `complex::big::RandomBitsIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 16 bytes
print-type-size type: `complex::big::RandomContIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 16 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `core::fmt::builders::DebugInner<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 8 bytes
print-type-size     field `.result`: 1 bytes
print-type-size     field `.has_fields`: 1 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::AddF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::AddF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::AddI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::AddI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::AddI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::AddI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::AddIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::AddIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::AddRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::AddU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::AddU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::AddU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::AddU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::DivF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::DivF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::DivFromF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::DivFromF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::DivFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::DivFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::DivFromIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivFromRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::DivFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::DivFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::DivI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::DivI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::DivI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::DivI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::DivIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::DivU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::DivU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::DivU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::DivU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::MulF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::MulF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::MulI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::MulI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::MulI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::MulI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::MulIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::MulIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::MulRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::MulU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::MulU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::MulU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::MulU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::PowF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::PowF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::PowFromF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::PowFromF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::PowFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::PowFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::PowFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::PowFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::PowFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::PowFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::PowFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::PowFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::PowI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::PowI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::PowI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::PowI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::PowIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::PowIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::PowU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::PowU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::PowU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::PowU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::RemF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::RemF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::RemFromF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::RemFromF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::RemFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::RemFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::RemFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::RemFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::RemFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::RemFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::RemFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::RemFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::RemI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::RemI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::RemI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::RemI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::RemIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::RemU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::RemU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::RemU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::RemU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::ShlI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::ShlIsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::ShlU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::ShlUsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::ShrI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::ShrIsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::ShrU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::ShrUsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::SubF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::SubF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::SubFromF32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::SubFromF64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::SubFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::SubFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::SubFromIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubFromRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::SubFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::SubFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::SubI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::SubI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::SubI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::SubI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::arith::SubIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubRationalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `float::arith::SubU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `float::arith::SubU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::arith::SubU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `float::arith::SubU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `float::big::AgmIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 8 bytes
print-type-size type: `float::big::Atan2Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size type: `float::big::CopysignIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.y`: 8 bytes
print-type-size type: `float::big::GammaIncIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.x`: 8 bytes
print-type-size type: `float::big::HypotIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 8 bytes
print-type-size type: `float::big::JnIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.n`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::big::MaxIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 8 bytes
print-type-size type: `float::big::MinIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 8 bytes
print-type-size type: `float::big::PositiveDiffIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 8 bytes
print-type-size type: `float::big::RandomBitsIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 16 bytes
print-type-size type: `float::big::RandomContIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 16 bytes
print-type-size type: `float::big::RandomExpIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 16 bytes
print-type-size type: `float::big::RandomNormalIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rng`: 16 bytes
print-type-size type: `float::big::RemainderIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.divisor`: 8 bytes
print-type-size type: `float::big::RootIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.k`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `float::big::YnIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.n`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `gmp_mpfr_sys::gmp::mpz_t`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `gmp_mpfr_sys::gmp::randseed_t`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `integer::arith::AddI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::AddI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::AddI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::AddIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::AddU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::AddU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::AddU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::AddU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::BitAndI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::BitAndI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::BitAndI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitAndI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::BitAndIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::BitAndU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::BitAndU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::BitAndU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitAndU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::BitOrI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::BitOrI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::BitOrI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitOrI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::BitOrIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::BitOrU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::BitOrU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::BitOrU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitOrU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::BitXorI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::BitXorI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::BitXorI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitXorI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::BitXorIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::BitXorU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::BitXorU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::BitXorU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::BitXorU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::DivFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::DivFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::DivFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::DivFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::DivFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::DivFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::DivFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::DivFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::DivI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::DivI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::DivI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::DivI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::DivIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::DivU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::DivU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::DivU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::DivU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::MulI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::MulI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::MulI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::MulI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::MulIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::MulU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::MulU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::MulU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::MulU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::PowU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::RemFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::RemFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::RemFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::RemFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::RemFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::RemFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::RemFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::RemFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::RemI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::RemI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::RemI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::RemI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::RemIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::RemU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::RemU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::RemU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::RemU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::ShlI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::ShlIsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::ShlU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::ShlUsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::ShrI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::ShrIsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::ShrU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::ShrUsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::SubFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::SubFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::SubFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::SubFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::SubFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::SubI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::SubI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::SubI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::arith::SubIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `integer::arith::SubU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `integer::arith::SubU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::arith::SubU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `integer::arith::SubU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `integer::big::BinomialIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.k`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::big::BorrowInteger<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `integer::big::DivExactIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.divisor`: 8 bytes
print-type-size type: `integer::big::DivExactUIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.divisor`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::big::DivRemCeilIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.divisor`: 8 bytes
print-type-size type: `integer::big::DivRemEucIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.divisor`: 8 bytes
print-type-size type: `integer::big::DivRemFloorIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.divisor`: 8 bytes
print-type-size type: `integer::big::DivRemIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.divisor`: 8 bytes
print-type-size type: `integer::big::DivRemRoundIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.divisor`: 8 bytes
print-type-size type: `integer::big::GcdCofactorsIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 8 bytes
print-type-size type: `integer::big::GcdIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 8 bytes
print-type-size type: `integer::big::GcdUIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::big::Integer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `integer::big::KeepBitsIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.n`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::big::KeepSignedBitsIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.n`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::big::LcmIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 8 bytes
print-type-size type: `integer::big::LcmUIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.other`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::big::RemoveFactorIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.factor`: 8 bytes
print-type-size type: `integer::big::RootIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.n`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::big::RootRemIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size     field `.n`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `integer::division::DivRoundingFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Trunc`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::DivRoundingFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Trunc`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::DivRoundingFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Trunc`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::DivRoundingFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Trunc`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::DivRoundingFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Trunc`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::DivRoundingFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Trunc`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::DivRoundingI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Trunc`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::DivRoundingI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Trunc`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ceil`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Floor`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Euc`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `integer::division::DivRoundingI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Trunc`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::DivRoundingU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Trunc`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::DivRoundingU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Trunc`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ceil`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Floor`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Euc`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `integer::division::DivRoundingU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Trunc`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::RemRoundingFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Trunc`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::RemRoundingFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Trunc`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::RemRoundingFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Trunc`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::RemRoundingFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Trunc`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 14 bytes
print-type-size         field `.0`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::RemRoundingFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Trunc`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Ceil`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Floor`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size     variant `Euc`: 12 bytes
print-type-size         field `.0`: 4 bytes
print-type-size         field `.1`: 8 bytes
print-type-size type: `integer::division::RemRoundingFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Trunc`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 15 bytes
print-type-size         field `.0`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.1`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::RemRoundingI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Trunc`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::RemRoundingI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Trunc`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ceil`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Floor`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Euc`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `integer::division::RemRoundingI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Trunc`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::RemRoundingU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Trunc`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 14 bytes
print-type-size         field `.1`: 2 bytes
print-type-size         padding: 4 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::division::RemRoundingU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Trunc`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ceil`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Floor`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Euc`: 12 bytes
print-type-size         field `.1`: 4 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `integer::division::RemRoundingU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Trunc`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ceil`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Floor`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Euc`: 15 bytes
print-type-size         field `.1`: 1 bytes
print-type-size         padding: 6 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `integer::small::Mpz`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `rational::arith::AddI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::AddI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::AddI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::AddI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::AddIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::AddIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::AddU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::AddU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::AddU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::AddU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::DivFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::DivFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::DivFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::DivFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::DivFromIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::DivFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::DivFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::DivFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::DivFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::DivI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::DivI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::DivI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::DivI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::DivIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::DivIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::DivU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::DivU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::DivU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::DivU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::MulI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::MulI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::MulI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::MulI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::MulIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::MulIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::MulU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::MulU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::MulU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::MulU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::PowI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::PowU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::ShlI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::ShlIsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::ShlU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::ShlUsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::ShrI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::ShrIsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::ShrU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::ShrUsizeIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::SubFromI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::SubFromI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::SubFromI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::SubFromI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::SubFromIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::SubFromU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::SubFromU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::SubFromU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::SubFromU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::SubI16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::SubI32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::SubI64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::SubI8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `rational::arith::SubIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::SubIntegerIncomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size type: `rational::arith::SubU16Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `rational::arith::SubU32Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rational::arith::SubU64Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.rhs`: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size type: `rational::arith::SubU8Incomplete<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.lhs`: 8 bytes
print-type-size     field `.rhs`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::boxed::Box<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn rand::RandGen>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn rand::ThreadRandGen>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::collections::Bound<&i32>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Included`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Excluded`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Unbounded`: 0 bytes
print-type-size type: `std::collections::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     field `.kind`: 16 bytes
print-type-size type: `std::collections::TryReserveErrorKind`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.non_exhaustive`: 0 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `std::ffi::CString`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::DebugList<'_, '_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<integer::big::Integer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<integer::big::Integer>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<[u8]>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveError>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(usize, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<*mut gmp_mpfr_sys::gmp::mpz_t>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<f64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<integer::big::BorrowInteger<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<integer::big::Integer>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<isize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<dyn rand::RandGen>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::boxed::Box<dyn rand::ThreadRandGen>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<u64>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn rand::RandGen>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn rand::ThreadRandGen>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn rand::RandGen>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn rand::ThreadRandGen>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const gmp_mpfr_sys::mpc::mpc_t]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[*const gmp_mpfr_sys::mpfr::mpfr_t]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const gmp_mpfr_sys::mpc::mpc_t]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[*const gmp_mpfr_sys::mpfr::mpfr_t]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u64]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<i64, integer::TryFromIntegerError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<integer::big::Integer, integer::big::ParseIntegerError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<isize, integer::TryFromIntegerError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::alloc::Layout, std::alloc::LayoutError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u64, integer::TryFromIntegerError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, integer::TryFromIntegerError>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, std::collections::TryReserveErrorKind>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::rt::begin_panic::PanicPayload<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::slice::Iter<'_, &[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `serdeize::PrecVal`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Two`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `One`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::ops::RangeInclusive<i32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::option::Option<(u32, u32)>`: 12 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<serdeize::PrecVal>`: 12 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 12 bytes
print-type-size         field `.0`: 12 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/src/integer/big.rs:3537:46: 3537:56]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#1}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `az::Round<f64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `complex::arith::NegIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.val`: 8 bytes
print-type-size type: `complex::big::AbsIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::AcosIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::AcoshIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::ArgIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::AsinIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::AsinhIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::AtanIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::AtanhIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::ConjIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::CosIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::CoshIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::ExpIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::LnIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::Log10Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::NormIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::ProjIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::RecipIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::RootOfUnityIncomplete`: 8 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size     field `.k`: 4 bytes
print-type-size type: `complex::big::SinCosIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::SinIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::SinhIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::SqrtIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::SquareIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::TanIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `complex::big::TanhIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::arith::NegIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.val`: 8 bytes
print-type-size type: `float::big::AbsIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::AcosIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::AcoshIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::AiIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::AsinIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::AsinhIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::AtanIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::AtanhIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::CbrtIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::CeilIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::CosIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::CoshIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::CotIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::CothIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::CscIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::CschIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::DigammaIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::EintIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::ErfIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::ErfcIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::Exp10Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::Exp2Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::ExpIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::ExpM1Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::FloorIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::FractIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::GammaIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::IExpIncomplete`: 8 bytes, alignment: 4 bytes
print-type-size     field `.i`: 4 bytes
print-type-size     field `.exp`: 4 bytes
print-type-size type: `float::big::IPowUIncomplete`: 8 bytes, alignment: 4 bytes
print-type-size     field `.base`: 4 bytes
print-type-size     field `.exponent`: 4 bytes
print-type-size type: `float::big::J0Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::J1Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::Li2Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::Ln1pIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::LnAbsGammaIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::LnGammaIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::LnIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::Log10Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::Log2Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::RecipIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::RecipSqrtIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::RoundEvenIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::RoundIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::SecIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::SechIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::SignumIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::SinCosIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::SinIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::SinhCoshIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::SinhIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::SqrtIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::SquareIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::TanIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::TanhIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::TruncFractIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::TruncIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::UExpIncomplete`: 8 bytes, alignment: 4 bytes
print-type-size     field `.u`: 4 bytes
print-type-size     field `.exp`: 4 bytes
print-type-size type: `float::big::UPowUIncomplete`: 8 bytes, alignment: 4 bytes
print-type-size     field `.base`: 4 bytes
print-type-size     field `.exponent`: 4 bytes
print-type-size type: `float::big::Y0Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::Y1Incomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `float::big::ZetaIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `integer::arith::NegIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `integer::arith::NotIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `integer::big::AbsIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `integer::big::BinomialUIncomplete`: 8 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size     field `.k`: 4 bytes
print-type-size type: `integer::big::FactorialMIncomplete`: 8 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size     field `.m`: 4 bytes
print-type-size type: `integer::big::IPowUIncomplete`: 8 bytes, alignment: 4 bytes
print-type-size     field `.base`: 4 bytes
print-type-size     field `.exponent`: 4 bytes
print-type-size type: `integer::big::NextPowerOfTwoIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `integer::big::NextPrimeIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `integer::big::SignumIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `integer::big::SqrtIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `integer::big::SqrtRemIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `integer::big::UPowUIncomplete`: 8 bytes, alignment: 4 bytes
print-type-size     field `.base`: 4 bytes
print-type-size     field `.exponent`: 4 bytes
print-type-size type: `macros::CastPtr<*const gmp_mpfr_sys::mpc::mpc_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<*const gmp_mpfr_sys::mpfr::mpfr_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<complex::big::Complex>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<complex::small::Mpc>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<float::big::Float>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<float::small::Mpfr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<gmp_mpfr_sys::gmp::mpz_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<gmp_mpfr_sys::mpfr::mpfr_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<integer::small::Mpz>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<rational::small::Mpq>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<complex::big::Complex>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<complex::small::Mpc>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<float::big::Float>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<float::small::Mpfr>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<gmp_mpfr_sys::gmp::mpz_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<gmp_mpfr_sys::mpfr::mpfr_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<integer::big::Integer>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<integer::small::Mpz>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<rational::big::Rational>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<rational::small::Mpq>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<std::mem::MaybeUninit<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `macros::CastPtrMut<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `rand::hide::Private<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `rational::arith::NegIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.op`: 8 bytes
print-type-size type: `rational::big::AbsIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::CeilIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::FloorIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::FractCeilIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::FractFloorIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::FractRoundIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::FractTruncIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::RecipIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::RemCeilIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::RemFloorIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::RemRoundIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::RemTruncIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::RoundIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::SignumIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `rational::big::TruncIncomplete<'_>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ref_self`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<&mut dyn rand::RandGen>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<&mut dyn rand::ThreadRandGen>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::boxed::Box<dyn rand::RandGen>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::boxed::Box<dyn rand::ThreadRandGen>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::ptr::NonNull<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::iter::Rev<std::ops::Range<i32>>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<*mut i8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<&mut dyn rand::RandGen>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<&mut dyn rand::ThreadRandGen>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::boxed::Box<dyn rand::RandGen>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<std::boxed::Box<dyn rand::ThreadRandGen>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<*mut i8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<i64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::ops::RangeToInclusive<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&&[u8]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&float::big::Float>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&integer::big::Integer>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut integer::big::Integer>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::fmt::Arguments<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn core::panic::BoxMeUp>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn rand::MutRandState>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn rand::RandGen>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn rand::ThreadRandGen>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&[u8]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&mut dyn rand::RandGen>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&mut dyn rand::ThreadRandGen>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const gmp_mpfr_sys::mpc::mpc_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<*const gmp_mpfr_sys::mpfr::mpfr_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<libc::c_void>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn rand::RandGen>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::boxed::Box<dyn rand::ThreadRandGen>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&mut dyn rand::RandGen>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&mut dyn rand::ThreadRandGen>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const gmp_mpfr_sys::mpc::mpc_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<*const gmp_mpfr_sys::mpfr::mpfr_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn rand::RandGen>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::boxed::Box<dyn rand::ThreadRandGen>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<&[u8]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<gmp_mpfr_sys::gmp::mpz_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<&[u8]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<gmp_mpfr_sys::gmp::mpz_t>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<i32, integer::TryFromIntegerError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, integer::TryFromIntegerError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `az::Round<f32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `float::big::FactorialIncomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size type: `float::big::LnUIncomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.u`: 4 bytes
print-type-size type: `float::big::SqrtUIncomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.u`: 4 bytes
print-type-size type: `float::big::ZetaUIncomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.u`: 4 bytes
print-type-size type: `gmp_mpfr_sys::mpfr::rnd_t`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `RNDN`: 0 bytes
print-type-size     variant `RNDZ`: 0 bytes
print-type-size     variant `RNDU`: 0 bytes
print-type-size     variant `RNDD`: 0 bytes
print-type-size     variant `RNDA`: 0 bytes
print-type-size     variant `RNDF`: 0 bytes
print-type-size     variant `RNDNA`: 0 bytes
print-type-size type: `integer::big::Factorial2Incomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size type: `integer::big::FactorialIncomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size type: `integer::big::Fibonacci2Incomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size type: `integer::big::FibonacciIncomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size type: `integer::big::Lucas2Incomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size type: `integer::big::LucasIncomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size type: `integer::big::PrimorialIncomplete`: 4 bytes, alignment: 4 bytes
print-type-size     field `.n`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::option::Option<i16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u16>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Some`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<i16, integer::TryFromIntegerError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u16, integer::TryFromIntegerError>`: 4 bytes, alignment: 2 bytes
print-type-size     discriminant: 2 bytes
print-type-size     variant `Ok`: 2 bytes
print-type-size         field `.0`: 2 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `complex::big::ParseComplexError`: 2 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 2 bytes
print-type-size type: `complex::big::ParseErrorKind`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidFloat`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `InvalidRealFloat`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `InvalidImagFloat`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `NoDigits`: 0 bytes
print-type-size     variant `NoRealDigits`: 0 bytes
print-type-size     variant `NoImagDigits`: 0 bytes
print-type-size     variant `MissingSeparator`: 0 bytes
print-type-size     variant `MultipleSeparators`: 0 bytes
print-type-size     variant `CloseNotLast`: 0 bytes
print-type-size type: `std::option::Option<i8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u8>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<i8, integer::TryFromIntegerError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u8, integer::TryFromIntegerError>`: 2 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `alloc::raw_vec::AllocInit`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Uninitialized`: 0 bytes
print-type-size     variant `Zeroed`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `float::Constant`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Log2`: 0 bytes
print-type-size     variant `Pi`: 0 bytes
print-type-size     variant `Euler`: 0 bytes
print-type-size     variant `Catalan`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `float::FreeCache`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Local`: 0 bytes
print-type-size     variant `Global`: 0 bytes
print-type-size     variant `All`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `float::Round`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nearest`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Up`: 0 bytes
print-type-size     variant `Down`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `float::Special`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `NegZero`: 0 bytes
print-type-size     variant `Infinity`: 0 bytes
print-type-size     variant `NegInfinity`: 0 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `__Nonexhaustive`: 0 bytes
print-type-size type: `float::big::ExpFormat`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Exp`: 0 bytes
print-type-size     variant `Point`: 0 bytes
print-type-size type: `float::big::ParseErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `NoDigits`: 0 bytes
print-type-size     variant `SignifNoDigits`: 0 bytes
print-type-size     variant `ExpNoDigits`: 0 bytes
print-type-size     variant `PointInExp`: 0 bytes
print-type-size     variant `TooManyPoints`: 0 bytes
print-type-size     variant `TooManyExp`: 0 bytes
print-type-size type: `float::big::ParseFloatError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `integer::Order`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Lsf`: 0 bytes
print-type-size     variant `LsfLe`: 0 bytes
print-type-size     variant `LsfBe`: 0 bytes
print-type-size     variant `Msf`: 0 bytes
print-type-size     variant `MsfLe`: 0 bytes
print-type-size     variant `MsfBe`: 0 bytes
print-type-size type: `integer::big::IsPrime`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `No`: 0 bytes
print-type-size     variant `Probably`: 0 bytes
print-type-size     variant `Yes`: 0 bytes
print-type-size type: `integer::big::ParseErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `NoDigits`: 0 bytes
print-type-size type: `integer::big::ParseIntegerError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `libc::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `rational::big::ParseErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `NoDigits`: 0 bytes
print-type-size     variant `NumerNoDigits`: 0 bytes
print-type-size     variant `DenomNoDigits`: 0 bytes
print-type-size     variant `TooManySlashes`: 0 bytes
print-type-size     variant `DenomZero`: 0 bytes
print-type-size type: `rational::big::ParseRationalError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `serdeize::Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Radix`: 0 bytes
print-type-size     variant `Value`: 0 bytes
print-type-size type: `serdeize::PrecField`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Field`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `Prec`: 0 bytes
print-type-size type: `serdeize::PrecReq`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `One`: 0 bytes
print-type-size     variant `Two`: 0 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::fmt::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::num::FpCategory`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Nan`: 0 bytes
print-type-size     variant `Infinite`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size     variant `Subnormal`: 0 bytes
print-type-size     variant `Normal`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<bool>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<serdeize::Field>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<serdeize::PrecField>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::fmt::Alignment>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<(), ()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, integer::big::ParseIntegerError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, rational::big::ParseRationalError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/src/float/big.rs:1718:22: 1718:25]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/src/float/casts.rs:297:51: 297:54]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@/home/aozdemir/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rug-1.15.0/src/integer/big.rs:6019:47: 6019:51]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::cmp::Ordering as std::option::SpecOptionPartialEq>::eq::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::cmp::Ordering as std::option::SpecOptionPartialEq>::eq::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::finish_grow<std::alloc::Global>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@alloc::raw_vec::handle_reserve::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::f64::<impl f64>::log2::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `integer::TryFromIntegerError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._unused`: 0 bytes
print-type-size type: `rational::TryFromFloatError`: 0 bytes, alignment: 1 bytes
print-type-size     field `._unused`: 0 bytes
print-type-size type: `serdeize::FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `serdeize::PrecFieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::LayoutError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ffi::CStr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.inner`: 0 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&&[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&complex::big::Complex>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&dyn rand::RandGen>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&dyn rand::ThreadRandGen>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&float::big::Float>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&integer::big::Integer>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut dyn rand::RandGen>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut dyn rand::ThreadRandGen>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&rational::big::Rational>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const gmp_mpfr_sys::mpc::mpc_t>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<*const gmp_mpfr_sys::mpfr::mpfr_t>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<[u8]>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn core::panic::BoxMeUp>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn rand::MutRandState>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn rand::RandGen>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn rand::ThreadRandGen>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn rand::RandGen>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::boxed::Box<dyn rand::ThreadRandGen>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::collections::hash_map::DefaultHasher`: 72 bytes, alignment: 8 bytes
print-type-size     field `.0`: 72 bytes
print-type-size type: `std::hash::SipHasher13`: 72 bytes, alignment: 8 bytes
print-type-size     field `.hasher`: 72 bytes
print-type-size type: `std::hash::sip::Hasher<std::hash::sip::Sip13Rounds>`: 72 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.state`: 32 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size     field `.length`: 8 bytes
print-type-size     field `.tail`: 8 bytes
print-type-size     field `.ntail`: 8 bytes
print-type-size type: `std::fmt::Formatter<'_>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u64>, std::slice::ChunksMut<'_, u8>>`: 64 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 24 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Argument`: 56 bytes, alignment: 8 bytes
print-type-size     field `.format`: 48 bytes
print-type-size     field `.position`: 8 bytes
print-type-size type: `std::iter::Map<std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>, [closure@src/ff_field.rs:26:22: 26:32]>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 56 bytes
print-type-size type: `std::iter::Zip<std::iter::Rev<std::slice::Iter<'_, u64>>, std::iter::Rev<std::slice::Iter<'_, u64>>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u64>, std::slice::Iter<'_, u64>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::Iter<'_, u8>, std::slice::Iter<'_, u8>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::iter::Zip<std::slice::IterMut<'_, u64>, std::slice::Iter<'_, u64>>`: 56 bytes, alignment: 8 bytes
print-type-size     field `.a`: 16 bytes
print-type-size     field `.b`: 16 bytes
print-type-size     field `.index`: 8 bytes
print-type-size     field `.len`: 8 bytes
print-type-size     field `.a_len`: 8 bytes
print-type-size type: `std::option::Option<datasize::MemUsageNode>`: 56 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `datasize::MemUsageNode`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Detailed`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Size`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `hashbrown::map::HashMap<&str, datasize::MemUsageNode, std::collections::hash_map::RandomState>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.table`: 32 bytes
print-type-size     field `.hash_builder`: 16 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size type: `std::collections::HashMap<&str, datasize::MemUsageNode>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.base`: 48 bytes
print-type-size type: `std::fmt::Arguments<'_>`: 48 bytes, alignment: 8 bytes
print-type-size     field `.fmt`: 16 bytes
print-type-size     field `.pieces`: 16 bytes
print-type-size     field `.args`: 16 bytes
print-type-size type: `std::fmt::rt::v1::FormatSpec`: 48 bytes, alignment: 8 bytes
print-type-size     field `.precision`: 16 bytes
print-type-size     field `.width`: 16 bytes
print-type-size     field `.flags`: 4 bytes
print-type-size     field `.fill`: 4 bytes
print-type-size     field `.align`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::option::Option<std::fmt::Arguments<'_>>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]>, hashbrown::TryReserveError>`: 48 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 48 bytes
print-type-size         field `.0`: 48 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `FullFieldV`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `FBls12381`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `FBn254`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `IntField`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size type: `ff::derive::subtle::CtOption<ff_field::f_bls12381::Ft>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size     field `.is_some`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `ff::derive::subtle::CtOption<ff_field::f_bn254::Ft>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size     field `.is_some`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `hashbrown::raw::RawIter<(&str, datasize::MemUsageNode)>`: 40 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 32 bytes
print-type-size     field `.items`: 8 bytes
print-type-size type: `std::borrow::Cow<'_, FullFieldV>`: 40 bytes, alignment: 8 bytes
print-type-size     variant `Owned`: 40 bytes
print-type-size         field `.0`: 40 bytes
print-type-size     variant `Borrowed`: 16 bytes
print-type-size         padding: 8 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size type: `std::option::Option<[u64; 4]>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ff_field::f_bls12381::Ft>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<ff_field::f_bn254::Ft>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<ff_field::f_bls12381::Ft, &str>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ff_field::f_bls12381::Ft, std::num::ParseIntError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<ff_field::f_bn254::Ft, &str>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<ff_field::f_bn254::Ft, std::num::ParseIntError>`: 40 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 39 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `alloc::sync::ArcInner<rug::Integer>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.data`: 16 bytes
print-type-size type: `ff_field::f_bls12381::Ft`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `ff_field::f_bls12381::FtRepr`: 32 bytes, alignment: 1 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `ff_field::f_bn254::Ft`: 32 bytes, alignment: 8 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `ff_field::f_bn254::FtRepr`: 32 bytes, alignment: 1 bytes
print-type-size     field `.0`: 32 bytes
print-type-size type: `gmp_mpfr_sys::gmp::randstate_t`: 32 bytes, alignment: 8 bytes
print-type-size     field `.seed`: 16 bytes
print-type-size     field `.alg`: 4 bytes
print-type-size     padding: 4 bytes
print-type-size     field `.algdata`: 8 bytes, alignment: 8 bytes
print-type-size type: `hashbrown::raw::RawIterRange<(&str, datasize::MemUsageNode)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.next_ctrl`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.data`: 8 bytes
print-type-size     field `.current_group`: 2 bytes
print-type-size     end padding: 6 bytes
print-type-size type: `hashbrown::raw::RawTable<(&str, datasize::MemUsageNode)>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.table`: 32 bytes
print-type-size type: `hashbrown::raw::RawTableInner<std::alloc::Global>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.bucket_mask`: 8 bytes
print-type-size     field `.growth_left`: 8 bytes
print-type-size     field `.items`: 8 bytes
print-type-size     field `.ctrl`: 8 bytes
print-type-size type: `rug::integer::SmallInteger`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size     field `.limbs`: 16 bytes
print-type-size type: `rug::integer::big::ParseIncomplete`: 32 bytes, alignment: 8 bytes
print-type-size     field `.digits`: 24 bytes
print-type-size     field `.radix`: 4 bytes
print-type-size     field `.is_negative`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::hash::sip::State`: 32 bytes, alignment: 8 bytes
print-type-size     field `.v0`: 8 bytes
print-type-size     field `.v2`: 8 bytes
print-type-size     field `.v1`: 8 bytes
print-type-size     field `.v3`: 8 bytes
print-type-size type: `std::iter::StepBy<std::ops::Range<usize>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size     field `.step`: 8 bytes
print-type-size     field `.first_take`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::mem::ManuallyDrop<hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.value`: 32 bytes
print-type-size type: `std::mem::MaybeUninit<hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 32 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 32 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner<std::alloc::Global>>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, rug::integer::ParseIntegerError>, rug::integer::big::ParseIncomplete>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Break`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<hashbrown::raw::RawTableInner<std::alloc::Global>, hashbrown::TryReserveError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<rug::integer::big::ParseIncomplete, rug::integer::ParseIntegerError>`: 32 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 32 bytes
print-type-size         field `.0`: 32 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::thread::__LocalKeyInner<std::cell::Cell<(u64, u64)>>`: 32 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size     field `.dtor_state`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `unwind::libunwind::_Unwind_Exception`: 32 bytes, alignment: 8 bytes
print-type-size     field `.exception_class`: 8 bytes
print-type-size     field `.exception_cleanup`: 8 bytes
print-type-size     field `.private`: 16 bytes
print-type-size type: `[closure@std::rt::begin_panic<&str>::{closure#0}]`: 24 bytes, alignment: 8 bytes
print-type-size     end padding: 24 bytes
print-type-size type: `hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner<std::alloc::Global>, [closure@hashbrown::raw::RawTableInner<std::alloc::Global>::rehash_in_place::{closure#0}]>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.dropfn`: 16 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `int_field::IntField`: 24 bytes, alignment: 8 bytes
print-type-size     field `.i`: 16 bytes
print-type-size     field `.m`: 8 bytes
print-type-size type: `lazy_static::lazy::Lazy<rug::Integer>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.0`: 16 bytes
print-type-size     field `.1`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rug::integer::big::InvertIncomplete<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.sinverse`: 16 bytes
print-type-size     field `.modulo`: 8 bytes
print-type-size type: `rug::integer::big::PrivateUnsignedPrimitive`: 24 bytes, alignment: 8 bytes
print-type-size     field `.bytes`: 8 bytes
print-type-size     field `.bits`: 8 bytes
print-type-size     field `.nails`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::cell::Cell<(u64, u64)>>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.value`: 24 bytes
print-type-size type: `std::io::error::Custom`: 24 bytes, alignment: 8 bytes
print-type-size     field `.error`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::io::error::SimpleMessage`: 24 bytes, alignment: 8 bytes
print-type-size     field `.message`: 16 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `std::option::Option<(std::alloc::Layout, usize)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(std::ptr::NonNull<u8>, std::alloc::Layout)>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<rug::integer::big::InvertIncomplete<'_>>`: 24 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 24 bytes
print-type-size         field `.0`: 24 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::Location<'_>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.file`: 16 bytes
print-type-size     field `.line`: 4 bytes
print-type-size     field `.col`: 4 bytes
print-type-size type: `std::result::Result<rug::Integer, rug::Integer>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::collections::hash_map::RandomState, std::thread::AccessError>`: 24 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::slice::ChunksMut<'_, u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.v`: 16 bytes
print-type-size     field `.chunk_size`: 8 bytes
print-type-size type: `std::string::String`: 24 bytes, alignment: 8 bytes
print-type-size     field `.vec`: 24 bytes
print-type-size type: `std::sys::common::thread_local::lazy::LazyKeyInner<std::cell::Cell<(u64, u64)>>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 24 bytes
print-type-size type: `std::vec::Vec<u8>`: 24 bytes, alignment: 8 bytes
print-type-size     field `.buf`: 16 bytes
print-type-size     field `.len`: 8 bytes
print-type-size type: `FieldT`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `IntField`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `FBls12381`: 0 bytes
print-type-size     variant `FBn254`: 0 bytes
print-type-size type: `InlineFieldV`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     end padding: 7 bytes
print-type-size type: `[closure@hashbrown::raw::RawTable<(&str, datasize::MemUsageNode)>::find<[closure@hashbrown::map::equivalent_key<&str, &str, datasize::MemUsageNode>::{closure#0}]>::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::is_in_same_group::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::prepare_resize::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::rehash_in_place::{closure#0}]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `[closure@src/lib.rs:66:44: 66:46]`: 16 bytes, alignment: 8 bytes
print-type-size     end padding: 16 bytes
print-type-size type: `alloc::raw_vec::RawVec<u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 0 bytes
print-type-size     field `.cap`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `alloc::sync::WeakInner<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.weak`: 8 bytes
print-type-size     field `.strong`: 8 bytes
print-type-size type: `core::core_arch::simd::i64x2`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `core::core_arch::simd::i8x16`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 1 bytes
print-type-size     field `.1`: 1 bytes
print-type-size     field `.2`: 1 bytes
print-type-size     field `.3`: 1 bytes
print-type-size     field `.4`: 1 bytes
print-type-size     field `.5`: 1 bytes
print-type-size     field `.6`: 1 bytes
print-type-size     field `.7`: 1 bytes
print-type-size     field `.8`: 1 bytes
print-type-size     field `.9`: 1 bytes
print-type-size     field `.10`: 1 bytes
print-type-size     field `.11`: 1 bytes
print-type-size     field `.12`: 1 bytes
print-type-size     field `.13`: 1 bytes
print-type-size     field `.14`: 1 bytes
print-type-size     field `.15`: 1 bytes
print-type-size type: `core::fmt::ArgumentV1<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size     field `.formatter`: 8 bytes
print-type-size type: `gmp_mpfr_sys::gmp::mpz_t`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `gmp_mpfr_sys::gmp::randseed_t`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `hashbrown::TryReserveError`: 16 bytes, alignment: 8 bytes
print-type-size     variant `AllocError`: 16 bytes
print-type-size         field `.layout`: 16 bytes
print-type-size     variant `CapacityOverflow`: 0 bytes
print-type-size type: `hashbrown::raw::ProbeSeq`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pos`: 8 bytes
print-type-size     field `.stride`: 8 bytes
print-type-size type: `hashbrown::raw::TableLayout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.ctrl_align`: 8 bytes
print-type-size type: `hashbrown::raw::sse2::Group`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `hashbrown::raw::sse2::Group::static_empty::AlignedBytes`: 16 bytes, alignment: 16 bytes
print-type-size     field `._align`: 0 bytes
print-type-size     field `.bytes`: 16 bytes
print-type-size type: `lazy_static::lazy::Lazy<std::sync::Arc<rug::Integer>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `rug::Integer`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `rug::integer::small::Mpz`: 16 bytes, alignment: 8 bytes
print-type-size     field `.alloc`: 4 bytes
print-type-size     field `.size`: 4 bytes
print-type-size     field `.d`: 8 bytes
print-type-size type: `std::alloc::Layout`: 16 bytes, alignment: 8 bytes
print-type-size     field `.size`: 8 bytes
print-type-size     field `.align`: 8 bytes
print-type-size type: `std::arch::x86_64::__m128i`: 16 bytes, alignment: 16 bytes
print-type-size     field `.0`: 8 bytes
print-type-size     field `.1`: 8 bytes
print-type-size type: `std::boxed::Box<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::boxed::Box<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 16 bytes
print-type-size type: `std::cell::Cell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::Cell<std::option::Option<rug::Integer>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<(u64, u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<rug::Integer>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::collections::hash_map::RandomState`: 16 bytes, alignment: 8 bytes
print-type-size     field `.k0`: 8 bytes
print-type-size     field `.k1`: 8 bytes
print-type-size type: `std::fmt::rt::v1::Count`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Is`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Param`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Implied`: 0 bytes
print-type-size type: `std::io::Write::write_fmt::Adapter<'_, std::sys::unix::stdio::Stderr>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.error`: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::io::error::ErrorData<&std::io::error::Custom>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `SimpleMessage`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Custom`: 15 bytes
print-type-size         padding: 7 bytes
print-type-size         field `.0`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Os`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Simple`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::iter::Map<std::slice::Iter<'_, u64>, for<'a> fn(&'a u64) -> usize {<u64 as datasize::DataSize>::estimate_heap_size}>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.f`: 0 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<'_, u64>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::iter::Rev<std::slice::Iter<'_, u8>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<rug::Integer>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.value`: 16 bytes
print-type-size type: `std::mem::MaybeUninit<rug::Integer>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 16 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 16 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>, usize>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Break`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::ops::Range<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&[std::fmt::rt::v1::Argument]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&mut u64, &u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u64, &u64)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<(&u8, &u8)>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<FieldT>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<alloc::sync::WeakInner<'_>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<i64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<rug::Integer>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::time::Duration>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u64>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<usize>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panicking::r#try::Data<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]>, ()>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Data`: 16 bytes
print-type-size         field `.r`: 0 bytes
print-type-size         field `.f`: 8 bytes
print-type-size         field `.p`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::NonNull<[std::mem::MaybeUninit<u64>]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::NonNull<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::any::Any + std::marker::Send>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::Unique<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 16 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<[u8]>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 16 bytes
print-type-size         field `.const_ptr`: 16 bytes
print-type-size         field `.mut_ptr`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 16 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<(), hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<FieldV, &FullFieldV>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<InlineFieldV, &FullFieldV>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<rug::Integer, rug::integer::ParseIntegerError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<[u8]>, std::alloc::AllocError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<usize, hashbrown::TryReserveError>`: 16 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 16 bytes
print-type-size         field `.0`: 16 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::io::Error>`: 16 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::rt::begin_panic::PanicPayload<&str>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 16 bytes
print-type-size type: `std::slice::Iter<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::Iter<'_, u8>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::slice::IterMut<'_, u64>`: 16 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.end`: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::str::Chars<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.iter`: 16 bytes
print-type-size type: `std::sys_common::once::futex::CompletionGuard<'_>`: 16 bytes, alignment: 8 bytes
print-type-size     field `.state`: 8 bytes
print-type-size     field `.set_state_on_drop_to`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::time::Duration`: 16 bytes, alignment: 8 bytes
print-type-size     field `.secs`: 8 bytes
print-type-size     field `.nanos`: 4 bytes
print-type-size     end padding: 4 bytes
print-type-size type: `std::iter::Rev<std::ops::RangeInclusive<u32>>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.iter`: 12 bytes
print-type-size type: `std::ops::RangeInclusive<u32>`: 12 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size     field `.exhausted`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `FieldV`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `[closure@hashbrown::map::equivalent_key<&str, &str, datasize::MemUsageNode>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::map::make_hasher<&str, &str, datasize::MemUsageNode, std::collections::hash_map::RandomState>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::raw::RawTable<(&str, datasize::MemUsageNode)>::reserve_rehash<[closure@hashbrown::map::make_hasher<&str, &str, datasize::MemUsageNode, std::collections::hash_map::RandomState>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@hashbrown::raw::RawTableInner<std::alloc::Global>::fallible_with_capacity::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@lazy_static::lazy::Lazy<rug::Integer>::get<fn() -> rug::Integer {<ff_field::f_bls12381::FMOD as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@lazy_static::lazy::Lazy<rug::Integer>::get<fn() -> rug::Integer {<ff_field::f_bn254::FMOD as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@lazy_static::lazy::Lazy<std::sync::Arc<rug::Integer>>::get<fn() -> std::sync::Arc<rug::Integer> {<ff_field::f_bls12381::FMOD_ARC as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@lazy_static::lazy::Lazy<std::sync::Arc<rug::Integer>>::get<fn() -> std::sync::Arc<rug::Integer> {<ff_field::f_bn254::FMOD_ARC as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@src/lib.rs:72:43: 72:45]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::collections::hash_map::RandomState::new::KEYS::__getit::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::fmt::format::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<&std::io::error::Custom, [closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::decode_repr<std::boxed::Box<std::io::error::Custom>, [closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sync::Once::call_once<[closure@lazy_static::lazy::Lazy<rug::Integer>::get<fn() -> rug::Integer {<ff_field::f_bls12381::FMOD as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sync::Once::call_once<[closure@lazy_static::lazy::Lazy<rug::Integer>::get<fn() -> rug::Integer {<ff_field::f_bn254::FMOD as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sync::Once::call_once<[closure@lazy_static::lazy::Lazy<std::sync::Arc<rug::Integer>>::get<fn() -> std::sync::Arc<rug::Integer> {<ff_field::f_bls12381::FMOD_ARC as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sync::Once::call_once<[closure@lazy_static::lazy::Lazy<std::sync::Arc<rug::Integer>>::get<fn() -> std::sync::Arc<rug::Integer> {<ff_field::f_bn254::FMOD_ARC as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]`: 8 bytes, alignment: 8 bytes
print-type-size     end padding: 8 bytes
print-type-size type: `hashbrown::raw::Bucket<(&str, datasize::MemUsageNode)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `rug::macros::CastPtr<rug::integer::small::Mpz>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `rug::macros::CastPtrMut<gmp_mpfr_sys::gmp::mpz_t>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `rug::macros::CastPtrMut<rug::Integer>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::any::TypeId`: 8 bytes, alignment: 8 bytes
print-type-size     field `.t`: 8 bytes
print-type-size type: `std::boxed::Box<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<FullFieldV>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<alloc::sync::ArcInner<rug::Integer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::boxed::Box<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::cell::Cell<std::option::Option<std::sync::Arc<rug::Integer>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::option::Option<std::sync::Arc<rug::Integer>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<std::ptr::NonNull<u64>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::cell::UnsafeCell<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::io::Error`: 8 bytes, alignment: 8 bytes
print-type-size     field `.repr`: 8 bytes
print-type-size type: `std::io::error::repr_bitpacked::Repr`: 8 bytes, alignment: 8 bytes
print-type-size     field `.1`: 0 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<FullFieldV>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::boxed::Box<alloc::sync::ArcInner<rug::Integer>>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::ManuallyDrop<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::mem::MaybeUninit<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `MaybeUninit`: 8 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 8 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::option::Option<std::convert::Infallible>, &u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::alloc::AllocError>, std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::thread::AccessError>, &std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Continue`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::ops::Range<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     field `.start`: 4 bytes
print-type-size     field `.end`: 4 bytes
print-type-size type: `std::ops::RangeFrom<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.start`: 8 bytes
print-type-size type: `std::ops::RangeTo<usize>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.end`: 8 bytes
print-type-size type: `std::option::Option<&mut (&str, datasize::MemUsageNode)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut std::option::Option<std::cell::Cell<(u64, u64)>>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&mut u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&std::fmt::Arguments<'_>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<&u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<[closure@lazy_static::lazy::Lazy<rug::Integer>::get<fn() -> rug::Integer {<ff_field::f_bls12381::FMOD as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<[closure@lazy_static::lazy::Lazy<rug::Integer>::get<fn() -> rug::Integer {<ff_field::f_bn254::FMOD as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<[closure@lazy_static::lazy::Lazy<std::sync::Arc<rug::Integer>>::get<fn() -> std::sync::Arc<rug::Integer> {<ff_field::f_bls12381::FMOD_ARC as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<[closure@lazy_static::lazy::Lazy<std::sync::Arc<rug::Integer>>::get<fn() -> std::sync::Arc<rug::Integer> {<ff_field::f_bn254::FMOD_ARC as lazy_static::__Deref>::deref::__static_ref_initialize}>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<fn(*mut u8)>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<hashbrown::raw::Bucket<(&str, datasize::MemUsageNode)>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::ptr::NonNull<u8>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sync::Arc<rug::Integer>>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Some`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::panic::AssertUnwindSafe<[closure@std::sys::common::thread_local::fast_local::fast::destroy_value<std::cell::Cell<(u64, u64)>>::{closure#0}]>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::Alignment`: 8 bytes, alignment: 8 bytes
print-type-size     field `.0`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn core::panic::BoxMeUp>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner<std::alloc::Global>, usize) -> u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::any::Any + std::marker::Send>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Debug>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::fmt::Write>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::DynMetadata<dyn std::ops::FnMut(usize) -> bool>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.vtable_ptr`: 8 bytes
print-type-size type: `std::ptr::NonNull<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<(&str, datasize::MemUsageNode)>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<FullFieldV>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<alloc::sync::ArcInner<rug::Integer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::ffi::c_void>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<std::io::error::SimpleMessage>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::NonNull<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<&str>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<FullFieldV>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<alloc::sync::ArcInner<rug::Integer>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<std::io::error::Custom>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::Unique<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `._marker`: 0 bytes
print-type-size     field `.pointer`: 8 bytes
print-type-size type: `std::ptr::alignment::AlignmentEnum64`: 8 bytes, alignment: 8 bytes
print-type-size     discriminant: 8 bytes
print-type-size     variant `_Align1Shl0`: 0 bytes
print-type-size     variant `_Align1Shl1`: 0 bytes
print-type-size     variant `_Align1Shl2`: 0 bytes
print-type-size     variant `_Align1Shl3`: 0 bytes
print-type-size     variant `_Align1Shl4`: 0 bytes
print-type-size     variant `_Align1Shl5`: 0 bytes
print-type-size     variant `_Align1Shl6`: 0 bytes
print-type-size     variant `_Align1Shl7`: 0 bytes
print-type-size     variant `_Align1Shl8`: 0 bytes
print-type-size     variant `_Align1Shl9`: 0 bytes
print-type-size     variant `_Align1Shl10`: 0 bytes
print-type-size     variant `_Align1Shl11`: 0 bytes
print-type-size     variant `_Align1Shl12`: 0 bytes
print-type-size     variant `_Align1Shl13`: 0 bytes
print-type-size     variant `_Align1Shl14`: 0 bytes
print-type-size     variant `_Align1Shl15`: 0 bytes
print-type-size     variant `_Align1Shl16`: 0 bytes
print-type-size     variant `_Align1Shl17`: 0 bytes
print-type-size     variant `_Align1Shl18`: 0 bytes
print-type-size     variant `_Align1Shl19`: 0 bytes
print-type-size     variant `_Align1Shl20`: 0 bytes
print-type-size     variant `_Align1Shl21`: 0 bytes
print-type-size     variant `_Align1Shl22`: 0 bytes
print-type-size     variant `_Align1Shl23`: 0 bytes
print-type-size     variant `_Align1Shl24`: 0 bytes
print-type-size     variant `_Align1Shl25`: 0 bytes
print-type-size     variant `_Align1Shl26`: 0 bytes
print-type-size     variant `_Align1Shl27`: 0 bytes
print-type-size     variant `_Align1Shl28`: 0 bytes
print-type-size     variant `_Align1Shl29`: 0 bytes
print-type-size     variant `_Align1Shl30`: 0 bytes
print-type-size     variant `_Align1Shl31`: 0 bytes
print-type-size     variant `_Align1Shl32`: 0 bytes
print-type-size     variant `_Align1Shl33`: 0 bytes
print-type-size     variant `_Align1Shl34`: 0 bytes
print-type-size     variant `_Align1Shl35`: 0 bytes
print-type-size     variant `_Align1Shl36`: 0 bytes
print-type-size     variant `_Align1Shl37`: 0 bytes
print-type-size     variant `_Align1Shl38`: 0 bytes
print-type-size     variant `_Align1Shl39`: 0 bytes
print-type-size     variant `_Align1Shl40`: 0 bytes
print-type-size     variant `_Align1Shl41`: 0 bytes
print-type-size     variant `_Align1Shl42`: 0 bytes
print-type-size     variant `_Align1Shl43`: 0 bytes
print-type-size     variant `_Align1Shl44`: 0 bytes
print-type-size     variant `_Align1Shl45`: 0 bytes
print-type-size     variant `_Align1Shl46`: 0 bytes
print-type-size     variant `_Align1Shl47`: 0 bytes
print-type-size     variant `_Align1Shl48`: 0 bytes
print-type-size     variant `_Align1Shl49`: 0 bytes
print-type-size     variant `_Align1Shl50`: 0 bytes
print-type-size     variant `_Align1Shl51`: 0 bytes
print-type-size     variant `_Align1Shl52`: 0 bytes
print-type-size     variant `_Align1Shl53`: 0 bytes
print-type-size     variant `_Align1Shl54`: 0 bytes
print-type-size     variant `_Align1Shl55`: 0 bytes
print-type-size     variant `_Align1Shl56`: 0 bytes
print-type-size     variant `_Align1Shl57`: 0 bytes
print-type-size     variant `_Align1Shl58`: 0 bytes
print-type-size     variant `_Align1Shl59`: 0 bytes
print-type-size     variant `_Align1Shl60`: 0 bytes
print-type-size     variant `_Align1Shl61`: 0 bytes
print-type-size     variant `_Align1Shl62`: 0 bytes
print-type-size     variant `_Align1Shl63`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<()>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrComponents<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.data_address`: 8 bytes
print-type-size     field `.metadata`: 0 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u64>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::ptr::metadata::PtrRepr<u8>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `PtrRepr`: 8 bytes
print-type-size         field `.const_ptr`: 8 bytes
print-type-size         field `.mut_ptr`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size         field `.components`: 8 bytes, offset: 0 bytes, alignment: 8 bytes
print-type-size type: `std::result::Result<&std::cell::Cell<(u64, u64)>, std::thread::AccessError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::io::Error>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Err`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, ()>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::ptr::NonNull<u8>, std::alloc::AllocError>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<u32, std::num::ParseIntError>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 7 bytes
print-type-size         padding: 3 bytes
print-type-size         field `.0`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::result::Result<u32, u32>`: 8 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `Ok`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `Err`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size type: `std::result::Result<u64, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::result::Result<usize, std::convert::Infallible>`: 8 bytes, alignment: 8 bytes
print-type-size     variant `Ok`: 8 bytes
print-type-size         field `.0`: 8 bytes
print-type-size type: `std::sync::Arc<rug::Integer>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.phantom`: 0 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::OnceState`: 8 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `std::sync::Weak<rug::Integer>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.ptr`: 8 bytes
print-type-size type: `std::sync::atomic::AtomicUsize`: 8 bytes, alignment: 8 bytes
print-type-size     field `.v`: 8 bytes
print-type-size type: `std::sys_common::once::futex::OnceState`: 8 bytes, alignment: 4 bytes
print-type-size     field `.set_state_to`: 4 bytes
print-type-size     field `.poisoned`: 1 bytes
print-type-size     end padding: 3 bytes
print-type-size type: `std::thread::LocalKey<std::cell::Cell<(u64, u64)>>`: 8 bytes, alignment: 8 bytes
print-type-size     field `.inner`: 8 bytes
print-type-size type: `core::time::Nanoseconds`: 4 bytes, alignment: 4 bytes
print-type-size     field `.0`: 4 bytes
print-type-size type: `std::cell::Cell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::cell::UnsafeCell<u32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::ManuallyDrop<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     field `.value`: 4 bytes
print-type-size type: `std::mem::MaybeUninit<i32>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `MaybeUninit`: 4 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 4 bytes
print-type-size type: `std::option::Option<char>`: 4 bytes, alignment: 4 bytes
print-type-size     variant `Some`: 4 bytes
print-type-size         field `.0`: 4 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::sync::Once`: 4 bytes, alignment: 4 bytes
print-type-size     field `.inner`: 4 bytes
print-type-size type: `std::sync::atomic::AtomicU32`: 4 bytes, alignment: 4 bytes
print-type-size     field `.v`: 4 bytes
print-type-size type: `std::sys_common::once::futex::Once`: 4 bytes, alignment: 4 bytes
print-type-size     field `.state`: 4 bytes
print-type-size type: `unwind::libunwind::_Unwind_Action`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_UA_SEARCH_PHASE`: 0 bytes
print-type-size     variant `_UA_CLEANUP_PHASE`: 0 bytes
print-type-size     variant `_UA_HANDLER_FRAME`: 0 bytes
print-type-size     variant `_UA_FORCE_UNWIND`: 0 bytes
print-type-size     variant `_UA_END_OF_STACK`: 0 bytes
print-type-size type: `unwind::libunwind::_Unwind_Reason_Code`: 4 bytes, alignment: 4 bytes
print-type-size     discriminant: 4 bytes
print-type-size     variant `_URC_NO_REASON`: 0 bytes
print-type-size     variant `_URC_FOREIGN_EXCEPTION_CAUGHT`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE2_ERROR`: 0 bytes
print-type-size     variant `_URC_FATAL_PHASE1_ERROR`: 0 bytes
print-type-size     variant `_URC_NORMAL_STOP`: 0 bytes
print-type-size     variant `_URC_END_OF_STACK`: 0 bytes
print-type-size     variant `_URC_HANDLER_FOUND`: 0 bytes
print-type-size     variant `_URC_INSTALL_CONTEXT`: 0 bytes
print-type-size     variant `_URC_CONTINUE_UNWIND`: 0 bytes
print-type-size     variant `_URC_FAILURE`: 0 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMask`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `hashbrown::raw::bitmask::BitMaskIter`: 2 bytes, alignment: 2 bytes
print-type-size     field `.0`: 2 bytes
print-type-size type: `FieldTag`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `FullField`: 0 bytes
print-type-size     variant `InlineBls12381`: 0 bytes
print-type-size     variant `InlineBn254`: 0 bytes
print-type-size type: `InlineFieldTag`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Bls12381`: 0 bytes
print-type-size     variant `Bn254`: 0 bytes
print-type-size type: `_::<impl _::_serde::Deserialize<'de> for FieldT>::deserialize::__Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__field0`: 0 bytes
print-type-size     variant `__field1`: 0 bytes
print-type-size     variant `__field2`: 0 bytes
print-type-size type: `_::<impl _::_serde::Deserialize<'de> for FullFieldV>::deserialize::__Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__field0`: 0 bytes
print-type-size     variant `__field1`: 0 bytes
print-type-size     variant `__field2`: 0 bytes
print-type-size type: `core::panicking::AssertKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Eq`: 0 bytes
print-type-size     variant `Ne`: 0 bytes
print-type-size     variant `Match`: 0 bytes
print-type-size type: `ff::derive::subtle::Choice`: 1 bytes, alignment: 1 bytes
print-type-size     field `.0`: 1 bytes
print-type-size type: `hashbrown::raw::Fallibility`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Fallible`: 0 bytes
print-type-size     variant `Infallible`: 0 bytes
print-type-size type: `int_field::_::<impl _::_serde::Deserialize<'de> for int_field::IntField>::deserialize::__Field`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__field0`: 0 bytes
print-type-size     variant `__field1`: 0 bytes
print-type-size     variant `__ignore`: 0 bytes
print-type-size type: `rug::integer::Order`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Lsf`: 0 bytes
print-type-size     variant `LsfLe`: 0 bytes
print-type-size     variant `LsfBe`: 0 bytes
print-type-size     variant `Msf`: 0 bytes
print-type-size     variant `MsfLe`: 0 bytes
print-type-size     variant `MsfBe`: 0 bytes
print-type-size type: `rug::integer::ParseIntegerError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `rug::integer::big::ParseErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `NoDigits`: 0 bytes
print-type-size type: `std::cell::Cell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cell::UnsafeCell<std::sys::common::thread_local::fast_local::fast::DtorState>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::cmp::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Less`: 0 bytes
print-type-size     variant `Equal`: 0 bytes
print-type-size     variant `Greater`: 0 bytes
print-type-size type: `std::ffi::c_void`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `__variant1`: 0 bytes
print-type-size     variant `__variant2`: 0 bytes
print-type-size type: `std::fmt::rt::v1::Alignment`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Left`: 0 bytes
print-type-size     variant `Right`: 0 bytes
print-type-size     variant `Center`: 0 bytes
print-type-size     variant `Unknown`: 0 bytes
print-type-size type: `std::io::ErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `NotFound`: 0 bytes
print-type-size     variant `PermissionDenied`: 0 bytes
print-type-size     variant `ConnectionRefused`: 0 bytes
print-type-size     variant `ConnectionReset`: 0 bytes
print-type-size     variant `HostUnreachable`: 0 bytes
print-type-size     variant `NetworkUnreachable`: 0 bytes
print-type-size     variant `ConnectionAborted`: 0 bytes
print-type-size     variant `NotConnected`: 0 bytes
print-type-size     variant `AddrInUse`: 0 bytes
print-type-size     variant `AddrNotAvailable`: 0 bytes
print-type-size     variant `NetworkDown`: 0 bytes
print-type-size     variant `BrokenPipe`: 0 bytes
print-type-size     variant `AlreadyExists`: 0 bytes
print-type-size     variant `WouldBlock`: 0 bytes
print-type-size     variant `NotADirectory`: 0 bytes
print-type-size     variant `IsADirectory`: 0 bytes
print-type-size     variant `DirectoryNotEmpty`: 0 bytes
print-type-size     variant `ReadOnlyFilesystem`: 0 bytes
print-type-size     variant `FilesystemLoop`: 0 bytes
print-type-size     variant `StaleNetworkFileHandle`: 0 bytes
print-type-size     variant `InvalidInput`: 0 bytes
print-type-size     variant `InvalidData`: 0 bytes
print-type-size     variant `TimedOut`: 0 bytes
print-type-size     variant `WriteZero`: 0 bytes
print-type-size     variant `StorageFull`: 0 bytes
print-type-size     variant `NotSeekable`: 0 bytes
print-type-size     variant `FilesystemQuotaExceeded`: 0 bytes
print-type-size     variant `FileTooLarge`: 0 bytes
print-type-size     variant `ResourceBusy`: 0 bytes
print-type-size     variant `ExecutableFileBusy`: 0 bytes
print-type-size     variant `Deadlock`: 0 bytes
print-type-size     variant `CrossesDevices`: 0 bytes
print-type-size     variant `TooManyLinks`: 0 bytes
print-type-size     variant `InvalidFilename`: 0 bytes
print-type-size     variant `ArgumentListTooLong`: 0 bytes
print-type-size     variant `Interrupted`: 0 bytes
print-type-size     variant `Unsupported`: 0 bytes
print-type-size     variant `UnexpectedEof`: 0 bytes
print-type-size     variant `OutOfMemory`: 0 bytes
print-type-size     variant `Other`: 0 bytes
print-type-size     variant `Uncategorized`: 0 bytes
print-type-size type: `std::mem::ManuallyDrop<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     field `.value`: 1 bytes
print-type-size type: `std::mem::MaybeUninit<u8>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `MaybeUninit`: 1 bytes
print-type-size         field `.uninit`: 0 bytes
print-type-size         field `.value`: 1 bytes
print-type-size type: `std::num::IntErrorKind`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Empty`: 0 bytes
print-type-size     variant `InvalidDigit`: 0 bytes
print-type-size     variant `PosOverflow`: 0 bytes
print-type-size     variant `NegOverflow`: 0 bytes
print-type-size     variant `Zero`: 0 bytes
print-type-size type: `std::num::ParseIntError`: 1 bytes, alignment: 1 bytes
print-type-size     field `.kind`: 1 bytes
print-type-size type: `std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::fmt::Error>>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Continue`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Break`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::option::Option<InlineFieldTag>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<int_field::_::<impl _::_serde::Deserialize<'de> for int_field::IntField>::deserialize::__Field>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::cmp::Ordering>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::io::ErrorKind>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::num::ParseIntError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Some`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::option::Option<std::sys::unix::stdio::Stderr>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size     variant `Some`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), ()>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<(), std::fmt::Error>`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Ok`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, rug::integer::ParseIntegerError>`: 1 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 1 bytes
print-type-size         field `.0`: 1 bytes
print-type-size type: `std::sync::atomic::Ordering`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Relaxed`: 0 bytes
print-type-size     variant `Release`: 0 bytes
print-type-size     variant `Acquire`: 0 bytes
print-type-size     variant `AcqRel`: 0 bytes
print-type-size     variant `SeqCst`: 0 bytes
print-type-size type: `std::sys::common::thread_local::fast_local::fast::DtorState`: 1 bytes, alignment: 1 bytes
print-type-size     discriminant: 1 bytes
print-type-size     variant `Unregistered`: 0 bytes
print-type-size     variant `Registered`: 0 bytes
print-type-size     variant `RunningOrHasRun`: 0 bytes
print-type-size type: `[closure@<std::cmp::Ordering as std::option::SpecOptionPartialEq>::eq::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::cmp::Ordering as std::option::SpecOptionPartialEq>::eq::{closure#1}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::io::error::repr_bitpacked::Repr as std::ops::Drop>::drop::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<std::str::Chars<'_> as std::iter::Iterator>::next::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, u64>, for<'a> fn(&'a u64) -> usize {<u64 as datasize::DataSize>::estimate_heap_size}>>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@src/ff_field.rs:26:22: 26:32]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@src/lib.rs:336:31: 336:34]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@src/lib.rs:336:60: 336:66]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::collections::hash_map::RandomState::new::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::io::error::repr_bitpacked::Repr::data::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<&u64, usize, usize, for<'a> fn(&'a u64) -> usize {<u64 as datasize::DataSize>::estimate_heap_size}, [closure@<usize as std::iter::Sum>::sum<std::iter::Map<std::slice::Iter<'_, u64>, for<'a> fn(&'a u64) -> usize {<u64 as datasize::DataSize>::estimate_heap_size}>>::{closure#0}]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `[closure@std::iter::adapters::map::map_fold<(&u8, &u8), ff::derive::subtle::Choice, ff::derive::subtle::Choice, [closure@src/ff_field.rs:26:22: 26:32], [closure@src/ff_field.rs:26:22: 26:32]>::{closure#0}]`: 0 bytes, alignment: 1 bytes
print-type-size type: `_::<impl _::_serde::Deserialize<'de> for FieldT>::deserialize::__FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `_::<impl _::_serde::Deserialize<'de> for FieldT>::deserialize::__Visitor<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.lifetime`: 0 bytes
print-type-size type: `_::<impl _::_serde::Deserialize<'de> for FullFieldV>::deserialize::__FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `_::<impl _::_serde::Deserialize<'de> for FullFieldV>::deserialize::__Visitor<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.lifetime`: 0 bytes
print-type-size type: `_::_serde::de::IgnoredAny`: 0 bytes, alignment: 1 bytes
print-type-size type: `core::fmt::UnsafeArg`: 0 bytes, alignment: 1 bytes
print-type-size     field `._private`: 0 bytes
print-type-size type: `ff_field::f_bls12381::FMOD`: 0 bytes, alignment: 1 bytes
print-type-size     field `.__private_field`: 0 bytes
print-type-size type: `ff_field::f_bls12381::FMOD_ARC`: 0 bytes, alignment: 1 bytes
print-type-size     field `.__private_field`: 0 bytes
print-type-size type: `ff_field::f_bls12381::_::<impl _::_serde::Deserialize<'de> for ff_field::f_bls12381::Ft>::deserialize::__Visitor<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.lifetime`: 0 bytes
print-type-size type: `ff_field::f_bn254::FMOD`: 0 bytes, alignment: 1 bytes
print-type-size     field `.__private_field`: 0 bytes
print-type-size type: `ff_field::f_bn254::FMOD_ARC`: 0 bytes, alignment: 1 bytes
print-type-size     field `.__private_field`: 0 bytes
print-type-size type: `ff_field::f_bn254::_::<impl _::_serde::Deserialize<'de> for ff_field::f_bn254::Ft>::deserialize::__Visitor<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.lifetime`: 0 bytes
print-type-size type: `int_field::_::<impl _::_serde::Deserialize<'de> for int_field::IntField>::deserialize::__FieldVisitor`: 0 bytes, alignment: 1 bytes
print-type-size type: `int_field::_::<impl _::_serde::Deserialize<'de> for int_field::IntField>::deserialize::__Visitor<'_>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.marker`: 0 bytes
print-type-size     field `.lifetime`: 0 bytes
print-type-size type: `std::alloc::AllocError`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::alloc::Global`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::convert::Infallible`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::fmt::Error`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&()>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&mut u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&str>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<&u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<(&str, datasize::MemUsageNode)>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<FieldT>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<FullFieldV>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<alloc::sync::ArcInner<rug::Integer>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn core::panic::BoxMeUp>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn for<'a> std::ops::Fn(&'a mut hashbrown::raw::RawTableInner<std::alloc::Global>, usize) -> u64>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::any::Any + std::marker::Send>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::error::Error + std::marker::Send + std::marker::Sync>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Debug>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::fmt::Write>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<dyn std::ops::FnMut(usize) -> bool>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ff_field::f_bls12381::Ft>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<ff_field::f_bn254::Ft>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<int_field::IntField>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::hash::sip::Sip13Rounds>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::Custom>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<std::io::error::ErrorData<std::boxed::Box<std::io::error::Custom>>>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::marker::PhantomData<u8>`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::mem::ManuallyDrop<()>`: 0 bytes, alignment: 1 bytes
print-type-size     field `.value`: 0 bytes
print-type-size type: `std::ops::RangeFull`: 0 bytes, alignment: 1 bytes
print-type-size type: `std::option::Option<std::convert::Infallible>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `None`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::alloc::AllocError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::fmt::Error>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::result::Result<std::convert::Infallible, std::thread::AccessError>`: 0 bytes, alignment: 1 bytes
print-type-size     variant `Err`: 0 bytes
print-type-size         field `.0`: 0 bytes
print-type-size type: `std::sys::unix::stdio::Stderr`: 0 bytes, alignment: 1 bytes
print-type-size     field `.0`: 0 bytes
print-type-size type: `std::thread::AccessError`: 0 bytes, alignment: 1 bytes
print-type-size type: `unwind::libunwind::_Unwind_Context`: 0 bytes, alignment: 1 bytes
